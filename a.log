Running all tests in parallel with console output and error logging...
(go test -v -race -count=1 ./integration_tests/commands/resp/... & \
	 go test -v -race -count=1 ./integration_tests/commands/websocket/... & \
	 go test -v -race -count=1 ./integration_tests/commands/http/... & \
	 go test -v -race -count=1 ./integration_tests/commands/abort/... & \
	 go test -v -race -count=1 ./integration_tests/commands/async/... & \
	 wait)
=== RUN   TestAbortCommand
Starting the test server on port 8083
2024/11/06 02:53:30 INFO also listening HTTP on port=8083
Starting the test server on port 8739
2024/11/06 02:53:30 WARN running without authentication, consider setting a password
2024/11/06 02:53:30 INFO also listenting WebSocket on port=8380
Starting the test server on port 8740
2024/11/06 02:53:31 INFO ready to accept and serve requests on port=7379
=== RUN   TestAPPEND
=== RUN   TestAPPEND/APPEND_and_GET_a_new_Val
=== RUN   TestAPPEND/APPEND_to_an_exisiting_key_and_GET
=== RUN   TestAPPEND/APPEND_without_input_value
=== RUN   TestAPPEND/APPEND_empty_string_to_an_exsisting_key_with_empty_string
=== RUN   TestAPPEND/APPEND_to_key_created_using_LPUSH
=== RUN   TestAPPEND/APPEND_value_with_leading_zeros
=== RUN   TestAPPEND/APPEND_to_key_created_using_SADD
--- PASS: TestAPPEND (0.08s)
    --- PASS: TestAPPEND/APPEND_and_GET_a_new_Val (0.03s)
    --- PASS: TestAPPEND/APPEND_to_an_exisiting_key_and_GET (0.01s)
    --- PASS: TestAPPEND/APPEND_without_input_value (0.00s)
    --- PASS: TestAPPEND/APPEND_empty_string_to_an_exsisting_key_with_empty_string (0.01s)
    --- PASS: TestAPPEND/APPEND_to_key_created_using_LPUSH (0.01s)
    --- PASS: TestAPPEND/APPEND_value_with_leading_zeros (0.00s)
    --- PASS: TestAPPEND/APPEND_to_key_created_using_SADD (0.01s)
=== RUN   TestBitPos
2024/11/06 02:53:32 INFO FLUSHDB called args=[]
=== RUN   TestBitPos/FindsFirstZeroBit
=== RUN   TestBitPos/FindsFirstOneBit
=== RUN   TestBitPos/NoZeroBitFound
=== RUN   TestBitPos/NoZeroBitFoundWithRangeStartPos
=== RUN   TestBitPos/NoZeroBitFoundWithOOBRangeStartPos
=== RUN   TestBitPos/NoZeroBitFoundWithRange
=== RUN   TestBitPos/NoZeroBitFoundWithRangeAndRangeType
2024/11/06 02:53:32 INFO FLUSHDB called args=[]
--- PASS: TestBitPos (0.03s)
    --- PASS: TestBitPos/FindsFirstZeroBit (0.00s)
    --- PASS: TestBitPos/FindsFirstOneBit (0.00s)
    --- PASS: TestBitPos/NoZeroBitFound (0.01s)
    --- PASS: TestBitPos/NoZeroBitFoundWithRangeStartPos (0.00s)
    --- PASS: TestBitPos/NoZeroBitFoundWithOOBRangeStartPos (0.00s)
    --- PASS: TestBitPos/NoZeroBitFoundWithRange (0.00s)
    --- PASS: TestBitPos/NoZeroBitFoundWithRangeAndRangeType (0.00s)
=== RUN   TestBloomFilter
=== RUN   TestBloomFilter/BF.RESERVE_and_BF.ADD
=== RUN   TestBloomFilter/BF.EXISTS_returns_false_for_non-existing_item
=== RUN   TestBloomFilter/BF.INFO_provides_correct_information
=== RUN   TestBloomFilter/BF.RESERVE_with_duplicate_filter_name
--- PASS: TestBloomFilter (0.03s)
    --- PASS: TestBloomFilter/BF.RESERVE_and_BF.ADD (0.01s)
    --- PASS: TestBloomFilter/BF.EXISTS_returns_false_for_non-existing_item (0.01s)
    --- PASS: TestBloomFilter/BF.INFO_provides_correct_information (0.01s)
    --- PASS: TestBloomFilter/BF.RESERVE_with_duplicate_filter_name (0.00s)
=== RUN   TestBFEdgeCasesAndErrors
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_incorrect_number_of_arguments
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_negative_capacity
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_capacity
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate#01
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_to_a_Bloom_filter_without_reserving
=== RUN   TestBFEdgeCasesAndErrors/BF.EXISTS_on_an_unreserved_filter
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_on_a_non-existent_filter
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_high_error_rate
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_low_error_rate
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_multiple_items_and_check_existence
=== RUN   TestBFEdgeCasesAndErrors/BF.EXISTS_after_BF.ADD_returns_false_on_non-existing_item
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_duplicate_filter_name
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_after_multiple_additions
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_on_a_key_holding_a_string_value
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_on_a_key_holding_a_list
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_on_a_key_holding_a_hash
--- PASS: TestBFEdgeCasesAndErrors (0.08s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_incorrect_number_of_arguments (0.01s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_negative_capacity (0.01s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_capacity (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate#01 (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_to_a_Bloom_filter_without_reserving (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.EXISTS_on_an_unreserved_filter (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_on_a_non-existent_filter (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_high_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_low_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_multiple_items_and_check_existence (0.01s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.EXISTS_after_BF.ADD_returns_false_on_non-existing_item (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_duplicate_filter_name (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_after_multiple_additions (0.01s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_on_a_key_holding_a_string_value (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_on_a_key_holding_a_list (0.01s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_on_a_key_holding_a_hash (0.00s)
=== RUN   TestErrorsForSetData
=== RUN   TestErrorsForSetData/GET_a_key_holding_a_set
=== RUN   TestErrorsForSetData/GETDEL_a_key_holding_a_set
=== RUN   TestErrorsForSetData/INCR_a_key_holding_a_set
=== RUN   TestErrorsForSetData/DECR_a_key_holding_a_set
=== RUN   TestErrorsForSetData/BIT_operations_on_a_key_holding_a_set
=== RUN   TestErrorsForSetData/GETEX_a_key_holding_a_set
=== RUN   TestErrorsForSetData/GETSET_a_key_holding_a_set
=== RUN   TestErrorsForSetData/LPUSH,_LPOP,_RPUSH,_RPOP_a_key_holding_a_set
--- PASS: TestErrorsForSetData (0.02s)
    --- PASS: TestErrorsForSetData/GET_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/GETDEL_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/INCR_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/DECR_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/BIT_operations_on_a_key_holding_a_set (0.01s)
    --- PASS: TestErrorsForSetData/GETEX_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/GETSET_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/LPUSH,_LPOP,_RPUSH,_RPOP_a_key_holding_a_set (0.00s)
=== RUN   TestCommandCount
=== RUN   TestCommandCount/Command_count_should_be_greather_than_zero
=== RUN   TestCommandCount/Command_count_should_not_support_any_argument
--- PASS: TestCommandCount (0.00s)
    --- PASS: TestCommandCount/Command_count_should_be_greather_than_zero (0.00s)
    --- PASS: TestCommandCount/Command_count_should_not_support_any_argument (0.00s)
=== RUN   TestCommandDefault
=== RUN   TestCommandDefault/Command_should_not_be_empty
=== RUN   TestCommandDefault/Command_count_matches
--- PASS: TestCommandDefault (0.01s)
    --- PASS: TestCommandDefault/Command_should_not_be_empty (0.00s)
    --- PASS: TestCommandDefault/Command_count_matches (0.00s)
=== RUN   TestCommandGetKeys
=== RUN   TestCommandGetKeys/Set_command
=== RUN   TestCommandGetKeys/Get_command
=== RUN   TestCommandGetKeys/TTL_command
=== RUN   TestCommandGetKeys/Del_command
=== RUN   TestCommandGetKeys/MSET_command
=== RUN   TestCommandGetKeys/Expire_command
=== RUN   TestCommandGetKeys/PING_command
=== RUN   TestCommandGetKeys/Invalid_Get_command
=== RUN   TestCommandGetKeys/Abort_command
=== RUN   TestCommandGetKeys/Invalid_command
=== RUN   TestCommandGetKeys/Wrong_number_of_arguments
--- PASS: TestCommandGetKeys (0.01s)
    --- PASS: TestCommandGetKeys/Set_command (0.00s)
    --- PASS: TestCommandGetKeys/Get_command (0.00s)
    --- PASS: TestCommandGetKeys/TTL_command (0.00s)
    --- PASS: TestCommandGetKeys/Del_command (0.00s)
    --- PASS: TestCommandGetKeys/MSET_command (0.00s)
    --- PASS: TestCommandGetKeys/Expire_command (0.00s)
    --- PASS: TestCommandGetKeys/PING_command (0.00s)
    --- PASS: TestCommandGetKeys/Invalid_Get_command (0.00s)
    --- PASS: TestCommandGetKeys/Abort_command (0.00s)
    --- PASS: TestCommandGetKeys/Invalid_command (0.00s)
    --- PASS: TestCommandGetKeys/Wrong_number_of_arguments (0.00s)
=== RUN   TestCommandHelp
=== RUN   TestCommandHelp/Command_help_should_not_support_any_argument
--- PASS: TestCommandHelp (0.00s)
    --- PASS: TestCommandHelp/Command_help_should_not_support_any_argument (0.00s)
=== RUN   TestCommandInfo
=== RUN   TestCommandInfo/Set_command
=== RUN   TestCommandInfo/Get_command
=== RUN   TestCommandInfo/PING_command
=== RUN   TestCommandInfo/Invalid_command
=== RUN   TestCommandInfo/Combination_of_valid_and_Invalid_command
=== RUN   TestCommandInfo/Combination_of_multiple_valid_commands
--- PASS: TestCommandInfo (0.01s)
    --- PASS: TestCommandInfo/Set_command (0.00s)
    --- PASS: TestCommandInfo/Get_command (0.00s)
    --- PASS: TestCommandInfo/PING_command (0.00s)
    --- PASS: TestCommandInfo/Invalid_command (0.00s)
    --- PASS: TestCommandInfo/Combination_of_valid_and_Invalid_command (0.00s)
    --- PASS: TestCommandInfo/Combination_of_multiple_valid_commands (0.00s)
=== RUN   TestCommandList
=== RUN   TestCommandList/Command_list_should_not_be_empty
--- PASS: TestCommandList (0.00s)
    --- PASS: TestCommandList/Command_list_should_not_be_empty (0.00s)
=== RUN   TestCommandRename
=== RUN   TestCommandRename/Set_key_and_Rename_key
=== RUN   TestCommandRename/same_key_for_source_and_destination_on_Rename
=== RUN   TestCommandRename/If_source_key_doesn't_exists
=== RUN   TestCommandRename/If_source_key_doesn't_exists_and_renaming_the_same_key_to_the_same_key
=== RUN   TestCommandRename/If_destination_Key_already_presents
--- PASS: TestCommandRename (0.01s)
    --- PASS: TestCommandRename/Set_key_and_Rename_key (0.00s)
    --- PASS: TestCommandRename/same_key_for_source_and_destination_on_Rename (0.00s)
    --- PASS: TestCommandRename/If_source_key_doesn't_exists (0.00s)
    --- PASS: TestCommandRename/If_source_key_doesn't_exists_and_renaming_the_same_key_to_the_same_key (0.00s)
    --- PASS: TestCommandRename/If_destination_Key_already_presents (0.00s)
=== RUN   TestCopy
=== RUN   TestCopy/COPY_when_source_key_doesn't_exist
=== RUN   TestCopy/COPY_with_no_REPLACE
=== RUN   TestCopy/COPY_with_REPLACE
=== RUN   TestCopy/COPY_with_JSON_integer
=== RUN   TestCopy/COPY_with_JSON_boolean
=== RUN   TestCopy/COPY_with_JSON_array
=== RUN   TestCopy/COPY_with_JSON_simple_JSON
=== RUN   TestCopy/COPY_with_no_expiry
=== RUN   TestCopy/COPY_with_expiry_making_sure_copy_expires
=== RUN   TestBitOp
--- PASS: TestBitOp (0.03s)
=== RUN   TestBitCount
--- PASS: TestBitCount (0.01s)
=== RUN   TestBitPos
=== RUN   TestBitPos/String_interval_BIT_0,-1_
=== RUN   TestBitPos/String_interval_BIT_8,-1
=== RUN   TestBitPos/String_interval_BIT_16,-1
=== RUN   TestBitPos/String_interval_BIT_16,200
=== RUN   TestBitPos/String_interval_BIT_8,8
=== RUN   TestBitPos/FindsFirstZeroBit
=== RUN   TestBitPos/FindsFirstOneBit
=== RUN   TestBitPos/NoOneBitFound
=== RUN   TestBitPos/NoZeroBitFound
=== RUN   TestBitPos/NoZeroBitFoundWithRangeStartPos
=== RUN   TestBitPos/NoZeroBitFoundWithOOBRangeStartPos
=== RUN   TestBitPos/NoZeroBitFoundWithRange
=== RUN   TestBitPos/NoZeroBitFoundWithRangeAndRangeType
=== RUN   TestBitPos/FindsFirstZeroBitInRange
=== RUN   TestBitPos/FindsFirstOneBitInRange
=== RUN   TestBitPos/StartGreaterThanEnd
=== RUN   TestBitPos/FindsFirstOneBitWithNegativeStart
=== RUN   TestBitPos/FindsFirstZeroBitWithNegativeEnd
=== RUN   TestBitPos/FindsFirstZeroBitInByteRange
=== RUN   TestBitPos/FindsFirstOneBitInBitRange
=== RUN   TestBitPos/NoBitFoundInByteRange
=== RUN   TestBitPos/NoBitFoundInBitRange
=== RUN   TestBitPos/EmptyStringReturnsMinusOneForZeroBit
=== RUN   TestBitPos/EmptyStringReturnsMinusOneForOneBit
=== RUN   TestBitPos/SingleByteString
=== RUN   TestBitPos/RangeExceedsStringLength
=== RUN   TestBitPos/InvalidBitArgument
=== RUN   TestBitPos/NonIntegerStartParameter
=== RUN   TestBitPos/NonIntegerEndParameter
=== RUN   TestBitPos/InvalidRangeType
=== RUN   TestBitPos/InsufficientArguments
=== RUN   TestBitPos/NonExistentKeyForZeroBit
=== RUN   TestBitPos/NonExistentKeyForOneBit
=== RUN   TestBitPos/IntegerValue
=== RUN   TestBitPos/LargeIntegerValue
=== RUN   TestBitPos/SmallIntegerValue
=== RUN   TestBitPos/ZeroIntegerValue
=== RUN   TestBitPos/BitRangeStartGreaterThanBitLength
=== RUN   TestBitPos/BitRangeEndExceedsBitLength
=== RUN   TestBitPos/NegativeStartInBitRange
=== RUN   TestBitPos/LargeNegativeStart
=== RUN   TestBitPos/LargePositiveEnd
=== RUN   TestBitPos/StartAndEndEqualInByteRange
=== RUN   TestBitPos/StartAndEndEqualInBitRange
=== RUN   TestBitPos/FindFirstZeroBitInNegativeRange
=== RUN   TestBitPos/FindFirstOneBitInNegativeRangeBIT
=== RUN   TestBitPos/MaxIntegerValue
=== RUN   TestBitPos/MinIntegerValue
=== RUN   TestBitPos/SingleBitStringZero
=== RUN   TestBitPos/SingleBitStringOne
=== RUN   TestBitPos/AllBitsSetExceptLast
=== RUN   TestBitPos/OnlyLastBitSet
=== RUN   TestBitPos/AlternatingBitsLongString
=== RUN   TestBitPos/VeryLargeByteString
=== RUN   TestBitPos/FindZeroBitOnSetBitKey
=== RUN   TestBitPos/FindOneBitOnSetBitKey
--- PASS: TestBitPos (0.06s)
    --- PASS: TestBitPos/String_interval_BIT_0,-1_ (0.00s)
    --- PASS: TestBitPos/String_interval_BIT_8,-1 (0.00s)
    --- PASS: TestBitPos/String_interval_BIT_16,-1 (0.00s)
    --- PASS: TestBitPos/String_interval_BIT_16,200 (0.00s)
    --- PASS: TestBitPos/String_interval_BIT_8,8 (0.00s)
    --- PASS: TestBitPos/FindsFirstZeroBit (0.00s)
    --- PASS: TestBitPos/FindsFirstOneBit (0.00s)
    --- PASS: TestBitPos/NoOneBitFound (0.00s)
    --- PASS: TestBitPos/NoZeroBitFound (0.00s)
    --- PASS: TestBitPos/NoZeroBitFoundWithRangeStartPos (0.00s)
    --- PASS: TestBitPos/NoZeroBitFoundWithOOBRangeStartPos (0.00s)
    --- PASS: TestBitPos/NoZeroBitFoundWithRange (0.00s)
    --- PASS: TestBitPos/NoZeroBitFoundWithRangeAndRangeType (0.00s)
    --- PASS: TestBitPos/FindsFirstZeroBitInRange (0.00s)
    --- PASS: TestBitPos/FindsFirstOneBitInRange (0.00s)
    --- PASS: TestBitPos/StartGreaterThanEnd (0.00s)
    --- PASS: TestBitPos/FindsFirstOneBitWithNegativeStart (0.00s)
    --- PASS: TestBitPos/FindsFirstZeroBitWithNegativeEnd (0.00s)
    --- PASS: TestBitPos/FindsFirstZeroBitInByteRange (0.00s)
    --- PASS: TestBitPos/FindsFirstOneBitInBitRange (0.00s)
    --- PASS: TestBitPos/NoBitFoundInByteRange (0.00s)
    --- PASS: TestBitPos/NoBitFoundInBitRange (0.00s)
    --- PASS: TestBitPos/EmptyStringReturnsMinusOneForZeroBit (0.00s)
    --- PASS: TestBitPos/EmptyStringReturnsMinusOneForOneBit (0.00s)
    --- PASS: TestBitPos/SingleByteString (0.00s)
    --- PASS: TestBitPos/RangeExceedsStringLength (0.00s)
    --- PASS: TestBitPos/InvalidBitArgument (0.00s)
    --- PASS: TestBitPos/NonIntegerStartParameter (0.00s)
    --- PASS: TestBitPos/NonIntegerEndParameter (0.00s)
    --- PASS: TestBitPos/InvalidRangeType (0.00s)
    --- PASS: TestBitPos/InsufficientArguments (0.00s)
    --- PASS: TestBitPos/NonExistentKeyForZeroBit (0.00s)
    --- PASS: TestBitPos/NonExistentKeyForOneBit (0.00s)
    --- PASS: TestBitPos/IntegerValue (0.00s)
    --- PASS: TestBitPos/LargeIntegerValue (0.00s)
    --- PASS: TestBitPos/SmallIntegerValue (0.00s)
    --- PASS: TestBitPos/ZeroIntegerValue (0.00s)
    --- PASS: TestBitPos/BitRangeStartGreaterThanBitLength (0.00s)
    --- PASS: TestBitPos/BitRangeEndExceedsBitLength (0.00s)
    --- PASS: TestBitPos/NegativeStartInBitRange (0.00s)
    --- PASS: TestBitPos/LargeNegativeStart (0.00s)
    --- PASS: TestBitPos/LargePositiveEnd (0.00s)
    --- PASS: TestBitPos/StartAndEndEqualInByteRange (0.00s)
    --- PASS: TestBitPos/StartAndEndEqualInBitRange (0.00s)
    --- PASS: TestBitPos/FindFirstZeroBitInNegativeRange (0.00s)
    --- PASS: TestBitPos/FindFirstOneBitInNegativeRangeBIT (0.00s)
    --- PASS: TestBitPos/MaxIntegerValue (0.00s)
    --- PASS: TestBitPos/MinIntegerValue (0.00s)
    --- PASS: TestBitPos/SingleBitStringZero (0.00s)
    --- PASS: TestBitPos/SingleBitStringOne (0.00s)
    --- PASS: TestBitPos/AllBitsSetExceptLast (0.00s)
    --- PASS: TestBitPos/OnlyLastBitSet (0.00s)
    --- PASS: TestBitPos/AlternatingBitsLongString (0.00s)
    --- PASS: TestBitPos/VeryLargeByteString (0.00s)
    --- PASS: TestBitPos/FindZeroBitOnSetBitKey (0.00s)
    --- PASS: TestBitPos/FindOneBitOnSetBitKey (0.00s)
=== RUN   TestBitOpsString
=== RUN   TestBitOpsString/Getbit_of_a_key_containing_a_string
=== RUN   TestBitOpsString/Getbit_of_a_key_containing_an_integer
=== RUN   TestBitOpsString/Getbit_of_a_key_containing_an_integer_2nd_byte
=== RUN   TestBitOpsString/Getbit_of_a_key_with_an_offset_greater_than_the_length_of_the_string_in_bits
=== RUN   TestBitOpsString/Bitcount_of_a_key_containing_a_string
=== RUN   TestBitOpsString/Bitcount_of_a_key_containing_an_integer
=== RUN   TestBitOpsString/Setbit_of_a_key_containing_a_string
=== RUN   TestBitOpsString/Setbit_of_a_key_must_not_change_the_expiry_of_the_key_if_expiry_is_set
=== RUN   TestBitOpsString/Setbit_of_a_key_must_not_add_expiry_to_the_key_if_expiry_is_not_set
=== RUN   TestBitOpsString/Bitop_not_of_a_key_containing_a_string
=== RUN   TestBitOpsString/Bitop_not_of_a_key_containing_an_integer
=== RUN   TestBitOpsString/Get_a_string_created_with_setbit
=== RUN   TestBitOpsString/Bitop_and_of_keys_containing_a_string_and_get_the_destkey
=== RUN   TestBitOpsString/BITOP_AND_of_keys_containing_integers_and_get_the_destkey
=== RUN   TestBitOpsString/Bitop_or_of_keys_containing_a_string,_a_bytearray_and_get_the_destkey
=== RUN   TestBitOpsString/BITOP_OR_of_keys_containing_strings_and_get_the_destkey
=== RUN   TestBitOpsString/BITOP_OR_of_keys_containing_integers_and_get_the_destkey
=== RUN   TestBitOpsString/BITOP_OR_of_keys_containing_strings_and_a_bytearray_and_get_the_destkey
=== RUN   TestBitOpsString/BITOP_XOR_of_keys_containing_strings_and_get_the_destkey
=== RUN   TestBitOpsString/BITOP_XOR_of_keys_containing_strings_and_a_bytearray_and_get_the_destkey
=== RUN   TestBitOpsString/BITOP_XOR_of_keys_containing_integers_and_get_the_destkey
--- PASS: TestBitOpsString (0.09s)
    --- PASS: TestBitOpsString/Getbit_of_a_key_containing_a_string (0.01s)
    --- PASS: TestBitOpsString/Getbit_of_a_key_containing_an_integer (0.00s)
    --- PASS: TestBitOpsString/Getbit_of_a_key_containing_an_integer_2nd_byte (0.01s)
    --- PASS: TestBitOpsString/Getbit_of_a_key_with_an_offset_greater_than_the_length_of_the_string_in_bits (0.00s)
    --- PASS: TestBitOpsString/Bitcount_of_a_key_containing_a_string (0.00s)
    --- PASS: TestBitOpsString/Bitcount_of_a_key_containing_an_integer (0.01s)
    --- PASS: TestBitOpsString/Setbit_of_a_key_containing_a_string (0.01s)
    --- PASS: TestBitOpsString/Setbit_of_a_key_must_not_change_the_expiry_of_the_key_if_expiry_is_set (0.00s)
    --- PASS: TestBitOpsString/Setbit_of_a_key_must_not_add_expiry_to_the_key_if_expiry_is_not_set (0.00s)
    --- PASS: TestBitOpsString/Bitop_not_of_a_key_containing_a_string (0.01s)
    --- PASS: TestBitOpsString/Bitop_not_of_a_key_containing_an_integer (0.00s)
    --- PASS: TestBitOpsString/Get_a_string_created_with_setbit (0.00s)
    --- PASS: TestBitOpsString/Bitop_and_of_keys_containing_a_string_and_get_the_destkey (0.01s)
    --- PASS: TestBitOpsString/BITOP_AND_of_keys_containing_integers_and_get_the_destkey (0.01s)
    --- PASS: TestBitOpsString/Bitop_or_of_keys_containing_a_string,_a_bytearray_and_get_the_destkey (0.00s)
    --- PASS: TestBitOpsString/BITOP_OR_of_keys_containing_strings_and_get_the_destkey (0.00s)
    --- PASS: TestBitOpsString/BITOP_OR_of_keys_containing_integers_and_get_the_destkey (0.00s)
    --- PASS: TestBitOpsString/BITOP_OR_of_keys_containing_strings_and_a_bytearray_and_get_the_destkey (0.00s)
    --- PASS: TestBitOpsString/BITOP_XOR_of_keys_containing_strings_and_get_the_destkey (0.00s)
    --- PASS: TestBitOpsString/BITOP_XOR_of_keys_containing_strings_and_a_bytearray_and_get_the_destkey (0.00s)
    --- PASS: TestBitOpsString/BITOP_XOR_of_keys_containing_integers_and_get_the_destkey (0.00s)
=== RUN   TestBitfield
2024/11/06 02:53:32 INFO FLUSHDB called args=[]
=== RUN   TestBitfield/BITFIELD_Arity_Check
=== RUN   TestBitfield/BITFIELD_on_unsupported_type_of_SET
=== RUN   TestBitfield/BITFIELD_on_unsupported_type_of_JSON
=== RUN   TestBitfield/BITFIELD_on_unsupported_type_of_HSET
=== RUN   TestBitfield/BITFIELD_with_syntax_errors
=== RUN   TestBitfield/BITFIELD_signed_SET_and_GET_basics
=== RUN   TestBitfield/BITFIELD_unsigned_SET_and_GET_basics
=== RUN   TestBitfield/BITFIELD_signed_SET_and_GET_together
=== RUN   TestBitfield/BITFIELD_unsigned_with_SET,_GET_and_INCRBY_arguments
=== RUN   TestBitfield/BITFIELD_with_only_key_as_argument
=== RUN   TestBitfield/BITFIELD_#<idx>_form
=== RUN   TestBitfield/BITFIELD_basic_INCRBY_form
=== RUN   TestBitfield/BITFIELD_chaining_of_multiple_commands
=== RUN   TestBitfield/BITFIELD_unsigned_overflow_wrap
=== RUN   TestBitfield/BITFIELD_unsigned_overflow_sat
=== RUN   TestBitfield/BITFIELD_signed_overflow_wrap
=== RUN   TestBitfield/BITFIELD_signed_overflow_sat
=== RUN   TestBitfield/BITFIELD_regression_1
=== RUN   TestBitfield/BITFIELD_regression_2
2024/11/06 02:53:32 INFO FLUSHDB called args=[]
--- PASS: TestBitfield (0.05s)
    --- PASS: TestBitfield/BITFIELD_Arity_Check (0.00s)
    --- PASS: TestBitfield/BITFIELD_on_unsupported_type_of_SET (0.00s)
    --- PASS: TestBitfield/BITFIELD_on_unsupported_type_of_JSON (0.00s)
    --- PASS: TestBitfield/BITFIELD_on_unsupported_type_of_HSET (0.00s)
    --- PASS: TestBitfield/BITFIELD_with_syntax_errors (0.00s)
    --- PASS: TestBitfield/BITFIELD_signed_SET_and_GET_basics (0.00s)
    --- PASS: TestBitfield/BITFIELD_unsigned_SET_and_GET_basics (0.00s)
    --- PASS: TestBitfield/BITFIELD_signed_SET_and_GET_together (0.00s)
    --- PASS: TestBitfield/BITFIELD_unsigned_with_SET,_GET_and_INCRBY_arguments (0.00s)
    --- PASS: TestBitfield/BITFIELD_with_only_key_as_argument (0.00s)
    --- PASS: TestBitfield/BITFIELD_#<idx>_form (0.00s)
    --- PASS: TestBitfield/BITFIELD_basic_INCRBY_form (0.00s)
    --- PASS: TestBitfield/BITFIELD_chaining_of_multiple_commands (0.00s)
    --- PASS: TestBitfield/BITFIELD_unsigned_overflow_wrap (0.01s)
    --- PASS: TestBitfield/BITFIELD_unsigned_overflow_sat (0.01s)
    --- PASS: TestBitfield/BITFIELD_signed_overflow_wrap (0.00s)
    --- PASS: TestBitfield/BITFIELD_signed_overflow_sat (0.00s)
    --- PASS: TestBitfield/BITFIELD_regression_1 (0.00s)
    --- PASS: TestBitfield/BITFIELD_regression_2 (0.00s)
=== RUN   TestBitfieldRO
2024/11/06 02:53:32 INFO FLUSHDB called args=[]
=== RUN   TestBitfieldRO/BITFIELD_RO_Arity_Check
=== RUN   TestBitfieldRO/BITFIELD_RO_on_unsupported_type_of_SET
=== RUN   TestBitfieldRO/BITFIELD_RO_on_unsupported_type_of_JSON
=== RUN   TestBitfieldRO/BITFIELD_RO_on_unsupported_type_of_HSET
=== RUN   TestBitfieldRO/BITFIELD_RO_with_unsupported_commands
=== RUN   TestBitfieldRO/BITFIELD_RO_with_syntax_error
=== RUN   TestBitfieldRO/BITFIELD_RO_with_invalid_bitfield_type
=== RUN   TestBitfieldRO/BITFIELD_RO_with_only_key_as_argument
2024/11/06 02:53:32 INFO FLUSHDB called args=[]
--- PASS: TestBitfieldRO (0.02s)
    --- PASS: TestBitfieldRO/BITFIELD_RO_Arity_Check (0.00s)
    --- PASS: TestBitfieldRO/BITFIELD_RO_on_unsupported_type_of_SET (0.00s)
    --- PASS: TestBitfieldRO/BITFIELD_RO_on_unsupported_type_of_JSON (0.00s)
    --- PASS: TestBitfieldRO/BITFIELD_RO_on_unsupported_type_of_HSET (0.00s)
    --- PASS: TestBitfieldRO/BITFIELD_RO_with_unsupported_commands (0.00s)
    --- PASS: TestBitfieldRO/BITFIELD_RO_with_syntax_error (0.00s)
    --- PASS: TestBitfieldRO/BITFIELD_RO_with_invalid_bitfield_type (0.00s)
    --- PASS: TestBitfieldRO/BITFIELD_RO_with_only_key_as_argument (0.00s)
=== RUN   TestErrorsForSetData
=== RUN   TestErrorsForSetData/GET_a_key_holding_a_set
=== RUN   TestErrorsForSetData/GETDEL_a_key_holding_a_set
=== RUN   TestErrorsForSetData/INCR_a_key_holding_a_set
=== RUN   TestErrorsForSetData/DECR_a_key_holding_a_set
=== RUN   TestErrorsForSetData/BIT_operations_on_a_key_holding_a_set
=== RUN   TestErrorsForSetData/GETEX_a_key_holding_a_set
=== RUN   TestErrorsForSetData/GETSET_a_key_holding_a_set
=== RUN   TestErrorsForSetData/LPUSH,_LPOP,_RPUSH,_RPOP_a_key_holding_a_set
--- PASS: TestErrorsForSetData (0.01s)
    --- PASS: TestErrorsForSetData/GET_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/GETDEL_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/INCR_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/DECR_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/BIT_operations_on_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/GETEX_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/GETSET_a_key_holding_a_set (0.00s)
    --- PASS: TestErrorsForSetData/LPUSH,_LPOP,_RPUSH,_RPOP_a_key_holding_a_set (0.00s)
=== RUN   TestCommandCount
=== RUN   TestCommandCount/Command_count_should_be_positive
--- PASS: TestCommandCount (0.00s)
    --- PASS: TestCommandCount/Command_count_should_be_positive (0.00s)
=== RUN   TestCommandDefault
Starting the test server on port 9739
=== RUN   TestCommandDefault/Command_should_not_be_empty
=== RUN   TestCommandDefault/Command_count_matches
--- PASS: TestCommandDefault (0.01s)
    --- PASS: TestCommandDefault/Command_should_not_be_empty (0.00s)
    --- PASS: TestCommandDefault/Command_count_matches (0.00s)
=== RUN   TestCommandGetKeys
2024/11/06 02:53:32 INFO ready to accept and serve requests on port=7379
=== RUN   TestCommandGetKeys/Set_command
=== RUN   TestCommandGetKeys/Get_command
=== RUN   TestCommandGetKeys/TTL_command
=== RUN   TestCommandGetKeys/Del_command
=== RUN   TestCommandGetKeys/MSET_command
=== RUN   TestCommandGetKeys/Expire_command
=== RUN   TestCommandGetKeys/Ping_command
=== RUN   TestCommandGetKeys/Invalid_Get_command
=== RUN   TestCommandGetKeys/Abort_command
=== RUN   TestCommandGetKeys/Invalid_command
=== RUN   TestCommandGetKeys/Wrong_number_of_arguments
--- PASS: TestCommandGetKeys (0.00s)
    --- PASS: TestCommandGetKeys/Set_command (0.00s)
    --- PASS: TestCommandGetKeys/Get_command (0.00s)
    --- PASS: TestCommandGetKeys/TTL_command (0.00s)
    --- PASS: TestCommandGetKeys/Del_command (0.00s)
    --- PASS: TestCommandGetKeys/MSET_command (0.00s)
    --- PASS: TestCommandGetKeys/Expire_command (0.00s)
    --- PASS: TestCommandGetKeys/Ping_command (0.00s)
    --- PASS: TestCommandGetKeys/Invalid_Get_command (0.00s)
    --- PASS: TestCommandGetKeys/Abort_command (0.00s)
    --- PASS: TestCommandGetKeys/Invalid_command (0.00s)
    --- PASS: TestCommandGetKeys/Wrong_number_of_arguments (0.00s)
=== RUN   TestCommandInfo
=== RUN   TestCommandInfo/Set_command
=== RUN   TestCommandInfo/Get_command
=== RUN   TestCommandInfo/Ping_command
=== RUN   TestCommandInfo/Invalid_command
=== RUN   TestCommandInfo/Combination_of_valid_and_Invalid_command
=== RUN   TestCommandInfo/Combination_of_multiple_valid_commands
--- PASS: TestCommandInfo (0.01s)
    --- PASS: TestCommandInfo/Set_command (0.00s)
    --- PASS: TestCommandInfo/Get_command (0.00s)
    --- PASS: TestCommandInfo/Ping_command (0.00s)
    --- PASS: TestCommandInfo/Invalid_command (0.00s)
    --- PASS: TestCommandInfo/Combination_of_valid_and_Invalid_command (0.00s)
    --- PASS: TestCommandInfo/Combination_of_multiple_valid_commands (0.00s)
=== RUN   TestCommandList
=== RUN   TestCommandList/Command_list_should_not_be_empty
--- PASS: TestCommandList (0.00s)
    --- PASS: TestCommandList/Command_list_should_not_be_empty (0.00s)
=== RUN   TestCommandRename
=== RUN   TestCommandRename/Set_key_and_Rename_key
=== RUN   TestCommandRename/same_key_for_source_and_destination_on_Rename
=== RUN   TestCommandRename/If_source_key_doesn't_exists
=== RUN   TestCommandRename/If_source_key_doesn't_exists_and_renaming_the_same_key_to_the_same_key
=== RUN   TestCommandRename/If_destination_Key_already_presents
=== RUN   TestAppend
=== RUN   TestAppend/APPEND_and_GET_a_new_Val
--- PASS: TestCommandRename (0.04s)
    --- PASS: TestCommandRename/Set_key_and_Rename_key (0.00s)
    --- PASS: TestCommandRename/same_key_for_source_and_destination_on_Rename (0.00s)
    --- PASS: TestCommandRename/If_source_key_doesn't_exists (0.00s)
    --- PASS: TestCommandRename/If_source_key_doesn't_exists_and_renaming_the_same_key_to_the_same_key (0.00s)
    --- PASS: TestCommandRename/If_destination_Key_already_presents (0.02s)
=== RUN   TestCopy
=== RUN   TestCopy/COPY_when_source_key_doesn't_exist
=== RUN   TestCopy/COPY_with_no_REPLACE
=== RUN   TestAppend/APPEND_to_an_existing_key_and_GET
=== RUN   TestCopy/COPY_with_REPLACE
=== RUN   TestCopy/COPY_with_JSON_integer
=== RUN   TestAppend/APPEND_without_input_value
=== RUN   TestCopy/COPY_with_JSON_boolean
=== RUN   TestAppend/APPEND_to_key_created_using_LPUSH
=== RUN   TestCopy/COPY_with_JSON_array
=== RUN   TestAppend/APPEND_value_with_leading_zeros
=== RUN   TestCopy/COPY_with_JSON_simple_JSON
--- PASS: TestAppend (0.04s)
    --- PASS: TestAppend/APPEND_and_GET_a_new_Val (0.03s)
    --- PASS: TestAppend/APPEND_to_an_existing_key_and_GET (0.00s)
    --- PASS: TestAppend/APPEND_without_input_value (0.00s)
    --- PASS: TestAppend/APPEND_to_key_created_using_LPUSH (0.00s)
    --- PASS: TestAppend/APPEND_value_with_leading_zeros (0.00s)
=== RUN   TestBFReserveAddInfoExists
=== RUN   TestBFReserveAddInfoExists/BF.RESERVE_and_BF.ADD
=== RUN   TestCopy/COPY_with_no_expiry
=== RUN   TestBFReserveAddInfoExists/BF.EXISTS_returns_false_for_non-existing_item
=== RUN   TestCopy/COPY_with_expiry_making_sure_copy_expires
=== RUN   TestBFReserveAddInfoExists/BF.INFO_provides_correct_information
=== RUN   TestBFReserveAddInfoExists/BF.RESERVE_on_existent_filter_returns_error
--- PASS: TestBFReserveAddInfoExists (0.02s)
    --- PASS: TestBFReserveAddInfoExists/BF.RESERVE_and_BF.ADD (0.01s)
    --- PASS: TestBFReserveAddInfoExists/BF.EXISTS_returns_false_for_non-existing_item (0.00s)
    --- PASS: TestBFReserveAddInfoExists/BF.INFO_provides_correct_information (0.00s)
    --- PASS: TestBFReserveAddInfoExists/BF.RESERVE_on_existent_filter_returns_error (0.00s)
=== RUN   TestBFEdgeCasesAndErrors
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_incorrect_number_of_arguments
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity#01
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_capacity
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate#01
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_to_a_Bloom_filter_without_reserving
=== RUN   TestBFEdgeCasesAndErrors/BF.EXISTS_on_an_unreserved_filter
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_on_a_non-existent_filter
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_high_error_rate
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61296: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61303: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61297: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61298: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61302: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61301: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61299: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61295: read: connection reset by peer"
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_low_error_rate
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61300: read: connection reset by peer"
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_multiple_items_and_check_existence
=== RUN   TestBFEdgeCasesAndErrors/BF.EXISTS_after_BF.ADD_returns_false_on_non-existing_item
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_duplicate_filter_name
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_after_multiple_additions
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_on_a_key_holding_a_string_value
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61304: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61308: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61306: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61307: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61309: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61305: read: connection reset by peer"
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_on_a_key_holding_a_list
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_on_a_key_holding_a_hash
--- PASS: TestBFEdgeCasesAndErrors (0.04s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_incorrect_number_of_arguments (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity#01 (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_capacity (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate#01 (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_to_a_Bloom_filter_without_reserving (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.EXISTS_on_an_unreserved_filter (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_on_a_non-existent_filter (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_high_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_low_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_multiple_items_and_check_existence (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.EXISTS_after_BF.ADD_returns_false_on_non-existing_item (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_duplicate_filter_name (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_after_multiple_additions (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_on_a_key_holding_a_string_value (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_on_a_key_holding_a_list (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_on_a_key_holding_a_hash (0.00s)
=== RUN   TestCMSInitByDim
=== RUN   TestCMSInitByDim/wrong_number_of_arguments
=== RUN   TestCMSInitByDim/wrong_type_of_width
=== RUN   TestCMSInitByDim/wrong_type_of_depth
=== RUN   TestCMSInitByDim/negative_width
=== RUN   TestCMSInitByDim/negative_depth
=== RUN   TestCMSInitByDim/correct_width_and_depth
=== RUN   TestCMSInitByDim/key_already_exists
--- PASS: TestCMSInitByDim (0.00s)
    --- PASS: TestCMSInitByDim/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInitByDim/wrong_type_of_width (0.00s)
    --- PASS: TestCMSInitByDim/wrong_type_of_depth (0.00s)
    --- PASS: TestCMSInitByDim/negative_width (0.00s)
    --- PASS: TestCMSInitByDim/negative_depth (0.00s)
    --- PASS: TestCMSInitByDim/correct_width_and_depth (0.00s)
    --- PASS: TestCMSInitByDim/key_already_exists (0.00s)
=== RUN   TestCMSInitByProb
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61311: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61312: read: connection reset by peer"
2024/11/06 02:53:32 ERROR Error reading message error="read tcp [::1]:8380->[::1]:61310: read: connection reset by peer"
=== RUN   TestCMSInitByProb/wrong_number_of_arguments
=== RUN   TestCMSInitByProb/wrong_type_of_error_rate
=== RUN   TestCMSInitByProb/wrong_type_of_probability
=== RUN   TestCMSInitByProb/error_rate_out_of_range
=== RUN   TestCMSInitByProb/probability_out_of_range
=== RUN   TestCMSInitByProb/correct_error_rate_and_probability
=== RUN   TestCMSInitByProb/key_already_exists
--- PASS: TestCMSInitByProb (0.00s)
    --- PASS: TestCMSInitByProb/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInitByProb/wrong_type_of_error_rate (0.00s)
    --- PASS: TestCMSInitByProb/wrong_type_of_probability (0.00s)
    --- PASS: TestCMSInitByProb/error_rate_out_of_range (0.00s)
    --- PASS: TestCMSInitByProb/probability_out_of_range (0.00s)
    --- PASS: TestCMSInitByProb/correct_error_rate_and_probability (0.00s)
    --- PASS: TestCMSInitByProb/key_already_exists (0.00s)
=== RUN   TestCMSInfo
=== RUN   TestCMSInfo/wrong_number_of_arguments
=== RUN   TestCMSInfo/key_doesn't_exist
=== RUN   TestCMSInfo/one_argument
--- PASS: TestCMSInfo (0.00s)
    --- PASS: TestCMSInfo/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInfo/key_doesn't_exist (0.00s)
    --- PASS: TestCMSInfo/one_argument (0.00s)
=== RUN   TestCMSIncrBy
=== RUN   TestCMSIncrBy/wrong_number_of_arguments
=== RUN   TestCMSIncrBy/key_doesn't_exist
=== RUN   TestCMSIncrBy/inserting_keys
=== RUN   TestCMSIncrBy/missing_values
=== RUN   TestCMSIncrBy/negative_values
--- PASS: TestCMSIncrBy (0.00s)
    --- PASS: TestCMSIncrBy/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSIncrBy/key_doesn't_exist (0.00s)
    --- PASS: TestCMSIncrBy/inserting_keys (0.00s)
    --- PASS: TestCMSIncrBy/missing_values (0.00s)
    --- PASS: TestCMSIncrBy/negative_values (0.00s)
=== RUN   TestCMSQuery
=== RUN   TestCMSQuery/wrong_number_of_arguments
=== RUN   TestCMSQuery/key_doesn't_exist
=== RUN   TestCMSQuery/query_keys
--- PASS: TestCMSQuery (0.00s)
    --- PASS: TestCMSQuery/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSQuery/key_doesn't_exist (0.00s)
    --- PASS: TestCMSQuery/query_keys (0.00s)
=== RUN   TestCMSMerge
=== RUN   TestCMSMerge/wrong_number_of_arguments
=== RUN   TestCMSMerge/key_doesn't_exist
=== RUN   TestCMSMerge/wrong_type_of_number_of_sources
=== RUN   TestCMSMerge/more_sources_than_specified
=== RUN   TestCMSMerge/fewer_sources_than_specified
=== RUN   TestCMSMerge/missing_weights
=== RUN   TestCMSMerge/more_weights_than_needed
=== RUN   TestCMSMerge/correct_case
=== RUN   TestCMSMerge/correct_case_with_given_weights
--- PASS: TestCMSMerge (0.01s)
    --- PASS: TestCMSMerge/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSMerge/key_doesn't_exist (0.00s)
    --- PASS: TestCMSMerge/wrong_type_of_number_of_sources (0.00s)
    --- PASS: TestCMSMerge/more_sources_than_specified (0.00s)
    --- PASS: TestCMSMerge/fewer_sources_than_specified (0.00s)
    --- PASS: TestCMSMerge/missing_weights (0.00s)
    --- PASS: TestCMSMerge/more_weights_than_needed (0.00s)
    --- PASS: TestCMSMerge/correct_case (0.00s)
    --- PASS: TestCMSMerge/correct_case_with_given_weights (0.00s)
=== RUN   TestDECR
=== RUN   TestDECR/Decrement_multiple_keys
--- PASS: TestDECR (0.00s)
    --- PASS: TestDECR/Decrement_multiple_keys (0.00s)
=== RUN   TestDECRBY
=== RUN   TestDECRBY/Decrement_multiple_keys
--- PASS: TestDECRBY (0.00s)
    --- PASS: TestDECRBY/Decrement_multiple_keys (0.00s)
=== RUN   TestEXPIRE
=== RUN   TestEXPIRE/Set_with_EXPIRE_command
=== RUN   TestEXPIRE/Check_if_key_is_nil_after_expiration
=== RUN   TestAbortCommand/ServerIsRunning
=== RUN   TestAbortCommand/AbortCommandShutdown
2024/11/06 02:53:33 INFO Received ABORT command, initiating server shutdown workerID=W-3639-2
2024/11/06 02:53:33 INFO Closing connection
2024/11/06 02:53:33 INFO no new connections will be accepted
2024/11/06 02:53:33 INFO Closing connection
2024/11/06 02:53:33 INFO Stopping worker workerID=W-3639-2
2024/11/06 02:53:33 INFO Stopping worker workerID=W-3639-1
2024/11/06 02:53:33 INFO Stopping worker workerID=W-3639-2
2024/11/06 02:53:33 WARN Error closing connection error="read tcp 127.0.0.1:8740->127.0.0.1:61322: read: connection reset by peer\nclose tcp 127.0.0.1:8740->127.0.0.1:61322: use of closed network connection\nclose client-connection: file already closed"
2024/11/06 02:53:33 INFO initiating shutdown
2024/11/06 02:53:33 INFO exiting gracefully
=== RUN   TestEXPIRE/EXPIRE_non-existent_key
=== RUN   TestEXPIRE/EXPIRE_with_past_time
=== RUN   TestEXPIRE/EXPIRE_with_invalid_syntax
=== RUN   TestEXPIRE/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time
=== RUN   TestEXPIRE/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time
=== RUN   TestEXPIRE/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one
=== RUN   TestEXPIRE/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one
=== RUN   TestEXPIRE/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one#01
=== RUN   TestEXPIRE/TEST(NX_+_LT/GT)
=== RUN   TestEXPIRE/TEST(XX_+_LT/GT)
=== RUN   TestEXPIRE/Test_if_value_is_nil_after_expiration
=== RUN   TestAbortCommand/PortIsReleased
--- PASS: TestAbortCommand (4.64s)
    --- PASS: TestAbortCommand/ServerIsRunning (0.00s)
    --- PASS: TestAbortCommand/AbortCommandShutdown (1.00s)
    --- PASS: TestAbortCommand/PortIsReleased (0.00s)
=== RUN   TestServerRestartAfterAbort
=== RUN   TestAPPEND
=== RUN   TestAPPEND/APPEND_and_GET_a_new_Val
=== RUN   TestAPPEND/APPEND_to_an_existing_key_and_GET
=== RUN   TestAPPEND/APPEND_without_input_value
=== RUN   TestAPPEND/APPEND_empty_string_to_an_existing_key_with_empty_string
=== RUN   TestAPPEND/APPEND_to_key_created_using_LPUSH
=== RUN   TestAPPEND/APPEND_value_with_leading_zeros
=== RUN   TestAPPEND/APPEND_to_key_created_using_SADD
--- PASS: TestAPPEND (0.02s)
    --- PASS: TestAPPEND/APPEND_and_GET_a_new_Val (0.00s)
    --- PASS: TestAPPEND/APPEND_to_an_existing_key_and_GET (0.00s)
    --- PASS: TestAPPEND/APPEND_without_input_value (0.00s)
    --- PASS: TestAPPEND/APPEND_empty_string_to_an_existing_key_with_empty_string (0.00s)
    --- PASS: TestAPPEND/APPEND_to_key_created_using_LPUSH (0.00s)
    --- PASS: TestAPPEND/APPEND_value_with_leading_zeros (0.00s)
    --- PASS: TestAPPEND/APPEND_to_key_created_using_SADD (0.00s)
=== RUN   TestBFReserveAddInfoExists
=== RUN   TestBFReserveAddInfoExists/BF.RESERVE_and_BF.ADD
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3622-2
=== RUN   TestBFReserveAddInfoExists/BF.EXISTS_returns_false_for_non-existing_item
=== RUN   TestBFReserveAddInfoExists/BF.INFO_provides_correct_information
=== RUN   TestBFReserveAddInfoExists/BF.RESERVE_on_existent_filter_returns_error
--- PASS: TestBFReserveAddInfoExists (0.02s)
    --- PASS: TestBFReserveAddInfoExists/BF.RESERVE_and_BF.ADD (0.00s)
    --- PASS: TestBFReserveAddInfoExists/BF.EXISTS_returns_false_for_non-existing_item (0.00s)
    --- PASS: TestBFReserveAddInfoExists/BF.INFO_provides_correct_information (0.01s)
    --- PASS: TestBFReserveAddInfoExists/BF.RESERVE_on_existent_filter_returns_error (0.00s)
=== RUN   TestBFEdgeCasesAndErrors
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3644-3
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_incorrect_number_of_arguments
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity#01
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity#02
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate#01
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_to_a_Bloom_filter_without_reserving
=== RUN   TestBFEdgeCasesAndErrors/BF.EXISTS_on_an_unreserved_filter
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_on_a_non-existent_filter
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_high_error_rate
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_low_error_rate
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_multiple_items_and_check_existence
=== RUN   TestBFEdgeCasesAndErrors/BF.EXISTS_after_BF.ADD_returns_false_on_non-existing_item
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_with_duplicate_filter_name
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_after_multiple_additions
=== RUN   TestBFEdgeCasesAndErrors/BF.RESERVE_on_a_key_holding_a_string_value
=== RUN   TestBFEdgeCasesAndErrors/BF.ADD_on_a_key_holding_a_list
=== RUN   TestBFEdgeCasesAndErrors/BF.INFO_on_a_key_holding_a_hash
--- PASS: TestBFEdgeCasesAndErrors (0.04s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_incorrect_number_of_arguments (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity#01 (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_zero_capacity#02 (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_invalid_error_rate#01 (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_to_a_Bloom_filter_without_reserving (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.EXISTS_on_an_unreserved_filter (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_on_a_non-existent_filter (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_high_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_a_very_low_error_rate (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_multiple_items_and_check_existence (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.EXISTS_after_BF.ADD_returns_false_on_non-existing_item (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_with_duplicate_filter_name (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_after_multiple_additions (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.RESERVE_on_a_key_holding_a_string_value (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.ADD_on_a_key_holding_a_list (0.00s)
    --- PASS: TestBFEdgeCasesAndErrors/BF.INFO_on_a_key_holding_a_hash (0.00s)
2024/11/06 02:53:34 INFO Closing connection
=== RUN   TestCommandDocs
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3664-4
=== RUN   TestCommandDocs/Set_command
=== RUN   TestCommandDocs/Get_command
=== RUN   TestCommandDocs/Ping_command
=== RUN   TestCommandDocs/Invalid_command
=== RUN   TestCommandDocs/Combination_of_valid_and_Invalid_command
=== RUN   TestCommandDocs/Combination_of_multiple_valid_commands
--- PASS: TestCommandDocs (0.03s)
    --- PASS: TestCommandDocs/Set_command (0.01s)
    --- PASS: TestCommandDocs/Get_command (0.00s)
    --- PASS: TestCommandDocs/Ping_command (0.00s)
    --- PASS: TestCommandDocs/Invalid_command (0.00s)
    --- PASS: TestCommandDocs/Combination_of_valid_and_Invalid_command (0.00s)
    --- PASS: TestCommandDocs/Combination_of_multiple_valid_commands (0.00s)
=== RUN   TestCommandGetKeys
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3709-5
=== RUN   TestCommandGetKeys/Set_command
=== RUN   TestCommandGetKeys/Get_command
=== RUN   TestCommandGetKeys/TTL_command
=== RUN   TestCommandGetKeys/Del_command
=== RUN   TestCommandGetKeys/MSET_command
=== RUN   TestCommandGetKeys/Expire_command
=== RUN   TestCommandGetKeys/Ping_command
=== RUN   TestCommandGetKeys/Invalid_Get_command
=== RUN   TestCommandGetKeys/Abort_command
=== RUN   TestCommandGetKeys/Invalid_command
=== RUN   TestCommandGetKeys/Wrong_number_of_arguments
--- PASS: TestCommandGetKeys (0.01s)
    --- PASS: TestCommandGetKeys/Set_command (0.00s)
    --- PASS: TestCommandGetKeys/Get_command (0.00s)
    --- PASS: TestCommandGetKeys/TTL_command (0.00s)
    --- PASS: TestCommandGetKeys/Del_command (0.00s)
    --- PASS: TestCommandGetKeys/MSET_command (0.00s)
    --- PASS: TestCommandGetKeys/Expire_command (0.00s)
    --- PASS: TestCommandGetKeys/Ping_command (0.00s)
    --- PASS: TestCommandGetKeys/Invalid_Get_command (0.00s)
    --- PASS: TestCommandGetKeys/Abort_command (0.00s)
    --- PASS: TestCommandGetKeys/Invalid_command (0.00s)
    --- PASS: TestCommandGetKeys/Wrong_number_of_arguments (0.00s)
=== RUN   TestCommandInfo
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3732-6
=== RUN   TestCommandInfo/Set_command
=== RUN   TestCommandInfo/Get_command
=== RUN   TestCommandInfo/Ping_command
=== RUN   TestCommandInfo/Invalid_command
=== RUN   TestCommandInfo/Combination_of_valid_and_Invalid_command
=== RUN   TestCommandInfo/Combination_of_multiple_valid_commands
--- PASS: TestCommandInfo (0.01s)
    --- PASS: TestCommandInfo/Set_command (0.00s)
    --- PASS: TestCommandInfo/Get_command (0.00s)
    --- PASS: TestCommandInfo/Ping_command (0.00s)
    --- PASS: TestCommandInfo/Invalid_command (0.00s)
    --- PASS: TestCommandInfo/Combination_of_valid_and_Invalid_command (0.00s)
    --- PASS: TestCommandInfo/Combination_of_multiple_valid_commands (0.00s)
=== RUN   TestCMSInitByDim
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3747-7
=== RUN   TestCMSInitByDim/wrong_number_of_arguments
=== RUN   TestCMSInitByDim/wrong_type_of_width
=== RUN   TestCMSInitByDim/wrong_type_of_depth
=== RUN   TestCMSInitByDim/negative_width
=== RUN   TestCMSInitByDim/negative_depth
=== RUN   TestCMSInitByDim/correct_width_and_depth
=== RUN   TestCMSInitByDim/key_already_exists
--- PASS: TestCMSInitByDim (0.01s)
    --- PASS: TestCMSInitByDim/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInitByDim/wrong_type_of_width (0.00s)
    --- PASS: TestCMSInitByDim/wrong_type_of_depth (0.00s)
    --- PASS: TestCMSInitByDim/negative_width (0.00s)
    --- PASS: TestCMSInitByDim/negative_depth (0.00s)
    --- PASS: TestCMSInitByDim/correct_width_and_depth (0.00s)
    --- PASS: TestCMSInitByDim/key_already_exists (0.00s)
=== RUN   TestCMSInitByProb
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3759-8
=== RUN   TestCMSInitByProb/wrong_number_of_arguments
=== RUN   TestCMSInitByProb/wrong_type_of_error_rate
=== RUN   TestCMSInitByProb/wrong_type_of_probability
=== RUN   TestCMSInitByProb/error_rate_out_of_range
=== RUN   TestCMSInitByProb/probability_out_of_range
=== RUN   TestCMSInitByProb/correct_error_rate_and_probability
=== RUN   TestCMSInitByProb/key_already_exists
--- PASS: TestCMSInitByProb (0.01s)
    --- PASS: TestCMSInitByProb/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInitByProb/wrong_type_of_error_rate (0.00s)
    --- PASS: TestCMSInitByProb/wrong_type_of_probability (0.00s)
    --- PASS: TestCMSInitByProb/error_rate_out_of_range (0.00s)
    --- PASS: TestCMSInitByProb/probability_out_of_range (0.00s)
    --- PASS: TestCMSInitByProb/correct_error_rate_and_probability (0.00s)
    --- PASS: TestCMSInitByProb/key_already_exists (0.00s)
=== RUN   TestCMSInfo
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3773-9
=== RUN   TestCMSInfo/wrong_number_of_arguments
=== RUN   TestCMSInfo/key_doesn't_exist
=== RUN   TestCMSInfo/one_argument
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3785-10
--- PASS: TestCMSInfo (0.01s)
    --- PASS: TestCMSInfo/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInfo/key_doesn't_exist (0.00s)
    --- PASS: TestCMSInfo/one_argument (0.00s)
=== RUN   TestCMSIncrBy
=== RUN   TestCMSIncrBy/wrong_number_of_arguments
=== RUN   TestCMSIncrBy/key_doesn't_exist
=== RUN   TestCMSIncrBy/inserting_keys
=== RUN   TestCMSIncrBy/missing_values
=== RUN   TestCMSIncrBy/negative_values
--- PASS: TestCMSIncrBy (0.01s)
    --- PASS: TestCMSIncrBy/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSIncrBy/key_doesn't_exist (0.00s)
    --- PASS: TestCMSIncrBy/inserting_keys (0.00s)
    --- PASS: TestCMSIncrBy/missing_values (0.00s)
    --- PASS: TestCMSIncrBy/negative_values (0.00s)
=== RUN   TestCMSQuery
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3793-11
=== RUN   TestCMSQuery/wrong_number_of_arguments
=== RUN   TestCMSQuery/key_doesn't_exist
=== RUN   TestCMSQuery/query_keys
--- PASS: TestCMSQuery (0.01s)
    --- PASS: TestCMSQuery/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSQuery/key_doesn't_exist (0.00s)
    --- PASS: TestCMSQuery/query_keys (0.00s)
=== RUN   TestCMSMerge
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3802-12
=== RUN   TestCMSMerge/wrong_number_of_arguments
=== RUN   TestCMSMerge/key_doesn't_exist
=== RUN   TestCMSMerge/wrong_type_of_number_of_sources
=== RUN   TestCMSMerge/more_sources_than_specified
=== RUN   TestCMSMerge/fewer_sources_than_specified
=== RUN   TestCMSMerge/missing_weights
=== RUN   TestCMSMerge/more_weights_than_needed
=== RUN   TestCMSMerge/correct_case
=== RUN   TestCMSMerge/correct_case_with_given_weights
--- PASS: TestCMSMerge (0.03s)
    --- PASS: TestCMSMerge/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSMerge/key_doesn't_exist (0.00s)
    --- PASS: TestCMSMerge/wrong_type_of_number_of_sources (0.00s)
    --- PASS: TestCMSMerge/more_sources_than_specified (0.00s)
    --- PASS: TestCMSMerge/fewer_sources_than_specified (0.00s)
    --- PASS: TestCMSMerge/missing_weights (0.00s)
    --- PASS: TestCMSMerge/more_weights_than_needed (0.00s)
    --- PASS: TestCMSMerge/correct_case (0.01s)
    --- PASS: TestCMSMerge/correct_case_with_given_weights (0.00s)
=== RUN   TestDECR
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3808-13
=== RUN   TestDECR/Decrement_multiple_keys
--- PASS: TestDECR (0.01s)
    --- PASS: TestDECR/Decrement_multiple_keys (0.01s)
=== RUN   TestDECRBY
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3841-14
=== RUN   TestDECRBY/Decrement_multiple_keys
--- PASS: TestDECRBY (0.02s)
    --- PASS: TestDECRBY/Decrement_multiple_keys (0.01s)
=== RUN   TestLInsert
=== RUN   TestLInsert/LINSERT_before
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3852-15
=== RUN   TestLInsert/LINSERT_after
=== RUN   TestLInsert/LINSERT_wrong_number_of_args
=== RUN   TestLInsert/LINSERT_wrong_type
--- PASS: TestLInsert (0.02s)
    --- PASS: TestLInsert/LINSERT_before (0.00s)
    --- PASS: TestLInsert/LINSERT_after (0.00s)
    --- PASS: TestLInsert/LINSERT_wrong_number_of_args (0.01s)
    --- PASS: TestLInsert/LINSERT_wrong_type (0.00s)
=== RUN   TestLRange
=== RUN   TestLRange/LRANGE_with_+ve_start_stop
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3866-16
=== RUN   TestLRange/LRANGE_with_-ve_start_stop
=== RUN   TestLRange/LRANGE_wrong_number_of_args
=== RUN   TestLRange/LRANGE_wrong_type
--- PASS: TestLRange (0.01s)
    --- PASS: TestLRange/LRANGE_with_+ve_start_stop (0.00s)
    --- PASS: TestLRange/LRANGE_with_-ve_start_stop (0.00s)
    --- PASS: TestLRange/LRANGE_wrong_number_of_args (0.00s)
    --- PASS: TestLRange/LRANGE_wrong_type (0.00s)
=== RUN   TestEXPIRE
2024/11/06 02:53:34 INFO Closing connection
2024/11/06 02:53:34 INFO Stopping worker workerID=W-3891-17
=== RUN   TestEXPIRE/Set_with_EXPIRE_command
=== RUN   TestEXPIRE/Check_if_key_is_nil_after_expiration
Starting the test server on port 8740
2024/11/06 02:53:35 INFO ready to accept and serve requests on port=7379
=== RUN   TestEXPIRE/Test_if_value_is_nil_after_expiration#01
=== RUN   TestEXPIRE/EXPIRE_non-existent_key
=== RUN   TestEXPIRE/EXPIRE_with_past_time
=== RUN   TestEXPIRE/EXPIRE_with_invalid_syntax
=== RUN   TestEXPIRE/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time
=== RUN   TestEXPIRE/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time
=== RUN   TestEXPIRE/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one
=== RUN   TestEXPIRE/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one
=== RUN   TestEXPIRE/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one#01
=== RUN   TestEXPIRE/TEST(NX_+_LT/GT)
=== RUN   TestEXPIRE/TEST(XX_+_LT/GT)
=== RUN   TestEXPIRE/Test_if_value_is_nil_after_expiration
2024/11/06 02:53:36 INFO Received ABORT command, initiating server shutdown workerID=W-7406-3
2024/11/06 02:53:36 INFO no new connections will be accepted
2024/11/06 02:53:36 INFO initiating shutdown
2024/11/06 02:53:36 INFO Stopping worker workerID=W-7406-3
2024/11/06 02:53:36 INFO exiting gracefully
2024/11/06 02:53:36 INFO Stopping worker workerID=W-7406-3
=== RUN   TestEXPIRE/Invalid_Command_Test
--- PASS: TestEXPIRE (5.14s)
    --- PASS: TestEXPIRE/Set_with_EXPIRE_command (0.00s)
    --- PASS: TestEXPIRE/Check_if_key_is_nil_after_expiration (1.10s)
    --- PASS: TestEXPIRE/EXPIRE_non-existent_key (0.00s)
    --- PASS: TestEXPIRE/EXPIRE_with_past_time (0.00s)
    --- PASS: TestEXPIRE/EXPIRE_with_invalid_syntax (0.00s)
    --- PASS: TestEXPIRE/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time (0.00s)
    --- PASS: TestEXPIRE/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time (0.00s)
    --- PASS: TestEXPIRE/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one (0.00s)
    --- PASS: TestEXPIRE/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one (0.00s)
    --- PASS: TestEXPIRE/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one#01 (0.00s)
    --- PASS: TestEXPIRE/TEST(NX_+_LT/GT) (0.00s)
    --- PASS: TestEXPIRE/TEST(XX_+_LT/GT) (0.00s)
    --- PASS: TestEXPIRE/Test_if_value_is_nil_after_expiration (2.00s)
    --- PASS: TestEXPIRE/Test_if_value_is_nil_after_expiration#01 (2.01s)
    --- PASS: TestEXPIRE/Invalid_Command_Test (0.01s)
=== RUN   TestEXPIREAT
=== RUN   TestEXPIREAT/Set_with_EXPIREAT_command
=== RUN   TestEXPIREAT/Check_if_key_is_nil_after_expiration
=== RUN   TestEXPIRE/Test_if_value_is_nil_after_expiration#01
Starting the test server on port 8740
2024/11/06 02:53:38 INFO ready to accept and serve requests on port=7379
=== RUN   TestEXPIREAT/EXPIREAT_non-existent_key
=== RUN   TestEXPIREAT/EXPIREAT_with_past_time
=== RUN   TestEXPIREAT/EXPIREAT_with_invalid_syntax
=== RUN   TestEXPIREAT/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time
=== RUN   TestEXPIREAT/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time
=== RUN   TestEXPIREAT/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one
=== RUN   TestEXPIREAT/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one
=== RUN   TestEXPIREAT/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one#01
=== RUN   TestEXPIREAT/TEST(NX_+_LT/GT)
=== RUN   TestEXPIREAT/TEST(XX_+_LT/GT)
=== RUN   TestEXPIREAT/Test_if_value_is_nil_after_expiration
--- PASS: TestCopy (7.05s)
    --- PASS: TestCopy/COPY_when_source_key_doesn't_exist (0.00s)
    --- PASS: TestCopy/COPY_with_no_REPLACE (0.01s)
    --- PASS: TestCopy/COPY_with_REPLACE (0.00s)
    --- PASS: TestCopy/COPY_with_JSON_integer (0.01s)
    --- PASS: TestCopy/COPY_with_JSON_boolean (0.00s)
    --- PASS: TestCopy/COPY_with_JSON_array (0.01s)
    --- PASS: TestCopy/COPY_with_JSON_simple_JSON (0.01s)
    --- PASS: TestCopy/COPY_with_no_expiry (0.00s)
    --- PASS: TestCopy/COPY_with_expiry_making_sure_copy_expires (7.01s)
=== RUN   TestCMSInitByDim
=== RUN   TestCMSInitByDim/wrong_number_of_arguments
=== RUN   TestCMSInitByDim/wrong_type_of_width
=== RUN   TestCMSInitByDim/wrong_type_of_depth
=== RUN   TestCMSInitByDim/negative_width
=== RUN   TestCMSInitByDim/negative_depth
=== RUN   TestCMSInitByDim/correct_width_and_depth
=== RUN   TestCMSInitByDim/key_already_exists
--- PASS: TestCMSInitByDim (0.01s)
    --- PASS: TestCMSInitByDim/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInitByDim/wrong_type_of_width (0.00s)
    --- PASS: TestCMSInitByDim/wrong_type_of_depth (0.00s)
    --- PASS: TestCMSInitByDim/negative_width (0.00s)
    --- PASS: TestCMSInitByDim/negative_depth (0.00s)
    --- PASS: TestCMSInitByDim/correct_width_and_depth (0.00s)
    --- PASS: TestCMSInitByDim/key_already_exists (0.00s)
=== RUN   TestCMSInitByProb
=== RUN   TestCMSInitByProb/wrong_number_of_arguments
=== RUN   TestCMSInitByProb/wrong_type_of_width
=== RUN   TestCMSInitByProb/wrong_type_of_depth
=== RUN   TestCMSInitByProb/negative_width
=== RUN   TestCMSInitByProb/negative_depth
=== RUN   TestCMSInitByProb/correct_width_and_depth
=== RUN   TestCMSInitByProb/key_already_exists
--- PASS: TestCMSInitByProb (0.01s)
    --- PASS: TestCMSInitByProb/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInitByProb/wrong_type_of_width (0.00s)
    --- PASS: TestCMSInitByProb/wrong_type_of_depth (0.00s)
    --- PASS: TestCMSInitByProb/negative_width (0.00s)
    --- PASS: TestCMSInitByProb/negative_depth (0.00s)
    --- PASS: TestCMSInitByProb/correct_width_and_depth (0.00s)
    --- PASS: TestCMSInitByProb/key_already_exists (0.00s)
=== RUN   TestCMSInfo
=== RUN   TestCMSInfo/wrong_number_of_arguments
=== RUN   TestCMSInfo/key_doesn't_exist
=== RUN   TestCMSInfo/one_argument
--- PASS: TestCMSInfo (0.00s)
    --- PASS: TestCMSInfo/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSInfo/key_doesn't_exist (0.00s)
    --- PASS: TestCMSInfo/one_argument (0.00s)
=== RUN   TestCMSIncrBy
=== RUN   TestCMSIncrBy/wrong_number_of_arguments
=== RUN   TestCMSIncrBy/key_doesn't_exist
=== RUN   TestCMSIncrBy/inserting_keys
=== RUN   TestCMSIncrBy/missing_values
=== RUN   TestCMSIncrBy/negative_values
--- PASS: TestCMSIncrBy (0.01s)
    --- PASS: TestCMSIncrBy/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSIncrBy/key_doesn't_exist (0.00s)
    --- PASS: TestCMSIncrBy/inserting_keys (0.00s)
    --- PASS: TestCMSIncrBy/missing_values (0.00s)
    --- PASS: TestCMSIncrBy/negative_values (0.00s)
=== RUN   TestCMSQuery
=== RUN   TestCMSQuery/wrong_number_of_arguments
=== RUN   TestCMSQuery/key_doesn't_exist
=== RUN   TestCMSQuery/query_keys
--- PASS: TestCMSQuery (0.00s)
    --- PASS: TestCMSQuery/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSQuery/key_doesn't_exist (0.00s)
    --- PASS: TestCMSQuery/query_keys (0.00s)
=== RUN   TestCMSMerge
=== RUN   TestCMSMerge/wrong_number_of_arguments
=== RUN   TestCMSMerge/key_doesn't_exist
=== RUN   TestCMSMerge/wrong_type_of_number_of_sources
=== RUN   TestCMSMerge/more_sources_than_specified
=== RUN   TestCMSMerge/fewer_sources_than_specified
=== RUN   TestCMSMerge/missing_weights
=== RUN   TestCMSMerge/more_weights_than_needed
=== RUN   TestCMSMerge/correct_case
=== RUN   TestCMSMerge/correct_case_with_given_weights
--- PASS: TestCMSMerge (0.02s)
    --- PASS: TestCMSMerge/wrong_number_of_arguments (0.00s)
    --- PASS: TestCMSMerge/key_doesn't_exist (0.00s)
    --- PASS: TestCMSMerge/wrong_type_of_number_of_sources (0.00s)
    --- PASS: TestCMSMerge/more_sources_than_specified (0.00s)
    --- PASS: TestCMSMerge/fewer_sources_than_specified (0.00s)
    --- PASS: TestCMSMerge/missing_weights (0.00s)
    --- PASS: TestCMSMerge/more_weights_than_needed (0.00s)
    --- PASS: TestCMSMerge/correct_case (0.00s)
    --- PASS: TestCMSMerge/correct_case_with_given_weights (0.00s)
=== RUN   TestDBSize
2024/11/06 02:53:39 INFO FLUSHDB called args=[]
=== RUN   TestDBSize/DBSIZE_with_3_keys
=== RUN   TestDBSize/DBSIZE_with_repetitive_keys
=== RUN   TestDBSize/DBSIZE_with_expired_keys
--- PASS: TestCopy (7.03s)
    --- PASS: TestCopy/COPY_when_source_key_doesn't_exist (0.00s)
    --- PASS: TestCopy/COPY_with_no_REPLACE (0.00s)
    --- PASS: TestCopy/COPY_with_REPLACE (0.00s)
    --- PASS: TestCopy/COPY_with_JSON_integer (0.00s)
    --- PASS: TestCopy/COPY_with_JSON_boolean (0.00s)
    --- PASS: TestCopy/COPY_with_JSON_array (0.00s)
    --- PASS: TestCopy/COPY_with_JSON_simple_JSON (0.00s)
    --- PASS: TestCopy/COPY_with_no_expiry (0.01s)
    --- PASS: TestCopy/COPY_with_expiry_making_sure_copy_expires (7.00s)
=== RUN   TestDBSIZE
=== RUN   TestDBSIZE/DBSIZE
2024/11/06 02:53:39 INFO FLUSHDB called args=[]
=== RUN   TestDBSIZE/DBSIZE_with_repeative_keys_in_MSET/SET
=== RUN   TestDBSIZE/DBSIZE_with_expired_keys
=== RUN   TestEXPIRE/Invalid_Command_Test
--- PASS: TestEXPIRE (5.16s)
    --- PASS: TestEXPIRE/Set_with_EXPIRE_command (0.00s)
    --- PASS: TestEXPIRE/Check_if_key_is_nil_after_expiration (1.10s)
    --- PASS: TestEXPIRE/EXPIRE_non-existent_key (0.00s)
    --- PASS: TestEXPIRE/EXPIRE_with_past_time (0.00s)
    --- PASS: TestEXPIRE/EXPIRE_with_invalid_syntax (0.00s)
    --- PASS: TestEXPIRE/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time (0.00s)
    --- PASS: TestEXPIRE/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time (0.00s)
    --- PASS: TestEXPIRE/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one (0.01s)
    --- PASS: TestEXPIRE/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one (0.00s)
    --- PASS: TestEXPIRE/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one#01 (0.00s)
    --- PASS: TestEXPIRE/TEST(NX_+_LT/GT) (0.00s)
    --- PASS: TestEXPIRE/TEST(XX_+_LT/GT) (0.00s)
    --- PASS: TestEXPIRE/Test_if_value_is_nil_after_expiration (2.01s)
    --- PASS: TestEXPIRE/Test_if_value_is_nil_after_expiration#01 (2.00s)
    --- PASS: TestEXPIRE/Invalid_Command_Test (0.00s)
=== RUN   TestEXPIREAT
2024/11/06 02:53:40 INFO Closing connection
2024/11/06 02:53:40 INFO Stopping worker workerID=W-3902-18
=== RUN   TestEXPIREAT/Set_with_EXPIREAT_command
=== RUN   TestEXPIREAT/Check_if_key_is_nil_after_expiration
2024/11/06 02:53:40 INFO Received ABORT command, initiating server shutdown workerID=W-11432-4
2024/11/06 02:53:40 INFO no new connections will be accepted
2024/11/06 02:53:40 INFO initiating shutdown
2024/11/06 02:53:40 INFO exiting gracefully
2024/11/06 02:53:40 INFO Stopping worker workerID=W-11432-4
2024/11/06 02:53:40 INFO Stopping worker workerID=W-11432-4
--- PASS: TestServerRestartAfterAbort (6.79s)
PASS
=== RUN   TestEXPIREAT/Test_if_value_is_nil_after_expiration#01
=== RUN   TestEXPIREAT/EXPIREAT_non-existent_key
=== RUN   TestEXPIREAT/EXPIREAT_with_past_time
=== RUN   TestEXPIREAT/EXPIREAT_with_invalid_syntax
=== RUN   TestEXPIREAT/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time
=== RUN   TestEXPIREAT/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time
=== RUN   TestEXPIREAT/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one
=== RUN   TestEXPIREAT/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one
=== RUN   TestEXPIREAT/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one#01
=== RUN   TestEXPIREAT/TEST(NX_+_LT/GT)
=== RUN   TestEXPIREAT/TEST(XX_+_LT/GT)
=== RUN   TestEXPIREAT/Test_if_value_is_nil_after_expiration
=== RUN   TestDBSize/DBSIZE_after_deleting_a_key
--- PASS: TestDBSize (2.01s)
    --- PASS: TestDBSize/DBSIZE_with_3_keys (0.00s)
    --- PASS: TestDBSize/DBSIZE_with_repetitive_keys (0.00s)
    --- PASS: TestDBSize/DBSIZE_with_expired_keys (2.00s)
    --- PASS: TestDBSize/DBSIZE_after_deleting_a_key (0.00s)
=== RUN   TestDECR
2024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestDECR/Decrement_multiple_keys
--- PASS: TestDECR (0.00s)
    --- PASS: TestDECR/Decrement_multiple_keys (0.00s)
=== RUN   TestDECRBY
2024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestDECRBY/Decrement_multiple_keys
--- PASS: TestDECRBY (0.00s)
    --- PASS: TestDECRBY/Decrement_multiple_keys (0.00s)
=== RUN   TestDel
2024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestDel/DEL_with_set_key
=== RUN   TestDel/DEL_with_multiple_keys
=== RUN   TestDel/DEL_with_key_not_set
=== RUN   TestDel/DEL_with_no_keys_or_arguments
2024/11/06 02:53:41 ERROR Error parsing HTTP request error=<nil>
--- PASS: TestDel (0.00s)
    --- PASS: TestDel/DEL_with_set_key (0.00s)
    --- PASS: TestDel/DEL_with_multiple_keys (0.00s)
    --- PASS: TestDel/DEL_with_key_not_set (0.00s)
    --- PASS: TestDel/DEL_with_no_keys_or_arguments (0.00s)
=== RUN   TestLPush
rand seed: 17308418214086000002024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestLPush/LPUSH
=== RUN   TestLPush/LPUSH_normal_values
=== RUN   TestLPush/LPUSH_edge_values
--- PASS: TestLPush (0.01s)
    --- PASS: TestLPush/LPUSH (0.00s)
    --- PASS: TestLPush/LPUSH_normal_values (0.00s)
    --- PASS: TestLPush/LPUSH_edge_values (0.00s)
=== RUN   TestRPush
rand seed: 17308418214155800002024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestRPush/RPUSH
=== RUN   TestRPush/RPUSH_normal_values
=== RUN   TestRPush/RPUSH_edge_values
--- PASS: TestRPush (0.01s)
    --- PASS: TestRPush/RPUSH (0.00s)
    --- PASS: TestRPush/RPUSH_normal_values (0.00s)
    --- PASS: TestRPush/RPUSH_edge_values (0.00s)
=== RUN   TestLPushLPop
rand seed: 17308418214224780002024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestLPushLPop/LPUSH_LPOP
=== RUN   TestLPushLPop/LPUSH_LPOP_normal_values
=== RUN   TestLPushLPop/LPUSH_LPOP_edge_values
--- PASS: TestLPushLPop (0.02s)
    --- PASS: TestLPushLPop/LPUSH_LPOP (0.00s)
    --- PASS: TestLPushLPop/LPUSH_LPOP_normal_values (0.01s)
    --- PASS: TestLPushLPop/LPUSH_LPOP_edge_values (0.01s)
=== RUN   TestLPushRPop
rand seed: 17308418214417080002024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestLPushRPop/LPUSH_RPOP
=== RUN   TestLPushRPop/LPUSH_RPOP_normal_values
=== RUN   TestLPushRPop/LPUSH_RPOP_edge_values
--- PASS: TestLPushRPop (0.02s)
    --- PASS: TestLPushRPop/LPUSH_RPOP (0.00s)
    --- PASS: TestLPushRPop/LPUSH_RPOP_normal_values (0.01s)
    --- PASS: TestLPushRPop/LPUSH_RPOP_edge_values (0.01s)
=== RUN   TestRPushLPop
rand seed: 17308418214601270002024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestRPushLPop/RPUSH_LPOP
=== RUN   TestRPushLPop/RPUSH_LPOP_normal_values
=== RUN   TestRPushLPop/RPUSH_LPOP_edge_values
--- PASS: TestRPushLPop (0.02s)
    --- PASS: TestRPushLPop/RPUSH_LPOP (0.00s)
    --- PASS: TestRPushLPop/RPUSH_LPOP_normal_values (0.01s)
    --- PASS: TestRPushLPop/RPUSH_LPOP_edge_values (0.01s)
=== RUN   TestRPushRPop
rand seed: 17308418214788090002024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestRPushRPop/RPUSH_RPOP
=== RUN   TestRPushRPop/RPUSH_RPOP_normal_values
=== RUN   TestRPushRPop/RPUSH_RPOP_edge_values
--- PASS: TestRPushRPop (0.02s)
    --- PASS: TestRPushRPop/RPUSH_RPOP (0.00s)
    --- PASS: TestRPushRPop/RPUSH_RPOP_normal_values (0.01s)
    --- PASS: TestRPushRPop/RPUSH_RPOP_edge_values (0.01s)
=== RUN   TestLRPushLRPop
rand seed: 17308418214977870002024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestLRPushLRPop/L/RPush_L/RPop
--- PASS: TestLRPushLRPop (0.01s)
    --- PASS: TestLRPushLRPop/L/RPush_L/RPop (0.00s)
=== RUN   TestLLEN
rand seed: 17308418215037410002024/11/06 02:53:41 INFO FLUSHDB called args=[]
=== RUN   TestLLEN/LLEN
--- PASS: TestLLEN (0.01s)
    --- PASS: TestLLEN/LLEN (0.00s)
=== RUN   TestEchoHttp
=== RUN   TestEchoHttp/ECHO_with_invalid_number_of_arguments
=== RUN   TestEchoHttp/ECHO_with_one_argument
--- PASS: TestEchoHttp (0.00s)
    --- PASS: TestEchoHttp/ECHO_with_invalid_number_of_arguments (0.00s)
    --- PASS: TestEchoHttp/ECHO_with_one_argument (0.00s)
=== RUN   TestExistsHttp
=== RUN   TestExistsHttp/Test_EXISTS_command
=== RUN   TestExistsHttp/Test_EXISTS_command_with_multiple_keys
=== RUN   TestExistsHttp/Test_EXISTS_an_expired_key
=== RUN   TestDBSIZE/DBSIZE_with_deleted_keys
--- PASS: TestDBSIZE (2.01s)
    --- PASS: TestDBSIZE/DBSIZE (0.00s)
    --- PASS: TestDBSIZE/DBSIZE_with_repeative_keys_in_MSET/SET (0.00s)
    --- PASS: TestDBSIZE/DBSIZE_with_expired_keys (2.00s)
    --- PASS: TestDBSIZE/DBSIZE_with_deleted_keys (0.00s)
=== RUN   TestDel
=== RUN   TestDel/DEL_with_set_key
=== RUN   TestDel/DEL_with_multiple_keys
=== RUN   TestDel/DEL_with_key_not_set
=== RUN   TestDel/DEL_with_no_keys_or_arguments
--- PASS: TestDel (0.00s)
    --- PASS: TestDel/DEL_with_set_key (0.00s)
    --- PASS: TestDel/DEL_with_multiple_keys (0.00s)
    --- PASS: TestDel/DEL_with_key_not_set (0.00s)
    --- PASS: TestDel/DEL_with_no_keys_or_arguments (0.00s)
=== RUN   TestLPush
rand seed: 1730841821775656000=== RUN   TestLPush/LPUSH
=== RUN   TestLPush/LPUSH_normal_values
=== RUN   TestLPush/LPUSH_edge_values
--- PASS: TestLPush (0.01s)
    --- PASS: TestLPush/LPUSH (0.00s)
    --- PASS: TestLPush/LPUSH_normal_values (0.00s)
    --- PASS: TestLPush/LPUSH_edge_values (0.00s)
=== RUN   TestRPush
rand seed: 1730841821787677000=== RUN   TestRPush/RPUSH
=== RUN   TestRPush/RPUSH_normal_values
=== RUN   TestRPush/RPUSH_edge_values
--- PASS: TestRPush (0.01s)
    --- PASS: TestRPush/RPUSH (0.00s)
    --- PASS: TestRPush/RPUSH_normal_values (0.00s)
    --- PASS: TestRPush/RPUSH_edge_values (0.00s)
=== RUN   TestLPushLPop
rand seed: 1730841821799515000=== RUN   TestLPushLPop/LPUSH_LPOP
=== RUN   TestLPushLPop/LPUSH_LPOP_normal_values
=== RUN   TestLPushLPop/LPUSH_LPOP_edge_values
--- PASS: TestLPushLPop (0.01s)
    --- PASS: TestLPushLPop/LPUSH_LPOP (0.00s)
    --- PASS: TestLPushLPop/LPUSH_LPOP_normal_values (0.00s)
    --- PASS: TestLPushLPop/LPUSH_LPOP_edge_values (0.00s)
=== RUN   TestLPushRPop
rand seed: 1730841821811023000=== RUN   TestLPushRPop/LPUSH_RPOP
=== RUN   TestLPushRPop/LPUSH_RPOP_normal_values
=== RUN   TestLPushRPop/LPUSH_RPOP_edge_values
--- PASS: TestLPushRPop (0.01s)
    --- PASS: TestLPushRPop/LPUSH_RPOP (0.00s)
    --- PASS: TestLPushRPop/LPUSH_RPOP_normal_values (0.00s)
    --- PASS: TestLPushRPop/LPUSH_RPOP_edge_values (0.00s)
=== RUN   TestRPushLPop
rand seed: 1730841821821774000=== RUN   TestRPushLPop/RPUSH_LPOP
=== RUN   TestRPushLPop/RPUSH_LPOP_normal_values
=== RUN   TestRPushLPop/RPUSH_LPOP_edge_values
--- PASS: TestRPushLPop (0.01s)
    --- PASS: TestRPushLPop/RPUSH_LPOP (0.00s)
    --- PASS: TestRPushLPop/RPUSH_LPOP_normal_values (0.00s)
    --- PASS: TestRPushLPop/RPUSH_LPOP_edge_values (0.00s)
=== RUN   TestRPushRPop
rand seed: 1730841821832005000=== RUN   TestRPushRPop/RPUSH_RPOP
=== RUN   TestRPushRPop/RPUSH_RPOP_normal_values
=== RUN   TestRPushRPop/RPUSH_RPOP_edge_values
--- PASS: TestRPushRPop (0.01s)
    --- PASS: TestRPushRPop/RPUSH_RPOP (0.00s)
    --- PASS: TestRPushRPop/RPUSH_RPOP_normal_values (0.00s)
    --- PASS: TestRPushRPop/RPUSH_RPOP_edge_values (0.00s)
=== RUN   TestLRPushLRPop
rand seed: 1730841821842903000=== RUN   TestLRPushLRPop/L/RPush_L/RPop
--- PASS: TestLRPushLRPop (0.00s)
    --- PASS: TestLRPushLRPop/L/RPush_L/RPop (0.00s)
=== RUN   TestLLEN
rand seed: 1730841821847886000=== RUN   TestLLEN/L/RPush_L/RPop
--- PASS: TestLLEN (0.01s)
    --- PASS: TestLLEN/L/RPush_L/RPop (0.00s)
=== RUN   TestDiscard
=== RUN   TestDiscard/Discard_commands_in_a_txn
=== RUN   TestDiscard/Throw_error_if_Discard_used_outside_a_txn
--- PASS: TestDiscard (0.00s)
    --- PASS: TestDiscard/Discard_commands_in_a_txn (0.00s)
    --- PASS: TestDiscard/Throw_error_if_Discard_used_outside_a_txn (0.00s)
=== RUN   TestDumpRestore
=== RUN   TestDumpRestore/DUMP_and_RESTORE_string_value
=== RUN   TestDumpRestore/DUMP_and_RESTORE_integer_value
=== RUN   TestDumpRestore/DUMP_non-existent_key
--- PASS: TestDumpRestore (0.00s)
    --- PASS: TestDumpRestore/DUMP_and_RESTORE_string_value (0.00s)
    --- PASS: TestDumpRestore/DUMP_and_RESTORE_integer_value (0.00s)
    --- PASS: TestDumpRestore/DUMP_non-existent_key (0.00s)
=== RUN   TestEcho
=== RUN   TestEcho/ECHO_with_invalid_number_of_arguments
=== RUN   TestEcho/ECHO_with_one_argument
--- PASS: TestEcho (0.00s)
    --- PASS: TestEcho/ECHO_with_invalid_number_of_arguments (0.00s)
    --- PASS: TestEcho/ECHO_with_one_argument (0.00s)
=== RUN   TestExists
=== RUN   TestExists/Test_EXISTS_command
=== RUN   TestExists/Test_EXISTS_command_with_multiple_keys
=== RUN   TestExists/Test_EXISTS_an_expired_key
ok  	github.com/dicedb/dice/integration_tests/commands/abort	12.753s
=== RUN   TestEXPIREAT/Invalid_Command_Test
--- PASS: TestEXPIREAT (5.13s)
    --- PASS: TestEXPIREAT/Set_with_EXPIREAT_command (0.00s)
    --- PASS: TestEXPIREAT/Check_if_key_is_nil_after_expiration (1.10s)
    --- PASS: TestEXPIREAT/EXPIREAT_non-existent_key (0.00s)
    --- PASS: TestEXPIREAT/EXPIREAT_with_past_time (0.00s)
    --- PASS: TestEXPIREAT/EXPIREAT_with_invalid_syntax (0.00s)
    --- PASS: TestEXPIREAT/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time (0.00s)
    --- PASS: TestEXPIREAT/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time (0.00s)
    --- PASS: TestEXPIREAT/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one (0.00s)
    --- PASS: TestEXPIREAT/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one (0.00s)
    --- PASS: TestEXPIREAT/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one#01 (0.00s)
    --- PASS: TestEXPIREAT/TEST(NX_+_LT/GT) (0.00s)
    --- PASS: TestEXPIREAT/TEST(XX_+_LT/GT) (0.00s)
    --- PASS: TestEXPIREAT/Test_if_value_is_nil_after_expiration (2.00s)
    --- PASS: TestEXPIREAT/Test_if_value_is_nil_after_expiration#01 (2.00s)
    --- PASS: TestEXPIREAT/Invalid_Command_Test (0.00s)
=== RUN   TestEXPIRETIME
=== RUN   TestEXPIRETIME/EXPIRETIME_command
=== RUN   TestEXPIRETIME/EXPIRETIME_non-existent_key
=== RUN   TestEXPIRETIME/EXPIRETIME_with_past_time
=== RUN   TestEXPIRETIME/EXPIRETIME_with_invalid_syntax
--- PASS: TestEXPIRETIME (0.00s)
    --- PASS: TestEXPIRETIME/EXPIRETIME_command (0.00s)
    --- PASS: TestEXPIRETIME/EXPIRETIME_non-existent_key (0.00s)
    --- PASS: TestEXPIRETIME/EXPIRETIME_with_past_time (0.00s)
    --- PASS: TestEXPIRETIME/EXPIRETIME_with_invalid_syntax (0.00s)
=== RUN   TestGet
=== RUN   TestGet/Get_with_expiration
=== RUN   TestEXPIREAT/Test_if_value_is_nil_after_expiration#01
=== RUN   TestExistsHttp/Test_EXISTS_with_multiple_keys_and_expired_key
=== RUN   TestExists/Test_EXISTS_with_multiple_keys_and_expired_key
--- PASS: TestGet (2.00s)
    --- PASS: TestGet/Get_with_expiration (2.00s)
=== RUN   TestGETRANGE
=== RUN   TestGETRANGE/Get_range_on_a_string
=== RUN   TestGETRANGE/Get_range_on_a_non_existent_key
=== RUN   TestGETRANGE/Get_range_on_wrong_key_type
=== RUN   TestGETRANGE/GETRANGE_against_string_value:_0,_-1
=== RUN   TestGETRANGE/GETRANGE_against_string_value:_5,_3
=== RUN   TestGETRANGE/GETRANGE_against_integer_value:_-1,_-100
--- PASS: TestGETRANGE (0.01s)
    --- PASS: TestGETRANGE/Get_range_on_a_string (0.00s)
    --- PASS: TestGETRANGE/Get_range_on_a_non_existent_key (0.00s)
    --- PASS: TestGETRANGE/Get_range_on_wrong_key_type (0.00s)
    --- PASS: TestGETRANGE/GETRANGE_against_string_value:_0,_-1 (0.00s)
    --- PASS: TestGETRANGE/GETRANGE_against_string_value:_5,_3 (0.00s)
    --- PASS: TestGETRANGE/GETRANGE_against_integer_value:_-1,_-100 (0.00s)
=== RUN   TestHDEL
=== RUN   TestHDEL/HDEL_with_wrong_number_of_arguments
=== RUN   TestHDEL/HDEL_with_single_field
=== RUN   TestHDEL/HDEL_with_multiple_fields
=== RUN   TestHDEL/HDEL_on_non-existent_field
=== RUN   TestHDEL/HDEL_on_non-existent_hash
=== RUN   TestHDEL/HDEL_with_wrong_type
--- PASS: TestHDEL (0.01s)
    --- PASS: TestHDEL/HDEL_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHDEL/HDEL_with_single_field (0.00s)
    --- PASS: TestHDEL/HDEL_with_multiple_fields (0.00s)
    --- PASS: TestHDEL/HDEL_on_non-existent_field (0.00s)
    --- PASS: TestHDEL/HDEL_on_non-existent_hash (0.00s)
    --- PASS: TestHDEL/HDEL_with_wrong_type (0.00s)
=== RUN   TestHExists
=== RUN   TestHExists/WS_Check_if_field_exists_when_k_f_and_v_are_set
    hexists_test.go:62: Clearing keys before test execution
    hexists_test.go:67: Executing command: HSET key field value
    hexists_test.go:73: Received result: 1 for command: HSET key field value
    hexists_test.go:67: Executing command: HEXISTS key field
    hexists_test.go:73: Received result: 1 for command: HEXISTS key field
=== RUN   TestHExists/WS_Check_if_field_exists_when_k_exists_but_not_f_and_v
    hexists_test.go:62: Clearing keys before test execution
    hexists_test.go:67: Executing command: HSET key field1 value
    hexists_test.go:73: Received result: 1 for command: HSET key field1 value
    hexists_test.go:67: Executing command: HEXISTS key field
    hexists_test.go:73: Received result: 0 for command: HEXISTS key field
=== RUN   TestHExists/WS_Check_if_field_exists_when_no_k,f_and_v_exist
    hexists_test.go:62: Clearing keys before test execution
    hexists_test.go:67: Executing command: HEXISTS key field
    hexists_test.go:73: Received result: 0 for command: HEXISTS key field
--- PASS: TestHExists (0.03s)
    --- PASS: TestHExists/WS_Check_if_field_exists_when_k_f_and_v_are_set (0.02s)
    --- PASS: TestHExists/WS_Check_if_field_exists_when_k_exists_but_not_f_and_v (0.00s)
    --- PASS: TestHExists/WS_Check_if_field_exists_when_no_k,f_and_v_exist (0.00s)
=== RUN   TestHGET
=== RUN   TestHGET/HGET_with_wrong_number_of_arguments
=== RUN   TestHGET/HGET_on_existent_hash
=== RUN   TestHGET/HGET_on_non-existent_field
=== RUN   TestHGET/HGET_on_non-existent_hash
=== RUN   TestHGET/HGET_with_wrong_type
--- PASS: TestHGET (0.01s)
    --- PASS: TestHGET/HGET_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHGET/HGET_on_existent_hash (0.00s)
    --- PASS: TestHGET/HGET_on_non-existent_field (0.00s)
    --- PASS: TestHGET/HGET_on_non-existent_hash (0.00s)
    --- PASS: TestHGET/HGET_with_wrong_type (0.00s)
=== RUN   TestHINCRBY
=== RUN   TestHINCRBY/HINCRBY_on_non-existing_key
=== RUN   TestHINCRBY/HINCRBY_on_existing_key
=== RUN   TestHINCRBY/HINCRBY_on_non-integer_value
=== RUN   TestHINCRBY/HINCRBY_on_non-hashmap_key
=== RUN   TestHINCRBY/HINCRBY_overflow
--- PASS: TestHINCRBY (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_on_non-existing_key (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_on_existing_key (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_on_non-integer_value (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_on_non-hashmap_key (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_overflow (0.00s)
=== RUN   TestHINCRBYFLOAT
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_on_non-existing_key
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_on_existing_key
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_on_non-float_or_non-integer_value
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_on_non-hashmap_key
--- PASS: TestHINCRBYFLOAT (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_on_non-existing_key (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_on_existing_key (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_on_non-float_or_non-integer_value (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_on_non-hashmap_key (0.00s)
=== RUN   TestHKeys
=== RUN   TestHKeys/WS_No_keys_exist
    hkeys_test.go:41: Executing command: HKEYS key
    hkeys_test.go:47: Received result: *0 for command: HKEYS key
=== RUN   TestHKeys/WS_One_or_more_keys_exist
    hkeys_test.go:41: Executing command: HSET key field value
    hkeys_test.go:47: Received result: 1 for command: HSET key field value
    hkeys_test.go:41: Executing command: HKEYS key
    hkeys_test.go:47: Received result: [field] for command: HKEYS key
--- PASS: TestHKeys (0.00s)
    --- PASS: TestHKeys/WS_No_keys_exist (0.00s)
    --- PASS: TestHKeys/WS_One_or_more_keys_exist (0.00s)
=== RUN   TestHLEN
=== RUN   TestHLEN/HLEN_with_wrong_number_of_args
=== RUN   TestHLEN/HLEN_with_non-existent_key
=== RUN   TestHLEN/HLEN_with_non-hash
=== RUN   TestHLEN/HLEN_with_empty_hash
=== RUN   TestHLEN/HLEN_with_single_field
=== RUN   TestHLEN/HLEN_with_multiple_fields
--- PASS: TestHLEN (0.00s)
    --- PASS: TestHLEN/HLEN_with_wrong_number_of_args (0.00s)
    --- PASS: TestHLEN/HLEN_with_non-existent_key (0.00s)
    --- PASS: TestHLEN/HLEN_with_non-hash (0.00s)
    --- PASS: TestHLEN/HLEN_with_empty_hash (0.00s)
    --- PASS: TestHLEN/HLEN_with_single_field (0.00s)
    --- PASS: TestHLEN/HLEN_with_multiple_fields (0.00s)
=== RUN   TestHRANDFIELD
=== RUN   TestHRANDFIELD/Basic_HRANDFIELD_operations
=== RUN   TestHRANDFIELD/HRANDFIELD_with_count
=== RUN   TestHRANDFIELD/HRANDFIELD_with_WITHVALUES
=== RUN   TestHRANDFIELD/HRANDFIELD_on_non-existent_key
=== RUN   TestHRANDFIELD/HRANDFIELD_with_wrong_number_of_arguments
--- PASS: TestHRANDFIELD (0.00s)
    --- PASS: TestHRANDFIELD/Basic_HRANDFIELD_operations (0.00s)
    --- PASS: TestHRANDFIELD/HRANDFIELD_with_count (0.00s)
    --- PASS: TestHRANDFIELD/HRANDFIELD_with_WITHVALUES (0.00s)
    --- PASS: TestHRANDFIELD/HRANDFIELD_on_non-existent_key (0.00s)
    --- PASS: TestHRANDFIELD/HRANDFIELD_with_wrong_number_of_arguments (0.00s)
=== RUN   TestHSCAN
=== RUN   TestHSCAN/HSCAN_with_wrong_number_of_args
=== RUN   TestHSCAN/HSCAN_with_non-existent_key
=== RUN   TestHSCAN/HSCAN_with_non-hash
=== RUN   TestHSCAN/HSCAN_with_valid_key_and_cursor
=== RUN   TestHSCAN/HSCAN_with_cursor_at_the_end
=== RUN   TestHSCAN/HSCAN_with_cursor_at_the_beginning
=== RUN   TestHSCAN/HSCAN_with_cursor_in_the_middle
=== RUN   TestHSCAN/HSCAN_with_MATCH_argument
=== RUN   TestHSCAN/HSCAN_with_COUNT_argument
=== RUN   TestHSCAN/HSCAN_with_MATCH_and_COUNT_arguments
=== RUN   TestHSCAN/HSCAN_with_invalid_MATCH_pattern
=== RUN   TestHSCAN/HSCAN_with_invalid_COUNT_value
--- PASS: TestHSCAN (0.02s)
    --- PASS: TestHSCAN/HSCAN_with_wrong_number_of_args (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_non-existent_key (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_non-hash (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_valid_key_and_cursor (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_cursor_at_the_end (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_cursor_at_the_beginning (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_cursor_in_the_middle (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_MATCH_argument (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_COUNT_argument (0.01s)
    --- PASS: TestHSCAN/HSCAN_with_MATCH_and_COUNT_arguments (0.01s)
    --- PASS: TestHSCAN/HSCAN_with_invalid_MATCH_pattern (0.00s)
    --- PASS: TestHSCAN/HSCAN_with_invalid_COUNT_value (0.00s)
=== RUN   TestHSET
=== RUN   TestHSET/HSET_with_wrong_number_of_arguments
=== RUN   TestHSET/HSET_with_single_field
=== RUN   TestHSET/HSET_with_multiple_fields
=== RUN   TestHSET/HSET_on_existing_hash
=== RUN   TestHSET/HSET_with_wrong_type
--- PASS: TestHSET (0.01s)
    --- PASS: TestHSET/HSET_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHSET/HSET_with_single_field (0.00s)
    --- PASS: TestHSET/HSET_with_multiple_fields (0.00s)
    --- PASS: TestHSET/HSET_on_existing_hash (0.00s)
    --- PASS: TestHSET/HSET_with_wrong_type (0.00s)
=== RUN   TestHSTRLEN
=== RUN   TestHSTRLEN/HSTRLEN_with_wrong_number_of_args
=== RUN   TestHSTRLEN/HSTRLEN_with_missing_field
=== RUN   TestHSTRLEN/HSTRLEN_with_non-existent_key
=== RUN   TestHSTRLEN/HSTRLEN_with_non-existent_field
=== RUN   TestHSTRLEN/HSTRLEN_with_existing_key_and_field
--- PASS: TestHSTRLEN (0.00s)
    --- PASS: TestHSTRLEN/HSTRLEN_with_wrong_number_of_args (0.00s)
    --- PASS: TestHSTRLEN/HSTRLEN_with_missing_field (0.00s)
    --- PASS: TestHSTRLEN/HSTRLEN_with_non-existent_key (0.00s)
    --- PASS: TestHSTRLEN/HSTRLEN_with_non-existent_field (0.00s)
    --- PASS: TestHSTRLEN/HSTRLEN_with_existing_key_and_field (0.00s)
=== RUN   TestHVals
=== RUN   TestHVals/WS_No_values_exist
    hvals_test.go:41: Executing command: HVALS key
=== RUN   TestEXPIREAT/Invalid_Command_Test
--- PASS: TestEXPIREAT (5.11s)
    --- PASS: TestEXPIREAT/Set_with_EXPIREAT_command (0.00s)
    --- PASS: TestEXPIREAT/Check_if_key_is_nil_after_expiration (1.10s)
    --- PASS: TestEXPIREAT/EXPIREAT_non-existent_key (0.00s)
    --- PASS: TestEXPIREAT/EXPIREAT_with_past_time (0.00s)
    --- PASS: TestEXPIREAT/EXPIREAT_with_invalid_syntax (0.00s)
    --- PASS: TestEXPIREAT/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time (0.00s)
    --- PASS: TestEXPIREAT/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time (0.00s)
    --- PASS: TestEXPIREAT/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one (0.00s)
    --- PASS: TestEXPIREAT/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one (0.00s)
    --- PASS: TestEXPIREAT/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one#01 (0.00s)
    --- PASS: TestEXPIREAT/TEST(NX_+_LT/GT) (0.00s)
    --- PASS: TestEXPIREAT/TEST(XX_+_LT/GT) (0.00s)
    --- PASS: TestEXPIREAT/Test_if_value_is_nil_after_expiration (2.00s)
    --- PASS: TestEXPIREAT/Test_if_value_is_nil_after_expiration#01 (2.00s)
    --- PASS: TestEXPIREAT/Invalid_Command_Test (0.00s)
=== RUN   TestEXPIRETIME
2024/11/06 02:53:45 INFO Closing connection
2024/11/06 02:53:45 INFO Stopping worker workerID=W-9057-19
=== RUN   TestEXPIRETIME/EXPIRETIME_command
=== RUN   TestEXPIRETIME/EXPIRETIME_non-existent_key
=== RUN   TestEXPIRETIME/EXPIRETIME_with_past_time
=== RUN   TestEXPIRETIME/EXPIRETIME_with_invalid_syntax
--- PASS: TestEXPIRETIME (0.00s)
    --- PASS: TestEXPIRETIME/EXPIRETIME_command (0.00s)
    --- PASS: TestEXPIRETIME/EXPIRETIME_non-existent_key (0.00s)
    --- PASS: TestEXPIRETIME/EXPIRETIME_with_past_time (0.00s)
    --- PASS: TestEXPIRETIME/EXPIRETIME_with_invalid_syntax (0.00s)
=== RUN   TestGet
2024/11/06 02:53:45 INFO Closing connection
2024/11/06 02:53:45 INFO Stopping worker workerID=W-14171-20
=== RUN   TestGet/Get_with_expiration
--- PASS: TestExistsHttp (4.01s)
    --- PASS: TestExistsHttp/Test_EXISTS_command (0.00s)
    --- PASS: TestExistsHttp/Test_EXISTS_command_with_multiple_keys (0.00s)
    --- PASS: TestExistsHttp/Test_EXISTS_an_expired_key (2.00s)
    --- PASS: TestExistsHttp/Test_EXISTS_with_multiple_keys_and_expired_key (2.00s)
=== RUN   TestExpireHttp
=== RUN   TestExpireHttp/Set_with_EXPIRE_command
=== RUN   TestExpireHttp/Check_if_key_is_nil_after_expiration
--- PASS: TestExists (4.01s)
    --- PASS: TestExists/Test_EXISTS_command (0.00s)
    --- PASS: TestExists/Test_EXISTS_command_with_multiple_keys (0.00s)
    --- PASS: TestExists/Test_EXISTS_an_expired_key (2.00s)
    --- PASS: TestExists/Test_EXISTS_with_multiple_keys_and_expired_key (2.00s)
=== RUN   TestFLUSHDB
=== RUN   TestFLUSHDB/FLUSHDB
2024/11/06 02:53:45 INFO FLUSHDB called args=[]
--- PASS: TestFLUSHDB (0.00s)
    --- PASS: TestFLUSHDB/FLUSHDB (0.00s)
=== RUN   TestGet
=== RUN   TestGet/Get_with_expiration
=== RUN   TestExpireHttp/EXPIRE_non-existent_key
=== RUN   TestExpireHttp/EXPIRE_with_past_time
=== RUN   TestExpireHttp/EXPIRE_with_invalid_syntax
=== RUN   TestExpireHttp/Test(NX):_Set_expiration_only_if_no_expiration_exists
=== RUN   TestExpireHttp/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time
=== RUN   TestExpireHttp/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one
=== RUN   TestExpireHttp/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one
=== RUN   TestExpireHttp/TEST(NX_+_LT/GT)
=== RUN   TestExpireHttp/TEST(XX_+_LT/GT)
=== RUN   TestExpireHttp/Test_if_value_is_nil_after_expiration
    hvals_test.go:47: Received result: *0 for command: HVALS key
=== RUN   TestHVals/WS_One_or_more_vals_exist
    hvals_test.go:41: Executing command: HSET key field value
    hvals_test.go:47: Received result: 1 for command: HSET key field value
    hvals_test.go:41: Executing command: HVALS key
    hvals_test.go:47: Received result: [value] for command: HVALS key
--- PASS: TestHVals (3.00s)
    --- PASS: TestHVals/WS_No_values_exist (3.00s)
    --- PASS: TestHVals/WS_One_or_more_vals_exist (0.00s)
=== RUN   TestHyperLogLogCommands
=== RUN   TestHyperLogLogCommands/PFADD_with_one_key-value_pair
=== RUN   TestHyperLogLogCommands/PFADD_with_multiple_key-value_pairs
=== RUN   TestHyperLogLogCommands/PFADD_with_duplicate_key-value_pairs
=== RUN   TestHyperLogLogCommands/PFADD_with_multiple_keys
=== RUN   TestHyperLogLogCommands/PFADD_with_non-existing_key
=== RUN   TestHyperLogLogCommands/PFMERGE_with_srcKey_non-existing
=== RUN   TestHyperLogLogCommands/PFMERGE_with_destKey_non-existing
=== RUN   TestHyperLogLogCommands/PFMERGE_with_destKey_existing
=== RUN   TestHyperLogLogCommands/PFMERGE_with_only_one_destKey_existing
=== RUN   TestHyperLogLogCommands/PFMERGE_with_invalid_object
=== RUN   TestHyperLogLogCommands/PFMERGE_with_invalid_src_object
--- PASS: TestHyperLogLogCommands (0.02s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_one_key-value_pair (0.00s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_multiple_key-value_pairs (0.00s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_duplicate_key-value_pairs (0.00s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_multiple_keys (0.00s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_non-existing_key (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_srcKey_non-existing (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_destKey_non-existing (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_destKey_existing (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_only_one_destKey_existing (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_invalid_object (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_invalid_src_object (0.00s)
=== RUN   TestINCRBYFLOAT
=== RUN   TestINCRBYFLOAT/Invalid_number_of_arguments
=== RUN   TestINCRBYFLOAT/Increment_a_non_existing_key
=== RUN   TestINCRBYFLOAT/Increment_a_key_with_an_integer_value
=== RUN   TestINCRBYFLOAT/Increment_and_then_decrement_a_key_with_the_same_value
=== RUN   TestINCRBYFLOAT/Increment_a_non_numeric_value
=== RUN   TestINCRBYFLOAT/Increment_by_a_non_numeric_value
=== RUN   TestINCRBYFLOAT/Increment_by_both_integer_and_float
=== RUN   TestINCRBYFLOAT/Increment_that_would_make_the_value_Inf
=== RUN   TestINCRBYFLOAT/Increment_that_would_make_the_value_-Inf
--- PASS: TestINCRBYFLOAT (0.01s)
    --- PASS: TestINCRBYFLOAT/Invalid_number_of_arguments (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_a_non_existing_key (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_a_key_with_an_integer_value (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_and_then_decrement_a_key_with_the_same_value (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_a_non_numeric_value (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_by_a_non_numeric_value (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_by_both_integer_and_float (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_that_would_make_the_value_Inf (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_that_would_make_the_value_-Inf (0.00s)
=== RUN   TestINCR
=== RUN   TestINCR/Increment_multiple_keys
=== RUN   TestINCR/Increment_to_and_from_max_int64
=== RUN   TestINCR/Increment_from_min_int64
=== RUN   TestINCR/Increment_non-integer_values
=== RUN   TestINCR/Increment_non-existent_key
=== RUN   TestINCR/Increment_string_representing_integers
=== RUN   TestINCR/Increment_with_expiry
=== RUN   TestExpireHttp/Test_if_value_is_nil_after_expiration_(NX)
--- PASS: TestGet (5.00s)
    --- PASS: TestGet/Get_with_expiration (5.00s)
=== RUN   TestGetDel
2024/11/06 02:53:50 INFO Closing connection
2024/11/06 02:53:50 INFO Stopping worker workerID=W-14174-21
=== RUN   TestGetDel/GetDel
=== RUN   TestGetDel/GetDel_with_expiration,_checking_if_key_exist_and_is_already_expired,_then_it_should_return_null
--- PASS: TestINCR (2.02s)
    --- PASS: TestINCR/Increment_multiple_keys (0.00s)
    --- PASS: TestINCR/Increment_to_and_from_max_int64 (0.00s)
    --- PASS: TestINCR/Increment_from_min_int64 (0.00s)
    --- PASS: TestINCR/Increment_non-integer_values (0.00s)
    --- PASS: TestINCR/Increment_non-existent_key (0.00s)
    --- PASS: TestINCR/Increment_string_representing_integers (0.00s)
    --- PASS: TestINCR/Increment_with_expiry (2.00s)
=== RUN   TestINCRBY
=== RUN   TestINCRBY/happy_flow
=== RUN   TestINCRBY/happy_flow_with_negative_increment
=== RUN   TestINCRBY/happy_flow_with_unset_key
=== RUN   TestINCRBY/edge_case_with_maxInt64
=== RUN   TestINCRBY/edge_case_with_negative_increment
=== RUN   TestINCRBY/edge_case_with_string_values
--- PASS: TestINCRBY (0.01s)
    --- PASS: TestINCRBY/happy_flow (0.00s)
    --- PASS: TestINCRBY/happy_flow_with_negative_increment (0.00s)
    --- PASS: TestINCRBY/happy_flow_with_unset_key (0.00s)
    --- PASS: TestINCRBY/edge_case_with_maxInt64 (0.00s)
    --- PASS: TestINCRBY/edge_case_with_negative_increment (0.00s)
    --- PASS: TestINCRBY/edge_case_with_string_values (0.00s)
=== RUN   TestJSONClearOperations
=== RUN   TestJSONClearOperations/jsonclear_root_path
=== RUN   TestJSONClearOperations/jsonclear_string_type
=== RUN   TestJSONClearOperations/jsonclear_array_type
=== RUN   TestJSONClearOperations/jsonclear_bool_type
=== RUN   TestJSONClearOperations/jsonclear_null_type
=== RUN   TestJSONClearOperations/jsonclear_integer_type
=== RUN   TestJSONClearOperations/jsonclear_float64_type
--- PASS: TestJSONClearOperations (0.01s)
    --- PASS: TestJSONClearOperations/jsonclear_root_path (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_string_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_array_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_bool_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_null_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_integer_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_float64_type (0.00s)
=== RUN   TestJsonStrlen
=== RUN   TestJsonStrlen/jsonstrlen_with_root_path
=== RUN   TestJsonStrlen/jsonstrlen_nested
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_root
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_boolean
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_array
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_integer
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_number
--- PASS: TestJsonStrlen (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_root_path (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_nested (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_root (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_boolean (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_array (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_integer (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_number (0.00s)
=== RUN   TestJsonObjLen
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_root_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_nested_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_non-object_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_nested_non-object_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_nested_objects
=== RUN   TestJsonObjLen/JSON.OBJLEN_invalid_json_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_non-existent_key
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_empty_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_invalid_json_path2
=== RUN   TestJsonObjLen/JSON.OBJLEN_invalid_json_path#01
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_root
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path_v2
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path_v2
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_with_nonJSON_object
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_recursive_object
--- PASS: TestJsonObjLen (0.01s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_root_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_nested_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_non-object_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_nested_non-object_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_nested_objects (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_invalid_json_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_non-existent_key (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_empty_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_invalid_json_path2 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_invalid_json_path#01 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_root (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path_v2 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path_v2 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_with_nonJSON_object (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_recursive_object (0.00s)
=== RUN   TestJsonARRTRIM
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_not_array
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_stop_index_out_of_bounds
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_start&stop_are_positive
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_start&stop_are_negative
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_subpath_trim
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_subpath_not_array
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_positive_start_larger_than_stop
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_negative_start_larger_than_stop
--- PASS: TestJsonARRTRIM (0.01s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_not_array (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_stop_index_out_of_bounds (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_start&stop_are_positive (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_start&stop_are_negative (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_subpath_trim (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_subpath_not_array (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_positive_start_larger_than_stop (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_negative_start_larger_than_stop (0.00s)
=== RUN   TestJsonARRINSERT
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_index_out_of_bounds
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_index_is_not_integer
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_with_positive_index_in_root_path
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_with_negative_index_in_root_path
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_nested_with_positive_index
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_nested_with_negative_index
--- PASS: TestJsonARRINSERT (0.01s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_index_out_of_bounds (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_index_is_not_integer (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_with_positive_index_in_root_path (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_with_negative_index_in_root_path (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_nested_with_positive_index (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_nested_with_negative_index (0.00s)
=== RUN   TestJsonObjKeyslmao
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_root_object
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_nested_path
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_non-object_path
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_nested_non-object_path
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_invalid_json_path_-_1
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_invalid_json_path_-_2
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_invalid_json_path_-_3
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_only_command
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_non-existing_key
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_empty_path
=== RUN   TestJsonObjKeyslmao/JSON.OBJKEYS_with_multiple_json_path
--- PASS: TestJsonObjKeyslmao (0.01s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_root_object (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_nested_path (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_non-object_path (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_nested_non-object_path (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_invalid_json_path_-_1 (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_invalid_json_path_-_2 (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_invalid_json_path_-_3 (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_only_command (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_non-existing_key (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_empty_path (0.00s)
    --- PASS: TestJsonObjKeyslmao/JSON.OBJKEYS_with_multiple_json_path (0.00s)
=== RUN   TestJSONARRPOP
=== RUN   TestJSONARRPOP/update_array_at_root_path
=== RUN   TestJSONARRPOP/update_nested_array
--- PASS: TestJSONARRPOP (0.00s)
    --- PASS: TestJSONARRPOP/update_array_at_root_path (0.00s)
    --- PASS: TestJSONARRPOP/update_nested_array (0.00s)
=== RUN   TestJsonARRAPPEND
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_with_root_path
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_nested
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_nested_with_nil
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_with_different_datatypes
--- PASS: TestJsonARRAPPEND (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_with_root_path (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_nested (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_nested_with_nil (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_with_different_datatypes (0.00s)
=== RUN   TestQWatch
=== RUN   TestQWatch/Wrong_number_of_arguments
=== RUN   TestQWatch/Invalid_query
=== RUN   TestQWatch/Successful_register
--- PASS: TestQWatch (0.00s)
    --- PASS: TestQWatch/Wrong_number_of_arguments (0.00s)
    --- PASS: TestQWatch/Invalid_query (0.00s)
    --- PASS: TestQWatch/Successful_register (0.00s)
=== RUN   TestSet
=== RUN   TestSet/Set_and_Get_Simple_Value
=== RUN   TestSet/Set_and_Get_Integer_Value
=== RUN   TestSet/Overwrite_Existing_Key
--- PASS: TestSet (0.00s)
    --- PASS: TestSet/Set_and_Get_Simple_Value (0.00s)
    --- PASS: TestSet/Set_and_Get_Integer_Value (0.00s)
    --- PASS: TestSet/Overwrite_Existing_Key (0.00s)
=== RUN   TestSetWithOptions
=== RUN   TestSetWithOptions/Set_with_EX_option
=== RUN   TestExpireHttp/Invalid_Command_Test
--- PASS: TestExpireHttp (5.12s)
    --- PASS: TestExpireHttp/Set_with_EXPIRE_command (0.00s)
    --- PASS: TestExpireHttp/Check_if_key_is_nil_after_expiration (1.10s)
    --- PASS: TestExpireHttp/EXPIRE_non-existent_key (0.00s)
    --- PASS: TestExpireHttp/EXPIRE_with_past_time (0.00s)
    --- PASS: TestExpireHttp/EXPIRE_with_invalid_syntax (0.00s)
    --- PASS: TestExpireHttp/Test(NX):_Set_expiration_only_if_no_expiration_exists (0.00s)
    --- PASS: TestExpireHttp/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time (0.00s)
    --- PASS: TestExpireHttp/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one (0.00s)
    --- PASS: TestExpireHttp/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one (0.00s)
    --- PASS: TestExpireHttp/TEST(NX_+_LT/GT) (0.00s)
    --- PASS: TestExpireHttp/TEST(XX_+_LT/GT) (0.00s)
    --- PASS: TestExpireHttp/Test_if_value_is_nil_after_expiration (2.00s)
    --- PASS: TestExpireHttp/Test_if_value_is_nil_after_expiration_(NX) (2.00s)
    --- PASS: TestExpireHttp/Invalid_Command_Test (0.00s)
=== RUN   TestExpireAtHttp
=== RUN   TestExpireAtHttp/Set_with_EXPIREAT_command
=== RUN   TestExpireAtHttp/Check_if_key_is_nil_after_expiration
--- PASS: TestGet (5.00s)
    --- PASS: TestGet/Get_with_expiration (5.00s)
=== RUN   TestGetSet
=== RUN   TestGetSet/GETSET_with_INCR
=== RUN   TestGetSet/GETSET_with_SET
=== RUN   TestGetSet/GETSET_with_TTL
=== RUN   TestGetSet/GETSET_error_when_key_exists_but_does_not_hold_a_string_value
--- PASS: TestGetSet (0.00s)
    --- PASS: TestGetSet/GETSET_with_INCR (0.00s)
    --- PASS: TestGetSet/GETSET_with_SET (0.00s)
    --- PASS: TestGetSet/GETSET_with_TTL (0.00s)
    --- PASS: TestGetSet/GETSET_error_when_key_exists_but_does_not_hold_a_string_value (0.00s)
=== RUN   TestHello
=== RUN   TestHello/HELLO_command_response
--- PASS: TestHello (0.00s)
    --- PASS: TestHello/HELLO_command_response (0.00s)
=== RUN   TestHGETALL
=== RUN   TestHGETALL/#00
=== RUN   TestHGETALL/#01
=== RUN   TestHGETALL/#02
=== RUN   TestHGETALL/#03
--- PASS: TestHGETALL (0.00s)
    --- PASS: TestHGETALL/#00 (0.00s)
    --- PASS: TestHGETALL/#01 (0.00s)
    --- PASS: TestHGETALL/#02 (0.00s)
    --- PASS: TestHGETALL/#03 (0.00s)
=== RUN   TestJSONARRPOP
=== RUN   TestJSONARRPOP/update_array_at_root_path
=== RUN   TestJSONARRPOP/update_nested_array
--- PASS: TestJSONARRPOP (0.00s)
    --- PASS: TestJSONARRPOP/update_array_at_root_path (0.00s)
    --- PASS: TestJSONARRPOP/update_nested_array (0.00s)
=== RUN   TestJSONOperations
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Integer
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Boolean_True
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Boolean_False
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Simple_JSON
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Nested_JSON
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_JSON_Array
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_JSON_with_Special_Characters
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Get_JSON_with_Wrong_Number_of_Arguments
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_Non-JSON_Value
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_Empty_JSON_Object
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_Empty_JSON_Array
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_JSON_with_Unicode
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_JSON_with_Escaped_Characters
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Complex_JSON
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Get_Nested_Array
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Get_Nested_Object
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_Nested_Value
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Get_JSON_with_non-existent_path
=== RUN   TestJSONOperations/Multiple_Ordered_Test_Cases
=== RUN   TestJSONOperations/Multiple_Ordered_Test_Cases/Get_All_Prices
=== RUN   TestJSONOperations/Multiple_Ordered_Test_Cases/Set_Multiple_Nested_Values
--- PASS: TestJSONOperations (0.01s)
    --- PASS: TestJSONOperations/Single_Ordered_Test_Cases (0.01s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Integer (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Boolean_True (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Boolean_False (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Simple_JSON (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Nested_JSON (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_JSON_Array (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_JSON_with_Special_Characters (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Get_JSON_with_Wrong_Number_of_Arguments (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_Non-JSON_Value (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_Empty_JSON_Object (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_Empty_JSON_Array (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_JSON_with_Unicode (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_JSON_with_Escaped_Characters (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Complex_JSON (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Get_Nested_Array (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Get_Nested_Object (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_Nested_Value (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Get_JSON_with_non-existent_path (0.00s)
    --- PASS: TestJSONOperations/Multiple_Ordered_Test_Cases (0.00s)
        --- PASS: TestJSONOperations/Multiple_Ordered_Test_Cases/Get_All_Prices (0.00s)
        --- PASS: TestJSONOperations/Multiple_Ordered_Test_Cases/Set_Multiple_Nested_Values (0.00s)
=== RUN   TestJSONSetWithInvalidJSON
=== RUN   TestJSONSetWithInvalidJSON/Set_Invalid_JSON
=== RUN   TestJSONSetWithInvalidJSON/Set_JSON_with_Wrong_Number_of_Arguments
--- PASS: TestJSONSetWithInvalidJSON (0.00s)
    --- PASS: TestJSONSetWithInvalidJSON/Set_Invalid_JSON (0.00s)
    --- PASS: TestJSONSetWithInvalidJSON/Set_JSON_with_Wrong_Number_of_Arguments (0.00s)
=== RUN   TestUnsupportedJSONPathPatterns
=== RUN   TestUnsupportedJSONPathPatterns/Regex_in_JSONPath
=== RUN   TestUnsupportedJSONPathPatterns/Using_@_for_referencing_other_fields
=== RUN   TestUnsupportedJSONPathPatterns/Complex_condition_with_multiple_comparisons
=== RUN   TestUnsupportedJSONPathPatterns/Get_all_colors
--- PASS: TestUnsupportedJSONPathPatterns (0.00s)
    --- PASS: TestUnsupportedJSONPathPatterns/Regex_in_JSONPath (0.00s)
    --- PASS: TestUnsupportedJSONPathPatterns/Using_@_for_referencing_other_fields (0.00s)
    --- PASS: TestUnsupportedJSONPathPatterns/Complex_condition_with_multiple_comparisons (0.00s)
    --- PASS: TestUnsupportedJSONPathPatterns/Get_all_colors (0.00s)
=== RUN   TestJSONSetWithNXAndXX
=== RUN   TestJSONSetWithNXAndXX/Set_with_XX_on_non-existent_key
=== RUN   TestJSONSetWithNXAndXX/Set_with_NX_on_existing_key
=== RUN   TestJSONSetWithNXAndXX/Set_with_XX_on_existing_key
=== RUN   TestJSONSetWithNXAndXX/Set_with_NX_on_non-existent_key
=== RUN   TestJSONSetWithNXAndXX/Invalid_combinations_of_NX_and_XX
=== RUN   TestJSONSetWithNXAndXX/Invalid_combinations_of_XX
--- PASS: TestJSONSetWithNXAndXX (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Set_with_XX_on_non-existent_key (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Set_with_NX_on_existing_key (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Set_with_XX_on_existing_key (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Set_with_NX_on_non-existent_key (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Invalid_combinations_of_NX_and_XX (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Invalid_combinations_of_XX (0.00s)
=== RUN   TestJSONClearOperations
=== RUN   TestJSONClearOperations/jsonclear_root_path
=== RUN   TestJSONClearOperations/jsonclear_string_type
=== RUN   TestJSONClearOperations/jsonclear_array_type
=== RUN   TestJSONClearOperations/jsonclear_bool_type
=== RUN   TestJSONClearOperations/jsonclear_null_type
=== RUN   TestJSONClearOperations/jsonclear_integer_type
=== RUN   TestJSONClearOperations/jsonclear_float_type
--- PASS: TestJSONClearOperations (0.01s)
    --- PASS: TestJSONClearOperations/jsonclear_root_path (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_string_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_array_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_bool_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_null_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_integer_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_float_type (0.00s)
=== RUN   TestJSONDelOperations
=== RUN   TestJSONDelOperations/Delete_root_path
=== RUN   TestJSONDelOperations/Delete_nested_field
=== RUN   TestJSONDelOperations/del_string_type
=== RUN   TestJSONDelOperations/del_bool_type
=== RUN   TestJSONDelOperations/del_null_type
=== RUN   TestJSONDelOperations/del_array_type
=== RUN   TestJSONDelOperations/del_integer_type
=== RUN   TestJSONDelOperations/del_float_type
=== RUN   TestJSONDelOperations/delete_key_with_[]
--- PASS: TestJSONDelOperations (0.01s)
    --- PASS: TestJSONDelOperations/Delete_root_path (0.00s)
    --- PASS: TestJSONDelOperations/Delete_nested_field (0.00s)
    --- PASS: TestJSONDelOperations/del_string_type (0.00s)
    --- PASS: TestJSONDelOperations/del_bool_type (0.00s)
    --- PASS: TestJSONDelOperations/del_null_type (0.00s)
    --- PASS: TestJSONDelOperations/del_array_type (0.00s)
    --- PASS: TestJSONDelOperations/del_integer_type (0.00s)
    --- PASS: TestJSONDelOperations/del_float_type (0.00s)
    --- PASS: TestJSONDelOperations/delete_key_with_[] (0.00s)
=== RUN   TestJSONForgetOperations
=== RUN   TestJSONForgetOperations/Forget_root_path
=== RUN   TestJSONForgetOperations/Forget_nested_field
=== RUN   TestJSONForgetOperations/forget_string_type
=== RUN   TestJSONForgetOperations/forget_bool_type
=== RUN   TestJSONForgetOperations/forget_null_type
=== RUN   TestJSONForgetOperations/forget_array_type
=== RUN   TestJSONForgetOperations/forget_integer_type
=== RUN   TestJSONForgetOperations/forget_float_type
=== RUN   TestJSONForgetOperations/forget_array_element
--- PASS: TestJSONForgetOperations (0.01s)
    --- PASS: TestJSONForgetOperations/Forget_root_path (0.00s)
    --- PASS: TestJSONForgetOperations/Forget_nested_field (0.00s)
    --- PASS: TestJSONForgetOperations/forget_string_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_bool_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_null_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_array_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_integer_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_float_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_array_element (0.00s)
=== RUN   TestJsonStrlen
=== RUN   TestJsonStrlen/jsonstrlen_with_root_path
=== RUN   TestJsonStrlen/jsonstrlen_nested
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_root
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_boolean
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_array
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_integer
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_number
--- PASS: TestJsonStrlen (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_root_path (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_nested (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_root (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_boolean (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_array (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_integer (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_number (0.00s)
=== RUN   TestJSONMGET
=== RUN   TestJSONMGET/MGET_with_root_path
=== RUN   TestJSONMGET/MGET_with_specific_path
=== RUN   TestJSONMGET/MGET_with_nested_path
=== RUN   TestJSONMGET/MGET_error
=== RUN   TestJSONMGET/MGET_with_recursive_path
--- PASS: TestJSONMGET (0.00s)
    --- PASS: TestJSONMGET/MGET_with_root_path (0.00s)
    --- PASS: TestJSONMGET/MGET_with_specific_path (0.00s)
    --- PASS: TestJSONMGET/MGET_with_nested_path (0.00s)
    --- PASS: TestJSONMGET/MGET_error (0.00s)
    --- PASS: TestJSONMGET/MGET_with_recursive_path (0.00s)
=== RUN   TestJsonARRAPPEND
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_with_root_path
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_nested
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_nested_with_nil
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_with_different_datatypes
--- PASS: TestJsonARRAPPEND (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_with_root_path (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_nested (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_nested_with_nil (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_with_different_datatypes (0.00s)
=== RUN   TestJsonNummultby
=== RUN   TestJsonNummultby/Invalid_number_of_arguments
=== RUN   TestJsonNummultby/MultBy_at_non-existent_key
=== RUN   TestJsonNummultby/Invalid_value_of_multiplier_on_non-existent_key
=== RUN   TestJsonNummultby/Invalid_value_of_multiplier_on_existent_key
=== RUN   TestJsonNummultby/MultBy_at_recursive_path
=== RUN   TestJsonNummultby/MultBy_at_root_path
--- PASS: TestJsonNummultby (0.00s)
    --- PASS: TestJsonNummultby/Invalid_number_of_arguments (0.00s)
    --- PASS: TestJsonNummultby/MultBy_at_non-existent_key (0.00s)
    --- PASS: TestJsonNummultby/Invalid_value_of_multiplier_on_non-existent_key (0.00s)
    --- PASS: TestJsonNummultby/Invalid_value_of_multiplier_on_existent_key (0.00s)
    --- PASS: TestJsonNummultby/MultBy_at_recursive_path (0.00s)
    --- PASS: TestJsonNummultby/MultBy_at_root_path (0.00s)
=== RUN   TestJsonObjLen
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_root_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_nested_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_non-object_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_nested_non-object_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_nested_objects
=== RUN   TestJsonObjLen/JSON.OBJLEN_invalid_json_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_non-existent_key
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_empty_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_invalid_json_path2
=== RUN   TestJsonObjLen/JSON.OBJLEN_invalid_json_path#01
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_root
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path_v2
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path_v2
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_with_nonJSON_object
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_recursive_object
--- PASS: TestJsonObjLen (0.01s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_root_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_nested_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_non-object_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_nested_non-object_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_nested_objects (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_invalid_json_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_non-existent_key (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_empty_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_invalid_json_path2 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_invalid_json_path#01 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_root (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path_v2 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path_v2 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_with_nonJSON_object (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_recursive_object (0.00s)
=== RUN   TestJSONNumIncrBy
=== RUN   TestJSONNumIncrBy/Invalid_number_of_arguments
=== RUN   TestJSONNumIncrBy/Non-existent_key
=== RUN   TestJSONNumIncrBy/Invalid_value_of_increment
=== RUN   TestJSONNumIncrBy/incrby_at_non_root_path
=== RUN   TestJSONNumIncrBy/incrby_at_root_path
=== RUN   TestJSONNumIncrBy/incrby_at_root_path#01
--- PASS: TestJSONNumIncrBy (0.00s)
    --- PASS: TestJSONNumIncrBy/Invalid_number_of_arguments (0.00s)
    --- PASS: TestJSONNumIncrBy/Non-existent_key (0.00s)
    --- PASS: TestJSONNumIncrBy/Invalid_value_of_increment (0.00s)
    --- PASS: TestJSONNumIncrBy/incrby_at_non_root_path (0.00s)
    --- PASS: TestJSONNumIncrBy/incrby_at_root_path (0.00s)
    --- PASS: TestJSONNumIncrBy/incrby_at_root_path#01 (0.00s)
=== RUN   TestJsonSTRAPPEND
=== RUN   TestJsonSTRAPPEND/STRAPPEND_to_nested_string
2024/11/06 02:53:50 INFO FLUSHDB called args=[]
=== RUN   TestJsonSTRAPPEND/STRAPPEND_to_multiple_paths
2024/11/06 02:53:50 INFO FLUSHDB called args=[]
=== RUN   TestJsonSTRAPPEND/STRAPPEND_to_non-string
2024/11/06 02:53:50 INFO FLUSHDB called args=[]
=== RUN   TestJsonSTRAPPEND/STRAPPEND_with_empty_string
2024/11/06 02:53:50 INFO FLUSHDB called args=[]
=== RUN   TestJsonSTRAPPEND/STRAPPEND_to_non-existent_path
2024/11/06 02:53:50 INFO FLUSHDB called args=[]
--- PASS: TestJsonSTRAPPEND (0.00s)
    --- PASS: TestJsonSTRAPPEND/STRAPPEND_to_nested_string (0.00s)
    --- PASS: TestJsonSTRAPPEND/STRAPPEND_to_multiple_paths (0.00s)
    --- PASS: TestJsonSTRAPPEND/STRAPPEND_to_non-string (0.00s)
    --- PASS: TestJsonSTRAPPEND/STRAPPEND_with_empty_string (0.00s)
    --- PASS: TestJsonSTRAPPEND/STRAPPEND_to_non-existent_path (0.00s)
=== RUN   TestJSONRESP
=== RUN   TestJSONRESP/print_array_with_mixed_types
=== RUN   TestJSONRESP/print_nested_array_with_mixed_types
=== RUN   TestJSONRESP/print_object_at_root_path
--- PASS: TestJSONRESP (0.00s)
    --- PASS: TestJSONRESP/print_array_with_mixed_types (0.00s)
    --- PASS: TestJSONRESP/print_nested_array_with_mixed_types (0.00s)
    --- PASS: TestJSONRESP/print_object_at_root_path (0.00s)
=== RUN   TestKeys
=== RUN   TestKeys/k_matches_with_k
=== RUN   TestKeys/g*_matches_good_and_great
=== RUN   TestKeys/g?od_matches_good
=== RUN   TestKeys/g?eat_matches_great
=== RUN   TestKeys/h[^e]llo_matches_hallo_and_hbllo
=== RUN   TestKeys/h[a-b]llo_matches_hallo_and_hbllo
--- PASS: TestKeys (0.00s)
    --- PASS: TestKeys/k_matches_with_k (0.00s)
    --- PASS: TestKeys/g*_matches_good_and_great (0.00s)
    --- PASS: TestKeys/g?od_matches_good (0.00s)
    --- PASS: TestKeys/g?eat_matches_great (0.00s)
    --- PASS: TestKeys/h[^e]llo_matches_hallo_and_hbllo (0.00s)
    --- PASS: TestKeys/h[a-b]llo_matches_hallo_and_hbllo (0.00s)
=== RUN   TestMGET
=== RUN   TestMGET/MGET_With_non-existing_keys
=== RUN   TestMGET/MGET_With_existing_keys
=== RUN   TestMGET/MGET_with_existing_and_non_existing_keys
=== RUN   TestMGET/MGET_without_any_keys
--- PASS: TestMGET (0.00s)
    --- PASS: TestMGET/MGET_With_non-existing_keys (0.00s)
    --- PASS: TestMGET/MGET_With_existing_keys (0.00s)
    --- PASS: TestMGET/MGET_with_existing_and_non_existing_keys (0.00s)
    --- PASS: TestMGET/MGET_without_any_keys (0.00s)
=== RUN   TestMset
=== RUN   TestMset/MSET_with_one_key-value_pair
=== RUN   TestMset/MSET_with_multiple_key-value_pairs
=== RUN   TestMset/MSET_with_odd_number_of_arguments
--- PASS: TestMset (0.00s)
    --- PASS: TestMset/MSET_with_one_key-value_pair (0.00s)
    --- PASS: TestMset/MSET_with_multiple_key-value_pairs (0.00s)
    --- PASS: TestMset/MSET_with_odd_number_of_arguments (0.00s)
=== RUN   TestMSETInconsistency
=== RUN   TestMSETInconsistency/MSET_with_one_key-value_pair
=== RUN   TestMSETInconsistency/MSET_with_multiple_key-value_pairs
=== RUN   TestMSETInconsistency/MSET_with_odd_number_of_arguments
=== RUN   TestMSETInconsistency/MSET_with_multiple_key-value_pairs#01
=== RUN   TestMSETInconsistency/MSET_with_integers_arguments
--- PASS: TestMSETInconsistency (0.00s)
    --- PASS: TestMSETInconsistency/MSET_with_one_key-value_pair (0.00s)
    --- PASS: TestMSETInconsistency/MSET_with_multiple_key-value_pairs (0.00s)
    --- PASS: TestMSETInconsistency/MSET_with_odd_number_of_arguments (0.00s)
    --- PASS: TestMSETInconsistency/MSET_with_multiple_key-value_pairs#01 (0.00s)
    --- PASS: TestMSETInconsistency/MSET_with_integers_arguments (0.00s)
=== RUN   TestObjectCommand
=== RUN   TestObjectCommand/Object_Idletime
=== RUN   TestExpireAtHttp/EXPIREAT_non-existent_key
=== RUN   TestExpireAtHttp/EXPIREAT_with_past_time
=== RUN   TestExpireAtHttp/EXPIREAT_with_invalid_syntax
=== RUN   TestExpireAtHttp/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time
=== RUN   TestExpireAtHttp/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time
=== RUN   TestExpireAtHttp/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one
=== RUN   TestExpireAtHttp/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one
=== RUN   TestExpireAtHttp/TEST(NX_+_LT/GT)
=== RUN   TestExpireAtHttp/TEST(XX_+_LT/GT)
=== RUN   TestExpireAtHttp/Test_if_value_is_nil_after_expiration_(XX_+_LT)
=== RUN   TestGetDel/GetDel_with_expiration,_checking_if_key_exist_and_is_not_yet_expired,_then_it_should_return_its_value
=== RUN   TestSetWithOptions/Set_with_PX_option
=== RUN   TestExpireAtHttp/Test_if_value_is_nil_after_expiration_(NX)
=== RUN   TestGetDel/GetDel_with_invalid_command
=== RUN   TestGetDel/Getdel_with_value_created_from_Setbit
=== RUN   TestGetDel/GetDel_with_Set_object_should_return_wrong_type_error
=== RUN   TestGetDel/GetDel_with_JSON_object_should_return_wrong_type_error
--- PASS: TestGetDel (5.01s)
    --- PASS: TestGetDel/GetDel (0.00s)
    --- PASS: TestGetDel/GetDel_with_expiration,_checking_if_key_exist_and_is_already_expired,_then_it_should_return_null (3.00s)
    --- PASS: TestGetDel/GetDel_with_expiration,_checking_if_key_exist_and_is_not_yet_expired,_then_it_should_return_its_value (2.00s)
    --- PASS: TestGetDel/GetDel_with_invalid_command (0.00s)
    --- PASS: TestGetDel/Getdel_with_value_created_from_Setbit (0.00s)
    --- PASS: TestGetDel/GetDel_with_Set_object_should_return_wrong_type_error (0.00s)
    --- PASS: TestGetDel/GetDel_with_JSON_object_should_return_wrong_type_error (0.00s)
=== RUN   TestGetEx
2024/11/06 02:53:55 INFO Closing connection
2024/11/06 02:53:55 INFO Closing connection
2024/11/06 02:53:55 INFO Stopping worker workerID=W-19176-22
2024/11/06 02:53:55 WARN Error closing connection error="read tcp 127.0.0.1:9739->127.0.0.1:61442: read: connection reset by peer\nclose tcp 127.0.0.1:9739->127.0.0.1:61442: use of closed network connection\nclose client-connection: file already closed"
=== RUN   TestGetEx/GetEx_Simple_Value
=== RUN   TestGetEx/GetEx_Non-Existent_Key
=== RUN   TestGetEx/GetEx_with_EX_option
=== RUN   TestExpireAtHttp/Invalid_Command_Test
--- PASS: TestExpireAtHttp (5.12s)
    --- PASS: TestExpireAtHttp/Set_with_EXPIREAT_command (0.00s)
    --- PASS: TestExpireAtHttp/Check_if_key_is_nil_after_expiration (1.10s)
    --- PASS: TestExpireAtHttp/EXPIREAT_non-existent_key (0.00s)
    --- PASS: TestExpireAtHttp/EXPIREAT_with_past_time (0.00s)
    --- PASS: TestExpireAtHttp/EXPIREAT_with_invalid_syntax (0.00s)
    --- PASS: TestExpireAtHttp/Test(NX):_Set_the_expiration_only_if_the_key_has_no_expiration_time (0.00s)
    --- PASS: TestExpireAtHttp/Test(XX):_Set_the_expiration_only_if_the_key_already_has_an_expiration_time (0.00s)
    --- PASS: TestExpireAtHttp/TEST(GT):_Set_the_expiration_only_if_the_new_expiration_time_is_greater_than_the_current_one (0.00s)
    --- PASS: TestExpireAtHttp/TEST(LT):_Set_the_expiration_only_if_the_new_expiration_time_is_less_than_the_current_one (0.00s)
    --- PASS: TestExpireAtHttp/TEST(NX_+_LT/GT) (0.00s)
    --- PASS: TestExpireAtHttp/TEST(XX_+_LT/GT) (0.00s)
    --- PASS: TestExpireAtHttp/Test_if_value_is_nil_after_expiration_(XX_+_LT) (2.00s)
    --- PASS: TestExpireAtHttp/Test_if_value_is_nil_after_expiration_(NX) (2.00s)
    --- PASS: TestExpireAtHttp/Invalid_Command_Test (0.00s)
=== RUN   TestExpireTimeHttp
=== RUN   TestExpireTimeHttp/EXPIRETIME_command
=== RUN   TestExpireTimeHttp/EXPIRETIME_non-existent_key
=== RUN   TestExpireTimeHttp/EXPIRETIME_with_past_time
=== RUN   TestExpireTimeHttp/EXPIRETIME_with_invalid_syntax
--- PASS: TestExpireTimeHttp (0.00s)
    --- PASS: TestExpireTimeHttp/EXPIRETIME_command (0.00s)
    --- PASS: TestExpireTimeHttp/EXPIRETIME_non-existent_key (0.00s)
    --- PASS: TestExpireTimeHttp/EXPIRETIME_with_past_time (0.00s)
    --- PASS: TestExpireTimeHttp/EXPIRETIME_with_invalid_syntax (0.00s)
=== RUN   TestGet
=== RUN   TestGet/Get_with_expiration
=== RUN   TestObjectCommand/Object_Encoding_check_for_raw
=== RUN   TestObjectCommand/Object_Encoding_check_for_int
=== RUN   TestObjectCommand/Object_Encoding_check_for_embstr
=== RUN   TestObjectCommand/Object_Encoding_check_for_deque
=== RUN   TestObjectCommand/Object_Encoding_check_for_bf
=== RUN   TestObjectCommand/Object_Encoding_check_for_json
=== RUN   TestObjectCommand/Object_Encoding_check_for_bytearray
=== RUN   TestObjectCommand/Object_Encoding_check_for_hashmap
=== RUN   TestObjectCommand/Object_Encoding_check_for_btree
=== RUN   TestObjectCommand/Object_Encoding_check_for_setstr
2024/11/06 02:53:55 INFO FLUSHDB called args=[]
--- PASS: TestObjectCommand (5.01s)
    --- PASS: TestObjectCommand/Object_Idletime (5.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_raw (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_int (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_embstr (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_deque (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_bf (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_json (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_bytearray (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_hashmap (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_btree (0.00s)
    --- PASS: TestObjectCommand/Object_Encoding_check_for_setstr (0.00s)
=== RUN   TestQWatchUnwatch
--- PASS: TestQWatchUnwatch (0.01s)
=== RUN   TestQWATCH
2024/11/06 02:53:55 ERROR broken pipe
2024/11/06 02:53:55 WARN connection reset
2024/11/06 02:53:56 WARN connection reset
2024/11/06 02:53:56 WARN connection reset
=== RUN   TestSetWithOptions/Set_with_EX_and_PX_option
=== RUN   TestSetWithOptions/XX_on_non-existing_key
=== RUN   TestSetWithOptions/NX_on_non-existing_key
=== RUN   TestSetWithOptions/NX_on_existing_key
=== RUN   TestSetWithOptions/PXAT_option
=== RUN   TestSetWithOptions/PXAT_option_with_delete
--- PASS: TestQWATCH (0.41s)
2024/11/06 02:53:56 WARN connection reset
=== RUN   TestQWATCHWithSDK
--- PASS: TestQWATCHWithSDK (0.11s)
=== RUN   TestQWatchWhere
2024/11/06 02:53:56 WARN connection reset
2024/11/06 02:53:56 WARN connection reset
2024/11/06 02:53:56 WARN connection reset
2024/11/06 02:53:56 WARN connection reset
--- PASS: TestQWatchWhere (0.41s)
=== RUN   TestQwatchWithJSON
2024/11/06 02:53:56 WARN connection reset
2024/11/06 02:53:56 WARN connection reset
--- PASS: TestQwatchWithJSON (0.12s)
=== RUN   TestQwatchWithJSONOrderBy
--- PASS: TestQwatchWithJSONOrderBy (0.11s)
=== RUN   TestQwatchWhereWithJSON
2024/11/06 02:53:57 WARN connection reset
2024/11/06 02:53:57 WARN connection reset
--- PASS: TestQwatchWhereWithJSON (0.11s)
=== RUN   TestSelect
=== RUN   TestSelect/SELECT_command_response
=== RUN   TestSelect/SELECT_command_error_response
--- PASS: TestSelect (0.00s)
    --- PASS: TestSelect/SELECT_command_response (0.00s)
    --- PASS: TestSelect/SELECT_command_error_response (0.00s)
=== RUN   TestSetDataCommand
=== RUN   TestSetDataCommand/SADD_Simple_Value
=== RUN   TestSetDataCommand/SADD_Multiple_Values
=== RUN   TestSetDataCommand/SADD_Duplicate_Values
=== RUN   TestSetDataCommand/SADD_Wrong_Key_Value_Type
=== RUN   TestSetDataCommand/SADD_Multiple_add_and_multiple_kind_of_values
=== RUN   TestSetDataCommand/SADD_&_SCARD
=== RUN   TestSetDataCommand/SADD_&_CARD_with_non_existing_key
=== RUN   TestSetDataCommand/SADD_&_SCARD_with_wrong_key_type
=== RUN   TestSetDataCommand/SADD_&_SMEMBERS
=== RUN   TestSetDataCommand/SADD_&_SMEMBERS_with_non_existing_key
=== RUN   TestSetDataCommand/SADD_&_SMEMBERS_with_wrong_key_type
=== RUN   TestSetDataCommand/SADD_&_SREM
=== RUN   TestSetDataCommand/SADD_&_SREM_with_non_existing_key
=== RUN   TestSetDataCommand/SADD_&_SREM_with_wrong_key_type
=== RUN   TestSetDataCommand/SADD_&_SREM_with_non_existing_value
=== RUN   TestSetDataCommand/SADD_&_SDIFF
=== RUN   TestSetDataCommand/SADD_&_SDIFF_with_non_existing_subsequent_key
=== RUN   TestSetDataCommand/SADD_&_SDIFF_with_wrong_key_type
=== RUN   TestSetDataCommand/SADD_&_SDIFF_with_subsequent_key_of_wrong_type
=== RUN   TestSetDataCommand/SADD_&_SDIFF_with_non_existing_first_key
=== RUN   TestSetDataCommand/SADD_&_SDIFF_with_one_key
=== RUN   TestSetDataCommand/SADD_&_SINTER
=== RUN   TestSetDataCommand/SADD_&_SINTER_with_non_existing_subsequent_key
=== RUN   TestSetDataCommand/SADD_&_SINTER_with_wrong_key_type
=== RUN   TestSetDataCommand/SADD_&_SINTER_with_subsequent_key_of_wrong_type
--- PASS: TestSetDataCommand (0.01s)
    --- PASS: TestSetDataCommand/SADD_Simple_Value (0.00s)
    --- PASS: TestSetDataCommand/SADD_Multiple_Values (0.00s)
    --- PASS: TestSetDataCommand/SADD_Duplicate_Values (0.00s)
    --- PASS: TestSetDataCommand/SADD_Wrong_Key_Value_Type (0.00s)
    --- PASS: TestSetDataCommand/SADD_Multiple_add_and_multiple_kind_of_values (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SCARD (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_CARD_with_non_existing_key (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SCARD_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SMEMBERS (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SMEMBERS_with_non_existing_key (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SMEMBERS_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SREM (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SREM_with_non_existing_key (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SREM_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SREM_with_non_existing_value (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SDIFF (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SDIFF_with_non_existing_subsequent_key (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SDIFF_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SDIFF_with_subsequent_key_of_wrong_type (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SDIFF_with_non_existing_first_key (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SDIFF_with_one_key (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SINTER (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SINTER_with_non_existing_subsequent_key (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SINTER_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCommand/SADD_&_SINTER_with_subsequent_key_of_wrong_type (0.00s)
=== RUN   TestSet
=== RUN   TestGetEx/GetEx_with_PX_option
=== RUN   TestSet/Set_and_Get_Simple_Value
=== RUN   TestSet/Set_and_Get_Integer_Value
=== RUN   TestSet/Overwrite_Existing_Key
--- PASS: TestSet (0.00s)
    --- PASS: TestSet/Set_and_Get_Simple_Value (0.00s)
    --- PASS: TestSet/Set_and_Get_Integer_Value (0.00s)
    --- PASS: TestSet/Overwrite_Existing_Key (0.00s)
=== RUN   TestSetWithOptions
=== RUN   TestSetWithOptions/Set_with_EX_option
=== RUN   TestSetWithOptions/PXAT_option_with_invalid_unix_time_ms
=== RUN   TestSetWithOptions/XX_on_existing_key
=== RUN   TestSetWithOptions/Multiple_XX_operations
=== RUN   TestSetWithOptions/EX_option
=== RUN   TestGetEx/GetEx_with_EX_option_and_invalid_value
=== RUN   TestGetEx/GetEx_with_PX_option_and_invalid_value
=== RUN   TestGetEx/GetEx_with_EXAT_option
=== RUN   TestSetWithOptions/Set_with_PX_option
=== RUN   TestSetWithOptions/XX_option
--- PASS: TestSetWithOptions (12.03s)
    --- PASS: TestSetWithOptions/Set_with_EX_option (3.00s)
    --- PASS: TestSetWithOptions/Set_with_PX_option (3.00s)
    --- PASS: TestSetWithOptions/Set_with_EX_and_PX_option (0.00s)
    --- PASS: TestSetWithOptions/XX_on_non-existing_key (0.00s)
    --- PASS: TestSetWithOptions/NX_on_non-existing_key (0.00s)
    --- PASS: TestSetWithOptions/NX_on_existing_key (0.00s)
    --- PASS: TestSetWithOptions/PXAT_option (0.00s)
    --- PASS: TestSetWithOptions/PXAT_option_with_delete (2.00s)
    --- PASS: TestSetWithOptions/PXAT_option_with_invalid_unix_time_ms (0.00s)
    --- PASS: TestSetWithOptions/XX_on_existing_key (0.00s)
    --- PASS: TestSetWithOptions/Multiple_XX_operations (0.00s)
    --- PASS: TestSetWithOptions/EX_option (2.00s)
    --- PASS: TestSetWithOptions/XX_option (2.00s)
=== RUN   TestSetWithExat
=== RUN   TestSetWithExat/SET_with_EXAT
=== RUN   TestSetWithOptions/Set_with_EX_and_PX_option
=== RUN   TestSetWithOptions/XX_on_non-existing_key
=== RUN   TestSetWithOptions/XX_on_existing_key
=== RUN   TestSetWithOptions/NX_on_non-existing_key
=== RUN   TestSetWithOptions/NX_on_existing_key
=== RUN   TestSetWithOptions/PXAT_option
=== RUN   TestSetWithOptions/PXAT_option_with_delete
=== RUN   TestGetEx/GetEx_with_PXAT_option
=== RUN   TestSetWithOptions/PXAT_option_with_invalid_unix_time_ms
=== RUN   TestSetWithOptions/Multiple_XX_operations
=== RUN   TestSetWithOptions/XX_option
--- PASS: TestGet (10.00s)
    --- PASS: TestGet/Get_with_expiration (10.00s)
=== RUN   TestGetDel
=== RUN   TestGetDel/GetDel
=== RUN   TestGetDel/GetDel_with_expiration,_checking_if_key_exist_and_is_already_expired
--- PASS: TestSetWithOptions (10.01s)
    --- PASS: TestSetWithOptions/Set_with_EX_option (3.00s)
    --- PASS: TestSetWithOptions/Set_with_PX_option (3.00s)
    --- PASS: TestSetWithOptions/Set_with_EX_and_PX_option (0.00s)
    --- PASS: TestSetWithOptions/XX_on_non-existing_key (0.00s)
    --- PASS: TestSetWithOptions/XX_on_existing_key (0.00s)
    --- PASS: TestSetWithOptions/NX_on_non-existing_key (0.00s)
    --- PASS: TestSetWithOptions/NX_on_existing_key (0.00s)
    --- PASS: TestSetWithOptions/PXAT_option (0.00s)
    --- PASS: TestSetWithOptions/PXAT_option_with_delete (2.00s)
    --- PASS: TestSetWithOptions/PXAT_option_with_invalid_unix_time_ms (0.00s)
    --- PASS: TestSetWithOptions/Multiple_XX_operations (0.00s)
    --- PASS: TestSetWithOptions/XX_option (2.00s)
=== RUN   TestSetWithExat
=== RUN   TestSetWithExat/SET_with_EXAT
=== RUN   TestSetWithExat/SET_with_invalid_EXAT_expires_key_immediately
=== RUN   TestSetWithExat/SET_with_EXAT_and_PXAT_returns_syntax_error
--- PASS: TestSetWithExat (6.01s)
    --- PASS: TestSetWithExat/SET_with_EXAT (6.01s)
    --- PASS: TestSetWithExat/SET_with_invalid_EXAT_expires_key_immediately (0.00s)
    --- PASS: TestSetWithExat/SET_with_EXAT_and_PXAT_returns_syntax_error (0.00s)
=== RUN   TestWithKeepTTLFlag
=== RUN   TestGetDel/GetDel_with_expiration,_checking_if_key_exist_and_is_not_yet_expired
=== RUN   TestGetEx/GetEx_with_EXAT_option_and_invalid_value
=== RUN   TestGetEx/GetEx_with_PXAT_option_and_invalid_value
=== RUN   TestGetEx/GetEx_with_Persist_option
=== RUN   TestGetEx/GetEx_with_multiple_expiry_options
=== RUN   TestGetEx/GetEx_with_persist_and_ex_options
=== RUN   TestGetEx/GetEx_with_persist_and_px_options
=== RUN   TestGetEx/GetEx_with_key_holding_JSON_type
=== RUN   TestGetEx/GetEx_with_key_holding_JSON_type_with_multiple_set_commands
=== RUN   TestGetEx/GetEx_with_key_holding_SET_type
--- PASS: TestGetEx (14.02s)
    --- PASS: TestGetEx/GetEx_Simple_Value (0.00s)
    --- PASS: TestGetEx/GetEx_Non-Existent_Key (0.00s)
    --- PASS: TestGetEx/GetEx_with_EX_option (2.00s)
    --- PASS: TestGetEx/GetEx_with_PX_option (2.00s)
    --- PASS: TestGetEx/GetEx_with_EX_option_and_invalid_value (0.00s)
    --- PASS: TestGetEx/GetEx_with_PX_option_and_invalid_value (0.00s)
    --- PASS: TestGetEx/GetEx_with_EXAT_option (5.00s)
    --- PASS: TestGetEx/GetEx_with_PXAT_option (5.00s)
    --- PASS: TestGetEx/GetEx_with_EXAT_option_and_invalid_value (0.00s)
    --- PASS: TestGetEx/GetEx_with_PXAT_option_and_invalid_value (0.00s)
    --- PASS: TestGetEx/GetEx_with_Persist_option (0.00s)
    --- PASS: TestGetEx/GetEx_with_multiple_expiry_options (0.00s)
    --- PASS: TestGetEx/GetEx_with_persist_and_ex_options (0.00s)
    --- PASS: TestGetEx/GetEx_with_persist_and_px_options (0.00s)
    --- PASS: TestGetEx/GetEx_with_key_holding_JSON_type (0.00s)
    --- PASS: TestGetEx/GetEx_with_key_holding_JSON_type_with_multiple_set_commands (0.00s)
    --- PASS: TestGetEx/GetEx_with_key_holding_SET_type (0.00s)
=== RUN   TestGETRANGE
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Stopping worker workerID=W-24185-23
2024/11/06 02:54:09 INFO FLUSHDB called args=[]
=== RUN   TestGETRANGE/Get_range_on_a_string
=== RUN   TestGETRANGE/Get_range_on_a_non_existent_key
=== RUN   TestGETRANGE/Get_range_on_wrong_key_type
=== RUN   TestGETRANGE/GETRANGE_against_string_value:_0,_-1
=== RUN   TestGETRANGE/GETRANGE_against_string_value:_5,_3
=== RUN   TestGETRANGE/GETRANGE_against_integer_value:_-1,_-100
2024/11/06 02:54:09 INFO FLUSHDB called args=[]
--- PASS: TestGETRANGE (0.00s)
    --- PASS: TestGETRANGE/Get_range_on_a_string (0.00s)
    --- PASS: TestGETRANGE/Get_range_on_a_non_existent_key (0.00s)
    --- PASS: TestGETRANGE/Get_range_on_wrong_key_type (0.00s)
    --- PASS: TestGETRANGE/GETRANGE_against_string_value:_0,_-1 (0.00s)
    --- PASS: TestGETRANGE/GETRANGE_against_string_value:_5,_3 (0.00s)
    --- PASS: TestGETRANGE/GETRANGE_against_integer_value:_-1,_-100 (0.00s)
=== RUN   TestGetSet
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Stopping worker workerID=W-38206-24
=== RUN   TestGetSet/GETSET_with_INCR
=== RUN   TestGetSet/GETSET_with_SET
=== RUN   TestGetSet/GETSET_with_TTL
=== RUN   TestGetSet/GETSET_error_when_key_exists_but_does_not_hold_a_string_value
--- PASS: TestGetSet (0.00s)
    --- PASS: TestGetSet/GETSET_with_INCR (0.00s)
    --- PASS: TestGetSet/GETSET_with_SET (0.00s)
    --- PASS: TestGetSet/GETSET_with_TTL (0.00s)
    --- PASS: TestGetSet/GETSET_error_when_key_exists_but_does_not_hold_a_string_value (0.00s)
=== RUN   TestGETUNWATCH
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Stopping worker workerID=W-38209-25
--- PASS: TestGETUNWATCH (0.61s)
=== RUN   TestGETUNWATCHWithSDK
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Stopping worker workerID=W-38212-26
2024/11/06 02:54:09 INFO Stopping worker workerID=W-38212-27
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Stopping worker workerID=W-38213-29
2024/11/06 02:54:09 INFO Closing connection
2024/11/06 02:54:09 INFO Stopping worker workerID=W-38213-28
--- PASS: TestGETUNWATCHWithSDK (0.00s)
=== RUN   TestGETWATCH
panic: Fail in goroutine after TestGETUNWATCHWithSDK has completed

goroutine 1171 [running]:
testing.(*common).Fail(0xc419da2340)
	/Users/apoorvyadav/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.0.darwin-arm64/src/testing/testing.go:953 +0x140
testing.(*common).Errorf(0xc419da2340, {0x105040f68, 0x3}, {0xc41a2176f0, 0x1, 0x1})
	/Users/apoorvyadav/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.0.darwin-arm64/src/testing/testing.go:1076 +0x8c
github.com/stretchr/testify/assert.Fail({0x1052e47a0, 0xc419da2340}, {0xc41a206c00, 0x3c}, {0x0, 0x0, 0x0})
	/Users/apoorvyadav/go/pkg/mod/github.com/stretchr/testify@v1.9.0/assert/assertions.go:363 +0x3a4
github.com/dicedb/dice/integration_tests/commands/resp.TestGETUNWATCHWithSDK.func1(0xc41a59e2a0)
	/Users/apoorvyadav/work/self/dice_parent/my_fork/migrate/dice/integration_tests/commands/resp/getunwatch_test.go:175 +0x110
created by github.com/dicedb/dice/integration_tests/commands/resp.TestGETUNWATCHWithSDK in goroutine 1069
	/Users/apoorvyadav/work/self/dice_parent/my_fork/migrate/dice/integration_tests/commands/resp/getunwatch_test.go:172 +0x9bc
FAIL	github.com/dicedb/dice/integration_tests/commands/resp	40.498s
FAIL
--- PASS: TestWithKeepTTLFlag (2.00s)
=== RUN   TestTTLPTTL
=== RUN   TestTTLPTTL/TTL_Simple_Value
=== RUN   TestTTLPTTL/PTTL_Simple_Value
=== RUN   TestTTLPTTL/TTL_&_PTTL_Non-Existent_Key
=== RUN   TestTTLPTTL/TTL_&_PTTL_without_Expiry
=== RUN   TestTTLPTTL/TTL_&_PTTL_with_Persist
=== RUN   TestTTLPTTL/TTL_&_PTTL_with_Expire_and_Expired_Key
=== RUN   TestGetDel/GetDel_with_invalid_command
=== RUN   TestGetDel/Getdel_with_value_created_from_Setbit
=== RUN   TestGetDel/GetDel_with_Set_object_should_return_wrong_type_error
=== RUN   TestGetDel/GetDel_with_JSON_object_should_return_wrong_type_error
--- PASS: TestGetDel (5.02s)
    --- PASS: TestGetDel/GetDel (0.00s)
    --- PASS: TestGetDel/GetDel_with_expiration,_checking_if_key_exist_and_is_already_expired (3.00s)
    --- PASS: TestGetDel/GetDel_with_expiration,_checking_if_key_exist_and_is_not_yet_expired (2.00s)
    --- PASS: TestGetDel/GetDel_with_invalid_command (0.00s)
    --- PASS: TestGetDel/Getdel_with_value_created_from_Setbit (0.00s)
    --- PASS: TestGetDel/GetDel_with_Set_object_should_return_wrong_type_error (0.00s)
    --- PASS: TestGetDel/GetDel_with_JSON_object_should_return_wrong_type_error (0.00s)
=== RUN   TestGetEx
=== RUN   TestGetEx/GetEx_Simple_Value
=== RUN   TestGetEx/GetEx_Non-Existent_Key
=== RUN   TestGetEx/GetEx_with_EX_option
=== RUN   TestGetEx/GetEx_with_PX_option
=== RUN   TestSetWithExat/SET_with_invalid_EXAT_expires_key_immediately
=== RUN   TestSetWithExat/SET_with_EXAT_and_PXAT_returns_syntax_error
--- PASS: TestSetWithExat (6.01s)
    --- PASS: TestSetWithExat/SET_with_EXAT (6.00s)
    --- PASS: TestSetWithExat/SET_with_invalid_EXAT_expires_key_immediately (0.00s)
    --- PASS: TestSetWithExat/SET_with_EXAT_and_PXAT_returns_syntax_error (0.00s)
=== RUN   TestWithKeepTTLFlag
=== RUN   TestGetEx/GetEx_with_EX_option_and_invalid_value
=== RUN   TestGetEx/GetEx_with_PX_option_and_invalid_value
=== RUN   TestGetEx/GetEx_with_EXAT_option
--- PASS: TestWithKeepTTLFlag (2.01s)
=== RUN   TestConcurrentSetCommands
--- PASS: TestConcurrentSetCommands (0.01s)
=== RUN   TestJSONToggle
=== RUN   TestJSONToggle/JSON.TOGGLE_with_existing_key
=== RUN   TestJSONToggle/JSON.TOGGLE_with_non-existing_key
=== RUN   TestJSONToggle/JSON.TOGGLE_with_invalid_path
=== RUN   TestJSONToggle/JSON.TOGGLE_with_invalid_command_format
=== RUN   TestJSONToggle/deeply_nested_JSON_structure_with_multiple_matching_fields
--- PASS: TestJSONToggle (0.01s)
    --- PASS: TestJSONToggle/JSON.TOGGLE_with_existing_key (0.00s)
    --- PASS: TestJSONToggle/JSON.TOGGLE_with_non-existing_key (0.00s)
    --- PASS: TestJSONToggle/JSON.TOGGLE_with_invalid_path (0.00s)
    --- PASS: TestJSONToggle/JSON.TOGGLE_with_invalid_command_format (0.00s)
    --- PASS: TestJSONToggle/deeply_nested_JSON_structure_with_multiple_matching_fields (0.00s)
=== RUN   TestTouch
=== RUN   TestTouch/Touch_Simple_Value
--- PASS: TestTTLPTTL (5.01s)
    --- PASS: TestTTLPTTL/TTL_Simple_Value (0.00s)
    --- PASS: TestTTLPTTL/PTTL_Simple_Value (0.00s)
    --- PASS: TestTTLPTTL/TTL_&_PTTL_Non-Existent_Key (0.00s)
    --- PASS: TestTTLPTTL/TTL_&_PTTL_without_Expiry (0.00s)
    --- PASS: TestTTLPTTL/TTL_&_PTTL_with_Persist (0.00s)
    --- PASS: TestTTLPTTL/TTL_&_PTTL_with_Expire_and_Expired_Key (5.00s)
=== RUN   TestWriteResponseWithRetries_Success
--- PASS: TestWriteResponseWithRetries_Success (0.00s)
=== RUN   TestWriteResponseWithRetries_NetworkError
--- PASS: TestWriteResponseWithRetries_NetworkError (0.00s)
=== RUN   TestWriteResponseWithRetries_BrokenPipe
--- PASS: TestWriteResponseWithRetries_BrokenPipe (0.00s)
=== RUN   TestWriteResponseWithRetries_EAGAINRetry
=== RUN   TestTouch/Touch_Multiple_Existing_Keys
=== RUN   TestTouch/Touch_Multiple_Existing_and_Non-Existing_Keys
--- PASS: TestTouch (2.00s)
    --- PASS: TestTouch/Touch_Simple_Value (2.00s)
    --- PASS: TestTouch/Touch_Multiple_Existing_Keys (0.00s)
    --- PASS: TestTouch/Touch_Multiple_Existing_and_Non-Existing_Keys (0.00s)
=== RUN   TestType
=== RUN   TestType/TYPE_with_invalid_number_of_arguments
=== RUN   TestType/TYPE_for_non-existent_key
=== RUN   TestType/TYPE_for_key_with_String_value
=== RUN   TestType/TYPE_for_key_with_List_value
=== RUN   TestType/TYPE_for_key_with_Set_value
=== RUN   TestType/TYPE_for_key_with_Hash_value
=== RUN   TestType/TYPE_for_key_with_value_created_from_SETBIT_command
=== RUN   TestType/TYPE_for_key_with_value_created_from_SETOP_command
--- PASS: TestType (0.00s)
    --- PASS: TestType/TYPE_with_invalid_number_of_arguments (0.00s)
    --- PASS: TestType/TYPE_for_non-existent_key (0.00s)
    --- PASS: TestType/TYPE_for_key_with_String_value (0.00s)
    --- PASS: TestType/TYPE_for_key_with_List_value (0.00s)
    --- PASS: TestType/TYPE_for_key_with_Set_value (0.00s)
    --- PASS: TestType/TYPE_for_key_with_Hash_value (0.00s)
    --- PASS: TestType/TYPE_for_key_with_value_created_from_SETBIT_command (0.00s)
    --- PASS: TestType/TYPE_for_key_with_value_created_from_SETOP_command (0.00s)
PASS
ok  	github.com/dicedb/dice/integration_tests/commands/async	48.971s
=== RUN   TestGetEx/GetEx_with_PXAT_option
--- PASS: TestWriteResponseWithRetries_EAGAINRetry (10.85s)
=== RUN   TestZCARD
=== RUN   TestZCARD/ZCARD_with_wrong_number_of_arguments
=== RUN   TestZCARD/ZCARD_with_wrong_type_of_key
=== RUN   TestZCARD/ZCARD_with_non-existent_key
=== RUN   TestZCARD/ZCARD_with_sorted_set_holding_single_element
=== RUN   TestZCARD/ZCARD_with_sorted_set_holding_multiple_elements
--- PASS: TestZCARD (0.01s)
    --- PASS: TestZCARD/ZCARD_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestZCARD/ZCARD_with_wrong_type_of_key (0.00s)
    --- PASS: TestZCARD/ZCARD_with_non-existent_key (0.00s)
    --- PASS: TestZCARD/ZCARD_with_sorted_set_holding_single_element (0.00s)
    --- PASS: TestZCARD/ZCARD_with_sorted_set_holding_multiple_elements (0.00s)
=== RUN   TestZPOPMAX
=== RUN   TestZPOPMAX/ZPOPMAX_on_non-existing_key_with/without_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_with_wrong_type_of_key_with/without_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_on_existing_key_(without_count_argument)
=== RUN   TestZPOPMAX/ZPOPMAX_with_normal_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_with_count_argument_but_multiple_members_have_the_same_score
=== RUN   TestZPOPMAX/ZPOPMAX_with_negative_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_with_invalid_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_with_count_argument_greater_than_length_of_sorted_set
=== RUN   TestZPOPMAX/ZPOPMAX_on_empty_sorted_set
=== RUN   TestZPOPMAX/ZPOPMAX_with_floating-point_scores
--- PASS: TestZPOPMAX (0.02s)
    --- PASS: TestZPOPMAX/ZPOPMAX_on_non-existing_key_with/without_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_wrong_type_of_key_with/without_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_on_existing_key_(without_count_argument) (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_normal_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_count_argument_but_multiple_members_have_the_same_score (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_negative_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_invalid_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_count_argument_greater_than_length_of_sorted_set (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_on_empty_sorted_set (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_floating-point_scores (0.00s)
=== RUN   TestZRANK
=== RUN   TestZRANK/ZRANK_of_existing_member
=== RUN   TestZRANK/ZRANK_of_non-existing_member
=== RUN   TestZRANK/ZRANK_with_WITHSCORE_option_for_existing_member
=== RUN   TestZRANK/ZRANK_with_WITHSCORE_option_for_non-existing_member
=== RUN   TestZRANK/ZRANK_on_non-existing_myset
=== RUN   TestZRANK/ZRANK_with_wrong_number_of_arguments
=== RUN   TestZRANK/ZRANK_with_invalid_option
--- PASS: TestZRANK (0.00s)
    --- PASS: TestZRANK/ZRANK_of_existing_member (0.00s)
    --- PASS: TestZRANK/ZRANK_of_non-existing_member (0.00s)
    --- PASS: TestZRANK/ZRANK_with_WITHSCORE_option_for_existing_member (0.00s)
    --- PASS: TestZRANK/ZRANK_with_WITHSCORE_option_for_non-existing_member (0.00s)
    --- PASS: TestZRANK/ZRANK_on_non-existing_myset (0.00s)
    --- PASS: TestZRANK/ZRANK_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestZRANK/ZRANK_with_invalid_option (0.00s)
=== RUN   TestZREM
=== RUN   TestZREM/ZREM_with_wrong_number_of_arguments
=== RUN   TestZREM/ZREM_with_wrong_type_of_key
=== RUN   TestZREM/ZREM_with_non-existent_key
=== RUN   TestZREM/ZREM_with_non-existent_element
=== RUN   TestZREM/ZREM_with_sorted_set_holding_single_element
=== RUN   TestZREM/ZREM_with_sorted_set_holding_multiple_elements
--- PASS: TestZREM (0.01s)
    --- PASS: TestZREM/ZREM_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestZREM/ZREM_with_wrong_type_of_key (0.00s)
    --- PASS: TestZREM/ZREM_with_non-existent_key (0.00s)
    --- PASS: TestZREM/ZREM_with_non-existent_element (0.00s)
    --- PASS: TestZREM/ZREM_with_sorted_set_holding_single_element (0.00s)
    --- PASS: TestZREM/ZREM_with_sorted_set_holding_multiple_elements (0.00s)
=== RUN   TestZPOPMIN
=== RUN   TestZPOPMIN/ZPOPMIN_on_non-existing_key_with/without_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_with_wrong_type_of_key_with/without_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_on_existing_key_(without_count_argument)
=== RUN   TestZPOPMIN/ZPOPMIN_with_normal_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_with_count_argument_but_multiple_members_have_the_same_score
=== RUN   TestZPOPMIN/ZPOPMIN_with_negative_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_with_invalid_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_with_count_argument_greater_than_length_of_sorted_set
=== RUN   TestZPOPMIN/ZPOPMIN_on_empty_sorted_set
=== RUN   TestZPOPMIN/ZPOPMIN_with_floating-point_scores
--- PASS: TestZPOPMIN (0.02s)
    --- PASS: TestZPOPMIN/ZPOPMIN_on_non-existing_key_with/without_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_wrong_type_of_key_with/without_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_on_existing_key_(without_count_argument) (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_normal_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_count_argument_but_multiple_members_have_the_same_score (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_negative_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_invalid_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_count_argument_greater_than_length_of_sorted_set (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_on_empty_sorted_set (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_floating-point_scores (0.00s)
=== RUN   TestZCOUNT
=== RUN   TestZCOUNT/ZCOUNT_on_non-existing_key
=== RUN   TestZCOUNT/ZCOUNT_on_key_with_wrong_type
=== RUN   TestZCOUNT/ZCOUNT_on_existing_key_with_valid_range
=== RUN   TestZCOUNT/ZCOUNT_with_min_and_max_outside_the_range_of_elements
=== RUN   TestZCOUNT/ZCOUNT_with_min_greater_than_max
=== RUN   TestZCOUNT/ZCOUNT_with_negative_scores_and_valid_range
=== RUN   TestZCOUNT/ZCOUNT_with_floating-point_scores
=== RUN   TestZCOUNT/ZCOUNT_with_exact_matching_min_and_max
=== RUN   TestZCOUNT/ZCOUNT_on_an_empty_sorted_set
--- PASS: TestZCOUNT (0.01s)
    --- PASS: TestZCOUNT/ZCOUNT_on_non-existing_key (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_on_key_with_wrong_type (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_on_existing_key_with_valid_range (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_min_and_max_outside_the_range_of_elements (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_min_greater_than_max (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_negative_scores_and_valid_range (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_floating-point_scores (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_exact_matching_min_and_max (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_on_an_empty_sorted_set (0.00s)
PASS
ok  	github.com/dicedb/dice/integration_tests/commands/websocket	57.942s
=== RUN   TestGetEx/GetEx_with_EXAT_option_and_invalid_value
=== RUN   TestGetEx/GetEx_with_PXAT_option_and_invalid_value
=== RUN   TestGetEx/GetEx_with_PERSIST_option
=== RUN   TestGetEx/GetEx_with_multiple_expiry_options
=== RUN   TestGetEx/GetEx_with_persist_and_ex_options
=== RUN   TestGetEx/GetEx_with_persist_and_px_options
=== RUN   TestGetEx/GetEx_with_key_holding_JSON_type
=== RUN   TestGetEx/GetEx_with_key_holding_JSON_type_with_multiple_set_commands
=== RUN   TestGetEx/GetEx_with_key_holding_SET_type
--- PASS: TestGetEx (19.07s)
    --- PASS: TestGetEx/GetEx_Simple_Value (0.00s)
    --- PASS: TestGetEx/GetEx_Non-Existent_Key (0.00s)
    --- PASS: TestGetEx/GetEx_with_EX_option (2.01s)
    --- PASS: TestGetEx/GetEx_with_PX_option (2.01s)
    --- PASS: TestGetEx/GetEx_with_EX_option_and_invalid_value (0.01s)
    --- PASS: TestGetEx/GetEx_with_PX_option_and_invalid_value (0.01s)
    --- PASS: TestGetEx/GetEx_with_EXAT_option (5.01s)
    --- PASS: TestGetEx/GetEx_with_PXAT_option (10.01s)
    --- PASS: TestGetEx/GetEx_with_EXAT_option_and_invalid_value (0.00s)
    --- PASS: TestGetEx/GetEx_with_PXAT_option_and_invalid_value (0.00s)
    --- PASS: TestGetEx/GetEx_with_PERSIST_option (0.00s)
    --- PASS: TestGetEx/GetEx_with_multiple_expiry_options (0.00s)
    --- PASS: TestGetEx/GetEx_with_persist_and_ex_options (0.00s)
    --- PASS: TestGetEx/GetEx_with_persist_and_px_options (0.00s)
    --- PASS: TestGetEx/GetEx_with_key_holding_JSON_type (0.00s)
    --- PASS: TestGetEx/GetEx_with_key_holding_JSON_type_with_multiple_set_commands (0.00s)
    --- PASS: TestGetEx/GetEx_with_key_holding_SET_type (0.00s)
=== RUN   TestGETRANGE
=== RUN   TestGETRANGE/Get_range_on_a_string
=== RUN   TestGETRANGE/Get_range_on_a_non_existent_key
=== RUN   TestGETRANGE/Get_range_on_wrong_key_type
=== RUN   TestGETRANGE/GETRANGE_against_string_value:_0,_-1
=== RUN   TestGETRANGE/GETRANGE_against_string_value:_5,_3
--- PASS: TestGETRANGE (0.01s)
    --- PASS: TestGETRANGE/Get_range_on_a_string (0.00s)
    --- PASS: TestGETRANGE/Get_range_on_a_non_existent_key (0.00s)
    --- PASS: TestGETRANGE/Get_range_on_wrong_key_type (0.00s)
    --- PASS: TestGETRANGE/GETRANGE_against_string_value:_0,_-1 (0.00s)
    --- PASS: TestGETRANGE/GETRANGE_against_string_value:_5,_3 (0.00s)
=== RUN   TestGetSet
=== RUN   TestGetSet/GETSET_with_INCR
=== RUN   TestGetSet/GETSET_with_SET
=== RUN   TestGetSet/GETSET_with_TTL
=== RUN   TestGetSet/GETSET_error_when_key_exists_but_does_not_hold_a_string_value
--- PASS: TestGetSet (0.00s)
    --- PASS: TestGetSet/GETSET_with_INCR (0.00s)
    --- PASS: TestGetSet/GETSET_with_SET (0.00s)
    --- PASS: TestGetSet/GETSET_with_TTL (0.00s)
    --- PASS: TestGetSet/GETSET_error_when_key_exists_but_does_not_hold_a_string_value (0.00s)
=== RUN   TestHDel
=== RUN   TestHDel/HDEL_with_wrong_number_of_arguments
=== RUN   TestHDel/HDEL_with_single_field
=== RUN   TestHDel/HDEL_with_multiple_fields
=== RUN   TestHDel/HDEL_on_non-existent_field
=== RUN   TestHDel/HDEL_on_non-existent_hash
=== RUN   TestHDel/HDEL_with_wrong_type
--- PASS: TestHDel (0.01s)
    --- PASS: TestHDel/HDEL_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHDel/HDEL_with_single_field (0.00s)
    --- PASS: TestHDel/HDEL_with_multiple_fields (0.00s)
    --- PASS: TestHDel/HDEL_on_non-existent_field (0.00s)
    --- PASS: TestHDel/HDEL_on_non-existent_hash (0.00s)
    --- PASS: TestHDel/HDEL_with_wrong_type (0.00s)
=== RUN   TestHExists
=== RUN   TestHExists/HTTP_Check_if_field_exists_when_k_f_and_v_are_set
=== RUN   TestHExists/HTTP_Check_if_field_exists_when_k_exists_but_not_f_and_v
=== RUN   TestHExists/HTTP_Check_if_field_exists_when_no_k,f_and_v_exist
--- PASS: TestHExists (0.01s)
    --- PASS: TestHExists/HTTP_Check_if_field_exists_when_k_f_and_v_are_set (0.00s)
    --- PASS: TestHExists/HTTP_Check_if_field_exists_when_k_exists_but_not_f_and_v (0.00s)
    --- PASS: TestHExists/HTTP_Check_if_field_exists_when_no_k,f_and_v_exist (0.00s)
=== RUN   TestHGet
=== RUN   TestHGet/HGET_with_wrong_number_of_arguments
=== RUN   TestHGet/HGET_on_existent_hash
=== RUN   TestHGet/HGET_on_non-existent_field
=== RUN   TestHGet/HGET_on_non-existent_hash
=== RUN   TestHGet/HGET_with_wrong_type
--- PASS: TestHGet (0.01s)
    --- PASS: TestHGet/HGET_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHGet/HGET_on_existent_hash (0.00s)
    --- PASS: TestHGet/HGET_on_non-existent_field (0.00s)
    --- PASS: TestHGet/HGET_on_non-existent_hash (0.00s)
    --- PASS: TestHGet/HGET_with_wrong_type (0.00s)
=== RUN   TestHINCRBY
=== RUN   TestHINCRBY/HINCRBY_Wrong_number_of_arguments_provided
=== RUN   TestHINCRBY/HINCRBY_should_increment_when_key_doesn't_exist
=== RUN   TestHINCRBY/HINCRBY_should_increment_when_key_exists_and_a_field_doesn't_exist
=== RUN   TestHINCRBY/HINCRBY_should_increment_on_existing_key_and_field
=== RUN   TestHINCRBY/HINCRBY_should_decrement_on_existing_key_and_field
=== RUN   TestHINCRBY/HINCRBY_should_give_error_when_increment_field_is_greater_than_max_int64_field
--- PASS: TestHINCRBY (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_Wrong_number_of_arguments_provided (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_should_increment_when_key_doesn't_exist (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_should_increment_when_key_exists_and_a_field_doesn't_exist (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_should_increment_on_existing_key_and_field (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_should_decrement_on_existing_key_and_field (0.00s)
    --- PASS: TestHINCRBY/HINCRBY_should_give_error_when_increment_field_is_greater_than_max_int64_field (0.00s)
=== RUN   TestHINCRBYFLOAT
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_Wrong_number_of_arguments_provided
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_should_increment_when_key_doesn't_exist
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_should_increment_when_key_exists_and_a_field_doesn't_exist
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_should_increment_on_existing_key_and_field
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_should_decrement_on_existing_key_and_field
=== RUN   TestHINCRBYFLOAT/HINCRBYFLOAT_should_give_error_when_trying_to_increment_a_key_which_is_not_a_hash_value_with_a_value_which_is_not_integer_or_a_float
--- PASS: TestHINCRBYFLOAT (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_Wrong_number_of_arguments_provided (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_should_increment_when_key_doesn't_exist (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_should_increment_when_key_exists_and_a_field_doesn't_exist (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_should_increment_on_existing_key_and_field (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_should_decrement_on_existing_key_and_field (0.00s)
    --- PASS: TestHINCRBYFLOAT/HINCRBYFLOAT_should_give_error_when_trying_to_increment_a_key_which_is_not_a_hash_value_with_a_value_which_is_not_integer_or_a_float (0.00s)
=== RUN   TestHKeys
=== RUN   TestHKeys/HTTP_One_or_more_keys_exist
=== RUN   TestHKeys/HTTP_No_keys_exist
--- PASS: TestHKeys (0.00s)
    --- PASS: TestHKeys/HTTP_One_or_more_keys_exist (0.00s)
    --- PASS: TestHKeys/HTTP_No_keys_exist (0.00s)
=== RUN   TestHLen
=== RUN   TestHLen/HLEN_with_wrong_number_of_arguments
=== RUN   TestHLen/HLEN_with_wrong_key
=== RUN   TestHLen/HLEN_with_single_field
=== RUN   TestHLen/HLEN_with_multiple_fields
=== RUN   TestHLen/HLEN_with_wrong_type
--- PASS: TestHLen (0.01s)
    --- PASS: TestHLen/HLEN_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHLen/HLEN_with_wrong_key (0.00s)
    --- PASS: TestHLen/HLEN_with_single_field (0.00s)
    --- PASS: TestHLen/HLEN_with_multiple_fields (0.00s)
    --- PASS: TestHLen/HLEN_with_wrong_type (0.00s)
=== RUN   TestHRANDFIELD
=== RUN   TestHRANDFIELD/Basic_HRANDFIELD_operations
=== RUN   TestHRANDFIELD/HRANDFIELD_with_count
=== RUN   TestHRANDFIELD/HRANDFIELD_with_WITHVALUES
=== RUN   TestHRANDFIELD/HRANDFIELD_on_non-existent_key
--- PASS: TestHRANDFIELD (0.00s)
    --- PASS: TestHRANDFIELD/Basic_HRANDFIELD_operations (0.00s)
    --- PASS: TestHRANDFIELD/HRANDFIELD_with_count (0.00s)
    --- PASS: TestHRANDFIELD/HRANDFIELD_with_WITHVALUES (0.00s)
    --- PASS: TestHRANDFIELD/HRANDFIELD_on_non-existent_key (0.00s)
=== RUN   TestHScan
=== RUN   TestHScan/HSCAN_with_wrong_number_of_arguments
=== RUN   TestHScan/HSCAN_with_wrong_key
=== RUN   TestHScan/HSCAN_with_non_hash
=== RUN   TestHScan/HSCAN_with_valid_key_and_cursor
=== RUN   TestHScan/HSCAN_with_cursor_at_the_end
=== RUN   TestHScan/HSCAN_with_cursor_at_the_beginning
=== RUN   TestHScan/HSCAN_with_cursor_in_the_middle
=== RUN   TestHScan/HSCAN_with_MATCH_argument
=== RUN   TestHScan/HSCAN_with_COUNT_argument
=== RUN   TestHScan/HSCAN_with_MATCH_and_COUNT_arguments
=== RUN   TestHScan/HSCAN_with_invalid_MATCH_pattern
=== RUN   TestHScan/HSCAN_with_invalid_COUNT_value
--- PASS: TestHScan (0.01s)
    --- PASS: TestHScan/HSCAN_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHScan/HSCAN_with_wrong_key (0.00s)
    --- PASS: TestHScan/HSCAN_with_non_hash (0.00s)
    --- PASS: TestHScan/HSCAN_with_valid_key_and_cursor (0.00s)
    --- PASS: TestHScan/HSCAN_with_cursor_at_the_end (0.00s)
    --- PASS: TestHScan/HSCAN_with_cursor_at_the_beginning (0.00s)
    --- PASS: TestHScan/HSCAN_with_cursor_in_the_middle (0.00s)
    --- PASS: TestHScan/HSCAN_with_MATCH_argument (0.00s)
    --- PASS: TestHScan/HSCAN_with_COUNT_argument (0.00s)
    --- PASS: TestHScan/HSCAN_with_MATCH_and_COUNT_arguments (0.00s)
    --- PASS: TestHScan/HSCAN_with_invalid_MATCH_pattern (0.00s)
    --- PASS: TestHScan/HSCAN_with_invalid_COUNT_value (0.00s)
=== RUN   TestHSet
=== RUN   TestHSet/HSET_with_wrong_number_of_arguments
=== RUN   TestHSet/HSET_with_single_field
=== RUN   TestHSet/HSET_with_multiple_fields
=== RUN   TestHSet/HSET_on_existing_hash
=== RUN   TestHSet/HSET_with_wrong_type
--- PASS: TestHSet (0.01s)
    --- PASS: TestHSet/HSET_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHSet/HSET_with_single_field (0.00s)
    --- PASS: TestHSet/HSET_with_multiple_fields (0.00s)
    --- PASS: TestHSet/HSET_on_existing_hash (0.00s)
    --- PASS: TestHSet/HSET_with_wrong_type (0.00s)
=== RUN   TestHSetNX
=== RUN   TestHSetNX/HSetNX_returns_0_when_field_is_already_set
=== RUN   TestHSetNX/HSetNX_with_new_field
=== RUN   TestHSetNX/HSetNX_with_wrong_number_of_arguments
=== RUN   TestHSetNX/HSetNX_with_wrong_type
--- PASS: TestHSetNX (0.00s)
    --- PASS: TestHSetNX/HSetNX_returns_0_when_field_is_already_set (0.00s)
    --- PASS: TestHSetNX/HSetNX_with_new_field (0.00s)
    --- PASS: TestHSetNX/HSetNX_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHSetNX/HSetNX_with_wrong_type (0.00s)
=== RUN   TestHStrLen
=== RUN   TestHStrLen/HSTRLEN_with_wrong_number_of_arguments
=== RUN   TestHStrLen/HSTRLEN_with_wrong_key
=== RUN   TestHStrLen/HSTRLEN_with_wrong_field
=== RUN   TestHStrLen/HSTRLEN
=== RUN   TestHStrLen/HSTRLEN_with_wrong_type
--- PASS: TestHStrLen (0.00s)
    --- PASS: TestHStrLen/HSTRLEN_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestHStrLen/HSTRLEN_with_wrong_key (0.00s)
    --- PASS: TestHStrLen/HSTRLEN_with_wrong_field (0.00s)
    --- PASS: TestHStrLen/HSTRLEN (0.00s)
    --- PASS: TestHStrLen/HSTRLEN_with_wrong_type (0.00s)
=== RUN   TestHVals
=== RUN   TestHVals/HTTP_One_or_more_keys_exist
=== RUN   TestHVals/HTTP_No_keys_exist
--- PASS: TestHVals (0.00s)
    --- PASS: TestHVals/HTTP_One_or_more_keys_exist (0.00s)
    --- PASS: TestHVals/HTTP_No_keys_exist (0.00s)
=== RUN   TestHyperLogLogCommands
=== RUN   TestHyperLogLogCommands/PFADD_with_one_key-value_pair
=== RUN   TestHyperLogLogCommands/PFADD_with_multiple_key-value_pair
=== RUN   TestHyperLogLogCommands/PFADD_with_duplicate_key-value_pairs
=== RUN   TestHyperLogLogCommands/PFADD_with_multiple_keys
=== RUN   TestHyperLogLogCommands/PFADD_with_non-existing_key
=== RUN   TestHyperLogLogCommands/PFMERGE_with_srcKey_non-existing
=== RUN   TestHyperLogLogCommands/PFMERGE_with_destKey_non-existing
=== RUN   TestHyperLogLogCommands/PFMERGE_with_destKey_existing
=== RUN   TestHyperLogLogCommands/PFMERGE_with_only_one_destKey_existing
=== RUN   TestHyperLogLogCommands/PFMERGE_with_invalid_object
=== RUN   TestHyperLogLogCommands/PFMERGE_with_invalid_src_object
--- PASS: TestHyperLogLogCommands (0.02s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_one_key-value_pair (0.00s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_multiple_key-value_pair (0.00s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_duplicate_key-value_pairs (0.00s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_multiple_keys (0.00s)
    --- PASS: TestHyperLogLogCommands/PFADD_with_non-existing_key (0.01s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_srcKey_non-existing (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_destKey_non-existing (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_destKey_existing (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_only_one_destKey_existing (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_invalid_object (0.00s)
    --- PASS: TestHyperLogLogCommands/PFMERGE_with_invalid_src_object (0.00s)
=== RUN   TestINCRBYFLOAT
=== RUN   TestINCRBYFLOAT/Invalid_number_of_arguments
=== RUN   TestINCRBYFLOAT/Increment_a_non_existing_key
=== RUN   TestINCRBYFLOAT/Increment_a_key_with_an_integer_value
=== RUN   TestINCRBYFLOAT/Increment_and_then_decrement_a_key_with_the_same_value
=== RUN   TestINCRBYFLOAT/Increment_a_non_numeric_value
=== RUN   TestINCRBYFLOAT/Increment_by_a_non_numeric_value
=== RUN   TestINCRBYFLOAT/Increment_by_both_integer_and_float
=== RUN   TestINCRBYFLOAT/Increment_that_would_make_the_value_Inf
=== RUN   TestINCRBYFLOAT/Increment_that_would_make_the_value_-Inf
--- PASS: TestINCRBYFLOAT (0.01s)
    --- PASS: TestINCRBYFLOAT/Invalid_number_of_arguments (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_a_non_existing_key (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_a_key_with_an_integer_value (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_and_then_decrement_a_key_with_the_same_value (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_a_non_numeric_value (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_by_a_non_numeric_value (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_by_both_integer_and_float (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_that_would_make_the_value_Inf (0.00s)
    --- PASS: TestINCRBYFLOAT/Increment_that_would_make_the_value_-Inf (0.00s)
=== RUN   TestINCR
=== RUN   TestINCR/Increment_multiple_keys
=== RUN   TestINCR/Increment_to_and_from_max_int64
=== RUN   TestINCR/Increment_from_min_int64
=== RUN   TestINCR/Increment_non-integer_values
=== RUN   TestINCR/Increment_non-existent_key
=== RUN   TestINCR/Increment_string_representing_integers
=== RUN   TestINCR/Increment_with_expiry
--- PASS: TestINCR (1.01s)
    --- PASS: TestINCR/Increment_multiple_keys (0.00s)
    --- PASS: TestINCR/Increment_to_and_from_max_int64 (0.00s)
    --- PASS: TestINCR/Increment_from_min_int64 (0.00s)
    --- PASS: TestINCR/Increment_non-integer_values (0.00s)
    --- PASS: TestINCR/Increment_non-existent_key (0.00s)
    --- PASS: TestINCR/Increment_string_representing_integers (0.00s)
    --- PASS: TestINCR/Increment_with_expiry (1.00s)
=== RUN   TestINCRBY
=== RUN   TestINCRBY/INCRBY_with_positive_increment
=== RUN   TestINCRBY/INCRBY_with_negative_increment
=== RUN   TestINCRBY/INCRBY_with_unset_key
=== RUN   TestINCRBY/edge_case_with_maximum_int_value
=== RUN   TestINCRBY/edge_case_with_minimum_int_value
=== RUN   TestINCRBY/edge_case_with_string_values
--- PASS: TestINCRBY (0.01s)
    --- PASS: TestINCRBY/INCRBY_with_positive_increment (0.00s)
    --- PASS: TestINCRBY/INCRBY_with_negative_increment (0.00s)
    --- PASS: TestINCRBY/INCRBY_with_unset_key (0.00s)
    --- PASS: TestINCRBY/edge_case_with_maximum_int_value (0.00s)
    --- PASS: TestINCRBY/edge_case_with_minimum_int_value (0.00s)
    --- PASS: TestINCRBY/edge_case_with_string_values (0.00s)
=== RUN   TestJSONARRPOP
=== RUN   TestJSONARRPOP/update_array_at_root_path
=== RUN   TestJSONARRPOP/update_nested_array
=== RUN   TestJSONARRPOP/update_array_with_default_index
=== RUN   TestJSONARRPOP/update_array_within_array
=== RUN   TestJSONARRPOP/non-array_path
=== RUN   TestJSONARRPOP/invalid_json_path
=== RUN   TestJSONARRPOP/key_doesn't_exist_error
=== RUN   TestJSONARRPOP/arr_pop_on_wrong_key_type
=== RUN   TestJSONARRPOP/nil_response_for_arr_pop
--- PASS: TestJSONARRPOP (0.01s)
    --- PASS: TestJSONARRPOP/update_array_at_root_path (0.00s)
    --- PASS: TestJSONARRPOP/update_nested_array (0.00s)
    --- PASS: TestJSONARRPOP/update_array_with_default_index (0.00s)
    --- PASS: TestJSONARRPOP/update_array_within_array (0.00s)
    --- PASS: TestJSONARRPOP/non-array_path (0.00s)
    --- PASS: TestJSONARRPOP/invalid_json_path (0.00s)
    --- PASS: TestJSONARRPOP/key_doesn't_exist_error (0.00s)
    --- PASS: TestJSONARRPOP/arr_pop_on_wrong_key_type (0.00s)
    --- PASS: TestJSONARRPOP/nil_response_for_arr_pop (0.00s)
=== RUN   TestJSONOperations
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Integer
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Boolean_True
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Boolean_False
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Simple_JSON
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Nested_JSON
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_JSON_Array
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_JSON_with_Special_Characters
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_Non-JSON_Value
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_Empty_JSON_Object
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_Empty_JSON_Array
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_JSON_with_Unicode
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_JSON_with_Escaped_Characters
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Complex_JSON
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Get_Nested_Array
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Get_Nested_Object
=== RUN   TestJSONOperations/Single_Ordered_Test_Cases/Set_Nested_Value
=== RUN   TestJSONOperations/Multiple_Ordered_Test_Cases
=== RUN   TestJSONOperations/Multiple_Ordered_Test_Cases/Get_All_Prices
=== RUN   TestJSONOperations/Multiple_Ordered_Test_Cases/Set_Multiple_Nested_Values
--- PASS: TestJSONOperations (0.02s)
    --- PASS: TestJSONOperations/Single_Ordered_Test_Cases (0.02s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Integer (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Boolean_True (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Boolean_False (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Simple_JSON (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Nested_JSON (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_JSON_Array (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_JSON_with_Special_Characters (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_Non-JSON_Value (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_Empty_JSON_Object (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_Empty_JSON_Array (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_JSON_with_Unicode (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_JSON_with_Escaped_Characters (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_and_Get_Complex_JSON (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Get_Nested_Array (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Get_Nested_Object (0.00s)
        --- PASS: TestJSONOperations/Single_Ordered_Test_Cases/Set_Nested_Value (0.00s)
    --- PASS: TestJSONOperations/Multiple_Ordered_Test_Cases (0.00s)
        --- PASS: TestJSONOperations/Multiple_Ordered_Test_Cases/Get_All_Prices (0.00s)
        --- PASS: TestJSONOperations/Multiple_Ordered_Test_Cases/Set_Multiple_Nested_Values (0.00s)
=== RUN   TestJSONSetWithInvalidCases
=== RUN   TestJSONSetWithInvalidCases/Set_Invalid_JSON
=== RUN   TestJSONSetWithInvalidCases/Set_JSON_with_Wrong_Number_of_Arguments
--- PASS: TestJSONSetWithInvalidCases (0.00s)
    --- PASS: TestJSONSetWithInvalidCases/Set_Invalid_JSON (0.00s)
    --- PASS: TestJSONSetWithInvalidCases/Set_JSON_with_Wrong_Number_of_Arguments (0.00s)
=== RUN   TestJSONSetWithNXAndXX
=== RUN   TestJSONSetWithNXAndXX/Set_with_XX_on_non-existent_key
=== RUN   TestJSONSetWithNXAndXX/Set_with_NX_on_existing_key
=== RUN   TestJSONSetWithNXAndXX/Set_with_XX_on_existing_key
=== RUN   TestJSONSetWithNXAndXX/Set_with_NX_on_non-existent_key
=== RUN   TestJSONSetWithNXAndXX/Invalid_combinations_of_NX_and_XX
--- PASS: TestJSONSetWithNXAndXX (0.01s)
    --- PASS: TestJSONSetWithNXAndXX/Set_with_XX_on_non-existent_key (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Set_with_NX_on_existing_key (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Set_with_XX_on_existing_key (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Set_with_NX_on_non-existent_key (0.00s)
    --- PASS: TestJSONSetWithNXAndXX/Invalid_combinations_of_NX_and_XX (0.00s)
=== RUN   TestJSONClearOperations
=== RUN   TestJSONClearOperations/jsonclear_clear_root_path
=== RUN   TestJSONClearOperations/jsonclear_clear_string_type
=== RUN   TestJSONClearOperations/jsonclear_clear_array_type
=== RUN   TestJSONClearOperations/jsonclear_clear_bool_type
=== RUN   TestJSONClearOperations/jsonclear_clear_null_type
=== RUN   TestJSONClearOperations/jsonclear_clear_integer_type
=== RUN   TestJSONClearOperations/jsonclear_clear_float_type
--- PASS: TestJSONClearOperations (0.01s)
    --- PASS: TestJSONClearOperations/jsonclear_clear_root_path (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_clear_string_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_clear_array_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_clear_bool_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_clear_null_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_clear_integer_type (0.00s)
    --- PASS: TestJSONClearOperations/jsonclear_clear_float_type (0.00s)
=== RUN   TestJSONDelOperations
=== RUN   TestJSONDelOperations/Delete_root_path
=== RUN   TestJSONDelOperations/Delete_nested_field
=== RUN   TestJSONDelOperations/del_string_type
=== RUN   TestJSONDelOperations/del_bool_type
=== RUN   TestJSONDelOperations/del_null_type
=== RUN   TestJSONDelOperations/del_array_type
=== RUN   TestJSONDelOperations/del_integer_type
=== RUN   TestJSONDelOperations/del_float_type
--- PASS: TestJSONDelOperations (0.01s)
    --- PASS: TestJSONDelOperations/Delete_root_path (0.00s)
    --- PASS: TestJSONDelOperations/Delete_nested_field (0.00s)
    --- PASS: TestJSONDelOperations/del_string_type (0.00s)
    --- PASS: TestJSONDelOperations/del_bool_type (0.00s)
    --- PASS: TestJSONDelOperations/del_null_type (0.00s)
    --- PASS: TestJSONDelOperations/del_array_type (0.00s)
    --- PASS: TestJSONDelOperations/del_integer_type (0.00s)
    --- PASS: TestJSONDelOperations/del_float_type (0.00s)
=== RUN   TestJSONForgetOperations
=== RUN   TestJSONForgetOperations/forget_root_path
=== RUN   TestJSONForgetOperations/forget_nested_field
=== RUN   TestJSONForgetOperations/forget_string_type
=== RUN   TestJSONForgetOperations/forget_bool_type
=== RUN   TestJSONForgetOperations/forget_null_type
=== RUN   TestJSONForgetOperations/forget_array_type
=== RUN   TestJSONForgetOperations/forget_integer_type
=== RUN   TestJSONForgetOperations/forget_float_type
--- PASS: TestJSONForgetOperations (0.01s)
    --- PASS: TestJSONForgetOperations/forget_root_path (0.00s)
    --- PASS: TestJSONForgetOperations/forget_nested_field (0.00s)
    --- PASS: TestJSONForgetOperations/forget_string_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_bool_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_null_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_array_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_integer_type (0.00s)
    --- PASS: TestJSONForgetOperations/forget_float_type (0.00s)
=== RUN   TestJsonStrlen
=== RUN   TestJsonStrlen/jsonstrlen_with_root_path
=== RUN   TestJsonStrlen/jsonstrlen_nested
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_root
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_boolean
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_array
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_integer
=== RUN   TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_number
--- PASS: TestJsonStrlen (0.01s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_root_path (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_nested (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_root (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_boolean (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_array (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_integer (0.00s)
    --- PASS: TestJsonStrlen/jsonstrlen_with_no_path_and_object_at_number (0.00s)
=== RUN   TestJSONMGET
=== RUN   TestJSONMGET/MGET_with_root_path
=== RUN   TestJSONMGET/MGET_with_specific_path
=== RUN   TestJSONMGET/MGET_with_nested_path
=== RUN   TestJSONMGET/MGET_error
=== RUN   TestJSONMGET/MGET_with_recursive_path
--- PASS: TestJSONMGET (0.01s)
    --- PASS: TestJSONMGET/MGET_with_root_path (0.00s)
    --- PASS: TestJSONMGET/MGET_with_specific_path (0.00s)
    --- PASS: TestJSONMGET/MGET_with_nested_path (0.00s)
    --- PASS: TestJSONMGET/MGET_error (0.00s)
    --- PASS: TestJSONMGET/MGET_with_recursive_path (0.00s)
=== RUN   TestJsonARRAPPEND
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_with_root_path
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_nested
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_nested_with_nil
=== RUN   TestJsonARRAPPEND/JSON.ARRAPPEND_with_different_datatypes
--- PASS: TestJsonARRAPPEND (0.01s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_with_root_path (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_nested (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_nested_with_nil (0.00s)
    --- PASS: TestJsonARRAPPEND/JSON.ARRAPPEND_with_different_datatypes (0.00s)
=== RUN   TestJsonNummultby
=== RUN   TestJsonNummultby/Invalid_number_of_arguments
=== RUN   TestJsonNummultby/MultBy_at_non-existent_key
=== RUN   TestJsonNummultby/Invalid_value_of_multiplier_on_non-existent_key
=== RUN   TestJsonNummultby/Invalid_value_of_multiplier_on_existent_key
=== RUN   TestJsonNummultby/MultBy_at_recursive_path
=== RUN   TestJsonNummultby/MultBy_at_root_path
--- PASS: TestJsonNummultby (0.01s)
    --- PASS: TestJsonNummultby/Invalid_number_of_arguments (0.00s)
    --- PASS: TestJsonNummultby/MultBy_at_non-existent_key (0.00s)
    --- PASS: TestJsonNummultby/Invalid_value_of_multiplier_on_non-existent_key (0.00s)
    --- PASS: TestJsonNummultby/Invalid_value_of_multiplier_on_existent_key (0.00s)
    --- PASS: TestJsonNummultby/MultBy_at_recursive_path (0.00s)
    --- PASS: TestJsonNummultby/MultBy_at_root_path (0.00s)
=== RUN   TestJsonObjLen
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_root_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_nested_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_non-object_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_nested_non-object_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_nested_objects
=== RUN   TestJsonObjLen/JSON.OBJLEN_invalid_json_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_non-existent_key
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_empty_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_invalid_json_path#01
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_root
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path_v2
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path_v2
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_with_nonJSON_object
=== RUN   TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_recursive_object
--- PASS: TestJsonObjLen (0.01s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_root_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_nested_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_non-object_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_nested_non-object_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_nested_objects (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_invalid_json_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_non-existent_key (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_empty_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_invalid_json_path#01 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_root (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existing_path_v2 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_non-existent_path_v2 (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_with_nonJSON_object (0.00s)
    --- PASS: TestJsonObjLen/JSON.OBJLEN_with_legacy_path_-_inner_existent_path_recursive_object (0.00s)
=== RUN   TestJSONNumIncrBy
=== RUN   TestJSONNumIncrBy/Invalid_number_of_arguments
=== RUN   TestJSONNumIncrBy/Non-existent_key
=== RUN   TestJSONNumIncrBy/Invalid_value_of_increment
=== RUN   TestJSONNumIncrBy/incrby_at_non_root_path
=== RUN   TestJSONNumIncrBy/incrby_at_root_path
--- PASS: TestJSONNumIncrBy (0.01s)
    --- PASS: TestJSONNumIncrBy/Invalid_number_of_arguments (0.00s)
    --- PASS: TestJSONNumIncrBy/Non-existent_key (0.00s)
    --- PASS: TestJSONNumIncrBy/Invalid_value_of_increment (0.00s)
    --- PASS: TestJSONNumIncrBy/incrby_at_non_root_path (0.00s)
    --- PASS: TestJSONNumIncrBy/incrby_at_root_path (0.00s)
=== RUN   TestJsonARRINSERT
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_index_out_of_bounds
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_index_is_not_integer
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_with_positive_index_in_root_path
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_with_negative_index_in_root_path
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_nested_with_positive_index
=== RUN   TestJsonARRINSERT/JSON.ARRINSERT_nested_with_negative_index
--- PASS: TestJsonARRINSERT (0.01s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_index_out_of_bounds (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_index_is_not_integer (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_with_positive_index_in_root_path (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_with_negative_index_in_root_path (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_nested_with_positive_index (0.00s)
    --- PASS: TestJsonARRINSERT/JSON.ARRINSERT_nested_with_negative_index (0.00s)
=== RUN   TestJsonObjKeys
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_root_object
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_nested_path
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_non-object_path
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_nested_non-object_path
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_invalid_json_path_-_1
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_invalid_json_path_-_2
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_invalid_json_path_-_3
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_only_key
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_non-existing_key
=== RUN   TestJsonObjKeys/JSON.OBJKEYS_with_multiple_json_path
--- PASS: TestJsonObjKeys (0.01s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_root_object (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_nested_path (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_non-object_path (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_nested_non-object_path (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_invalid_json_path_-_1 (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_invalid_json_path_-_2 (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_invalid_json_path_-_3 (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_only_key (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_non-existing_key (0.00s)
    --- PASS: TestJsonObjKeys/JSON.OBJKEYS_with_multiple_json_path (0.00s)
=== RUN   TestJsonARRTRIM
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_not_array
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_stop_index_out_of_bounds
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_start_&_stop_are_positive
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_start_&_stop_are_negative
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_subpath_trim
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_subpath_not_array
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_positive_start_larger_than_stop
=== RUN   TestJsonARRTRIM/JSON.ARRTRIM_negative_start_larger_than_stop
--- PASS: TestJsonARRTRIM (0.01s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_not_array (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_stop_index_out_of_bounds (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_start_&_stop_are_positive (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_start_&_stop_are_negative (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_subpath_trim (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_subpath_not_array (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_positive_start_larger_than_stop (0.00s)
    --- PASS: TestJsonARRTRIM/JSON.ARRTRIM_negative_start_larger_than_stop (0.00s)
=== RUN   TestKeys
=== RUN   TestKeys/k_matches_with_k
=== RUN   TestKeys/g*_matches_good_and_great
=== RUN   TestKeys/g?od_matches_good
=== RUN   TestKeys/g?eat_matches_great
=== RUN   TestKeys/h[^e]llo_matches_hallo_and_hbllo
=== RUN   TestKeys/h[a-b]llo_matches_hallo_and_hbllo
--- PASS: TestKeys (0.01s)
    --- PASS: TestKeys/k_matches_with_k (0.00s)
    --- PASS: TestKeys/g*_matches_good_and_great (0.00s)
    --- PASS: TestKeys/g?od_matches_good (0.00s)
    --- PASS: TestKeys/g?eat_matches_great (0.00s)
    --- PASS: TestKeys/h[^e]llo_matches_hallo_and_hbllo (0.00s)
    --- PASS: TestKeys/h[a-b]llo_matches_hallo_and_hbllo (0.00s)
=== RUN   TestMGET
=== RUN   TestMGET/MGET_With_non-existing_keys
=== RUN   TestMGET/MGET_With_existing_keys
=== RUN   TestMGET/MGET_with_existing_and_non_existing_keys
--- PASS: TestMGET (0.00s)
    --- PASS: TestMGET/MGET_With_non-existing_keys (0.00s)
    --- PASS: TestMGET/MGET_With_existing_keys (0.00s)
    --- PASS: TestMGET/MGET_with_existing_and_non_existing_keys (0.00s)
=== RUN   TestMSET
=== RUN   TestMSET/MSET_with_one_key-value_pair
=== RUN   TestMSET/MSET_with_multiple_key-value_pairs
=== RUN   TestMSET/MSET_with_integers_arguments
--- PASS: TestMSET (0.00s)
    --- PASS: TestMSET/MSET_with_one_key-value_pair (0.00s)
    --- PASS: TestMSET/MSET_with_multiple_key-value_pairs (0.00s)
    --- PASS: TestMSET/MSET_with_integers_arguments (0.00s)
=== RUN   TestOBJECT
=== RUN   TestOBJECT/Object_Idletime
--- PASS: TestOBJECT (5.01s)
    --- PASS: TestOBJECT/Object_Idletime (5.01s)
=== RUN   TestQWatch
=== RUN   TestQWatch/Q.WATCH_Register_Bad_Request
2024/11/06 02:54:36 ERROR Error parsing HTTP request error="empty JSON object"
=== RUN   TestQWatch/Q.WATCH_Register
2024/11/06 02:54:36 INFO Registered client for watching query clientID=3684944249 query="SELECT $key, $value WHERE $key LIKE \"match:100:*\" AND $value > 10 ORDER BY $value DESC LIMIT 3"
2024/11/06 02:54:36 INFO Client disconnected
--- PASS: TestQWatch (0.01s)
    --- PASS: TestQWatch/Q.WATCH_Register_Bad_Request (0.00s)
    --- PASS: TestQWatch/Q.WATCH_Register (0.00s)
=== RUN   TestQwatchWithSSE
2024/11/06 02:54:36 http: superfluous response.WriteHeader call from github.com/dicedb/dice/internal/server.writeJSONResponse (httpServer.go:381)
2024/11/06 02:54:36 INFO Registered client for watching query clientID=270212503 query="SELECT $key, $value WHERE $key like 'match:100:*' and $value > 10 ORDER BY $value desc LIMIT 3"
--- PASS: TestQwatchWithSSE (2.00s)
2024/11/06 02:54:38 INFO Client disconnected
=== RUN   TestSELECT
=== RUN   TestSELECT/SELECT_command_response
2024/11/06 02:54:38 http: superfluous response.WriteHeader call from github.com/dicedb/dice/internal/server.writeJSONResponse (httpServer.go:381)
=== RUN   TestSELECT/SELECT_command_error_response
--- PASS: TestSELECT (0.00s)
    --- PASS: TestSELECT/SELECT_command_response (0.00s)
    --- PASS: TestSELECT/SELECT_command_error_response (0.00s)
=== RUN   TestSetDataCmd
=== RUN   TestSetDataCmd/SADD_simple_value
=== RUN   TestSetDataCmd/SADD_multiple_values
=== RUN   TestSetDataCmd/SADD_duplicate_values
=== RUN   TestSetDataCmd/SADD_wrong_key_value_type
=== RUN   TestSetDataCmd/SADD_multiple_add_and_multiple_kind_of_values
=== RUN   TestSetDataCmd/SADD_&_SCARD
=== RUN   TestSetDataCmd/SADD_&_SCARD_with_non-existing_key
=== RUN   TestSetDataCmd/SADD_&_SCARD_with_wrong_key_type
=== RUN   TestSetDataCmd/SADD_&_SMEMBERS
=== RUN   TestSetDataCmd/SADD_&_SMEMBERS_with_non-existing_key
=== RUN   TestSetDataCmd/SADD_&_SMEMBERS_with_wrong_key_type
=== RUN   TestSetDataCmd/SADD_&_SREM
=== RUN   TestSetDataCmd/SADD_&_SREM_with_non-existing_key
=== RUN   TestSetDataCmd/SADD_&_SREM_with_wrong_key_type
=== RUN   TestSetDataCmd/SADD_&_SREM_with_non-existing_value
=== RUN   TestSetDataCmd/SADD_&_SDIFF
=== RUN   TestSetDataCmd/SADD_&_SDIFF_with_non-existing_subsequent_key
=== RUN   TestSetDataCmd/SADD_&_SDIFF_with_wrong_key_type
=== RUN   TestSetDataCmd/SADD_&_SDIFF_with_subsequent_key_of_wrong_type
=== RUN   TestSetDataCmd/SADD_&_SDIFF_with_non-existing_first_key
=== RUN   TestSetDataCmd/SADD_&_SDIFF_with_one_key
=== RUN   TestSetDataCmd/SADD_&_SINTER
=== RUN   TestSetDataCmd/SADD_&_SINTER_with_non-existing_subsequent_key
=== RUN   TestSetDataCmd/SADD_&_SINTER_with_wrong_key_type
=== RUN   TestSetDataCmd/SADD_&_SINTER_with_subsequent_key_of_wrong_type
=== RUN   TestSetDataCmd/SADD_&_SINTER_with_single_key
--- PASS: TestSetDataCmd (0.05s)
    --- PASS: TestSetDataCmd/SADD_simple_value (0.00s)
    --- PASS: TestSetDataCmd/SADD_multiple_values (0.00s)
    --- PASS: TestSetDataCmd/SADD_duplicate_values (0.00s)
    --- PASS: TestSetDataCmd/SADD_wrong_key_value_type (0.00s)
    --- PASS: TestSetDataCmd/SADD_multiple_add_and_multiple_kind_of_values (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SCARD (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SCARD_with_non-existing_key (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SCARD_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SMEMBERS (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SMEMBERS_with_non-existing_key (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SMEMBERS_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SREM (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SREM_with_non-existing_key (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SREM_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SREM_with_non-existing_value (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SDIFF (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SDIFF_with_non-existing_subsequent_key (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SDIFF_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SDIFF_with_subsequent_key_of_wrong_type (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SDIFF_with_non-existing_first_key (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SDIFF_with_one_key (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SINTER (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SINTER_with_non-existing_subsequent_key (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SINTER_with_wrong_key_type (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SINTER_with_subsequent_key_of_wrong_type (0.00s)
    --- PASS: TestSetDataCmd/SADD_&_SINTER_with_single_key (0.00s)
=== RUN   TestSet
=== RUN   TestSet/Set_and_Get_Simple_Value
=== RUN   TestSet/Set_and_Get_Integer_Value
=== RUN   TestSet/Overwrite_Existing_Key
--- PASS: TestSet (0.00s)
    --- PASS: TestSet/Set_and_Get_Simple_Value (0.00s)
    --- PASS: TestSet/Set_and_Get_Integer_Value (0.00s)
    --- PASS: TestSet/Overwrite_Existing_Key (0.00s)
=== RUN   TestSetWithOptions
=== RUN   TestSetWithOptions/Set_with_EX_option
=== RUN   TestSetWithOptions/Set_with_PX_option
=== RUN   TestSetWithOptions/Set_with_EX_and_PX_option
=== RUN   TestSetWithOptions/XX_on_non-existing_key
=== RUN   TestSetWithOptions/NX_on_non-existing_key
=== RUN   TestSetWithOptions/NX_on_existing_key
=== RUN   TestSetWithOptions/PXAT_option
=== RUN   TestSetWithOptions/PXAT_option_with_delete
=== RUN   TestSetWithOptions/PXAT_option_with_invalid_unix_time_ms
=== RUN   TestSetWithOptions/XX_on_existing_key
=== RUN   TestSetWithOptions/Multiple_XX_operations
=== RUN   TestSetWithOptions/EX_option
=== RUN   TestSetWithOptions/XX_option
--- PASS: TestSetWithOptions (14.07s)
    --- PASS: TestSetWithOptions/Set_with_EX_option (3.00s)
    --- PASS: TestSetWithOptions/Set_with_PX_option (3.01s)
    --- PASS: TestSetWithOptions/Set_with_EX_and_PX_option (0.00s)
    --- PASS: TestSetWithOptions/XX_on_non-existing_key (0.01s)
    --- PASS: TestSetWithOptions/NX_on_non-existing_key (0.00s)
    --- PASS: TestSetWithOptions/NX_on_existing_key (0.00s)
    --- PASS: TestSetWithOptions/PXAT_option (0.00s)
    --- PASS: TestSetWithOptions/PXAT_option_with_delete (4.01s)
    --- PASS: TestSetWithOptions/PXAT_option_with_invalid_unix_time_ms (0.00s)
    --- PASS: TestSetWithOptions/XX_on_existing_key (0.00s)
    --- PASS: TestSetWithOptions/Multiple_XX_operations (0.00s)
    --- PASS: TestSetWithOptions/EX_option (2.01s)
    --- PASS: TestSetWithOptions/XX_option (2.01s)
=== RUN   TestWithKeepTTLFlag
=== RUN   TestWithKeepTTLFlag/SET_WITH_KEEP_TTL
=== RUN   TestWithKeepTTLFlag/SET_WITH_KEEP_TTL_on_non-existing_key
=== RUN   TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_PX
=== RUN   TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_EX
=== RUN   TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_NX
=== RUN   TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_XX
=== RUN   TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_PXAT
=== RUN   TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_EXAT
--- PASS: TestWithKeepTTLFlag (0.02s)
    --- PASS: TestWithKeepTTLFlag/SET_WITH_KEEP_TTL (0.00s)
    --- PASS: TestWithKeepTTLFlag/SET_WITH_KEEP_TTL_on_non-existing_key (0.00s)
    --- PASS: TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_PX (0.00s)
    --- PASS: TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_EX (0.00s)
    --- PASS: TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_NX (0.00s)
    --- PASS: TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_XX (0.00s)
    --- PASS: TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_PXAT (0.00s)
    --- PASS: TestWithKeepTTLFlag/SET_WITH_KEEPTTL_with_EXAT (0.00s)
=== RUN   TestSetWithExat
=== RUN   TestSetWithExat/SET_with_EXAT
=== RUN   TestSetWithExat/SET_with_invalid_EXAT_expires_key_immediately
--- PASS: TestSetWithExat (0.00s)
    --- PASS: TestSetWithExat/SET_with_EXAT (0.00s)
    --- PASS: TestSetWithExat/SET_with_invalid_EXAT_expires_key_immediately (0.00s)
=== RUN   TestJSONTOGGLE
=== RUN   TestJSONTOGGLE/JSON.TOGGLE_with_existing_key
=== RUN   TestJSONTOGGLE/JSON.TOGGLE_with_non-existing_key
=== RUN   TestJSONTOGGLE/JSON.TOGGLE_with_invalid_path
=== RUN   TestJSONTOGGLE/JSON.TOGGLE_with_invalid_command_format
=== RUN   TestJSONTOGGLE/deeply_nested_JSON_structure_with_multiple_matching_fields
--- PASS: TestJSONTOGGLE (0.01s)
    --- PASS: TestJSONTOGGLE/JSON.TOGGLE_with_existing_key (0.00s)
    --- PASS: TestJSONTOGGLE/JSON.TOGGLE_with_non-existing_key (0.00s)
    --- PASS: TestJSONTOGGLE/JSON.TOGGLE_with_invalid_path (0.00s)
    --- PASS: TestJSONTOGGLE/JSON.TOGGLE_with_invalid_command_format (0.00s)
    --- PASS: TestJSONTOGGLE/deeply_nested_JSON_structure_with_multiple_matching_fields (0.00s)
=== RUN   TestTouch
=== RUN   TestTouch/Touch_Simple_Value
=== RUN   TestTouch/Touch_Multiple_Existing_Keys
=== RUN   TestTouch/Touch_Multiple_Existing_and_Non-Existing_Keys
--- PASS: TestTouch (2.01s)
    --- PASS: TestTouch/Touch_Simple_Value (2.01s)
    --- PASS: TestTouch/Touch_Multiple_Existing_Keys (0.00s)
    --- PASS: TestTouch/Touch_Multiple_Existing_and_Non-Existing_Keys (0.00s)
=== RUN   TestTTLPTTL
=== RUN   TestTTLPTTL/TTL_Simple_Value
=== RUN   TestTTLPTTL/PTTL_Simple_Value
=== RUN   TestTTLPTTL/TTL_&_PTTL_Non-Existent_Key
=== RUN   TestTTLPTTL/TTL_&_PTTL_without_Expiry
=== RUN   TestTTLPTTL/TTL_&_PTTL_with_Persist
=== RUN   TestTTLPTTL/TTL_&_PTTL_with_Expire_and_Expired_Key
--- PASS: TestTTLPTTL (5.02s)
    --- PASS: TestTTLPTTL/TTL_Simple_Value (0.00s)
    --- PASS: TestTTLPTTL/PTTL_Simple_Value (0.00s)
    --- PASS: TestTTLPTTL/TTL_&_PTTL_Non-Existent_Key (0.00s)
    --- PASS: TestTTLPTTL/TTL_&_PTTL_without_Expiry (0.00s)
    --- PASS: TestTTLPTTL/TTL_&_PTTL_with_Persist (0.00s)
    --- PASS: TestTTLPTTL/TTL_&_PTTL_with_Expire_and_Expired_Key (5.01s)
=== RUN   TestType
=== RUN   TestType/TYPE_with_invalid_number_of_arguments
=== RUN   TestType/TYPE_for_non-existent_key
=== RUN   TestType/TYPE_for_key_with_String_value
=== RUN   TestType/TYPE_for_key_with_List_value
=== RUN   TestType/TYPE_for_key_with_Set_value
=== RUN   TestType/TYPE_for_key_with_Hash_value
=== RUN   TestType/TYPE_for_key_with_value_created_from_SETBIT_command
=== RUN   TestType/TYPE_for_key_with_value_created_from_BITOP_command
--- PASS: TestType (0.03s)
    --- PASS: TestType/TYPE_with_invalid_number_of_arguments (0.00s)
    --- PASS: TestType/TYPE_for_non-existent_key (0.00s)
    --- PASS: TestType/TYPE_for_key_with_String_value (0.00s)
    --- PASS: TestType/TYPE_for_key_with_List_value (0.00s)
    --- PASS: TestType/TYPE_for_key_with_Set_value (0.00s)
    --- PASS: TestType/TYPE_for_key_with_Hash_value (0.00s)
    --- PASS: TestType/TYPE_for_key_with_value_created_from_SETBIT_command (0.00s)
    --- PASS: TestType/TYPE_for_key_with_value_created_from_BITOP_command (0.00s)
=== RUN   TestZCARD
=== RUN   TestZCARD/ZCARD_with_wrong_number_of_arguments
=== RUN   TestZCARD/ZCARD_with_wrong_type_of_key
=== RUN   TestZCARD/ZCARD_with_non-existent_key
=== RUN   TestZCARD/ZCARD_with_sorted_set_holding_single_element
=== RUN   TestZCARD/ZCARD_with_sorted_set_holding_multiple_elements
--- PASS: TestZCARD (0.01s)
    --- PASS: TestZCARD/ZCARD_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestZCARD/ZCARD_with_wrong_type_of_key (0.00s)
    --- PASS: TestZCARD/ZCARD_with_non-existent_key (0.00s)
    --- PASS: TestZCARD/ZCARD_with_sorted_set_holding_single_element (0.00s)
    --- PASS: TestZCARD/ZCARD_with_sorted_set_holding_multiple_elements (0.00s)
=== RUN   TestZPOPMAX
=== RUN   TestZPOPMAX/ZPOPMAX_on_non-existing_key_with/without_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_with_wrong_type_of_key_with/without_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_on_existing_key_(without_count_argument)
=== RUN   TestZPOPMAX/ZPOPMAX_with_normal_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_with_count_argument_but_multiple_members_have_the_same_score
=== RUN   TestZPOPMAX/ZPOPMAX_with_negative_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_with_invalid_count_argument
=== RUN   TestZPOPMAX/ZPOPMAX_with_count_argument_greater_than_length_of_sorted_set
=== RUN   TestZPOPMAX/ZPOPMAX_with_floating-point_scores
--- PASS: TestZPOPMAX (0.01s)
    --- PASS: TestZPOPMAX/ZPOPMAX_on_non-existing_key_with/without_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_wrong_type_of_key_with/without_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_on_existing_key_(without_count_argument) (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_normal_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_count_argument_but_multiple_members_have_the_same_score (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_negative_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_invalid_count_argument (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_count_argument_greater_than_length_of_sorted_set (0.00s)
    --- PASS: TestZPOPMAX/ZPOPMAX_with_floating-point_scores (0.00s)
=== RUN   TestZRANK
=== RUN   TestZRANK/ZRANK_of_existing_member
=== RUN   TestZRANK/ZRANK_of_non-existing_member
=== RUN   TestZRANK/ZRANK_with_WITHSCORE_option_for_existing_member
=== RUN   TestZRANK/ZRANK_with_WITHSCORE_option_for_non-existing_member
=== RUN   TestZRANK/ZRANK_on_non-existing_key
=== RUN   TestZRANK/ZRANK_with_wrong_number_of_arguments
=== RUN   TestZRANK/ZRANK_with_invalid_option
--- PASS: TestZRANK (0.01s)
    --- PASS: TestZRANK/ZRANK_of_existing_member (0.00s)
    --- PASS: TestZRANK/ZRANK_of_non-existing_member (0.00s)
    --- PASS: TestZRANK/ZRANK_with_WITHSCORE_option_for_existing_member (0.00s)
    --- PASS: TestZRANK/ZRANK_with_WITHSCORE_option_for_non-existing_member (0.00s)
    --- PASS: TestZRANK/ZRANK_on_non-existing_key (0.00s)
    --- PASS: TestZRANK/ZRANK_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestZRANK/ZRANK_with_invalid_option (0.00s)
=== RUN   TestZREM
=== RUN   TestZREM/ZREM_with_wrong_number_of_arguments
=== RUN   TestZREM/ZREM_with_wrong_type_of_key
=== RUN   TestZREM/ZREM_with_non-existent_key
=== RUN   TestZREM/ZREM_with_non-existent_element
=== RUN   TestZREM/ZREM_with_sorted_set_holding_single_element
=== RUN   TestZREM/ZREM_with_sorted_set_holding_multiple_elements
--- PASS: TestZREM (0.01s)
    --- PASS: TestZREM/ZREM_with_wrong_number_of_arguments (0.00s)
    --- PASS: TestZREM/ZREM_with_wrong_type_of_key (0.00s)
    --- PASS: TestZREM/ZREM_with_non-existent_key (0.00s)
    --- PASS: TestZREM/ZREM_with_non-existent_element (0.00s)
    --- PASS: TestZREM/ZREM_with_sorted_set_holding_single_element (0.00s)
    --- PASS: TestZREM/ZREM_with_sorted_set_holding_multiple_elements (0.00s)
=== RUN   TestZPOPMIN
=== RUN   TestZPOPMIN/ZPOPMIN_on_non-existing_key_with/without_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_with_wrong_type_of_key_with/without_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_on_existing_key_(without_count_argument)
=== RUN   TestZPOPMIN/ZPOPMIN_with_normal_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_with_count_argument_but_multiple_members_have_the_same_score
=== RUN   TestZPOPMIN/ZPOPMIN_with_negative_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_with_invalid_count_argument
=== RUN   TestZPOPMIN/ZPOPMIN_with_count_argument_greater_than_length_of_sorted_set
=== RUN   TestZPOPMIN/ZPOPMIN_on_empty_sorted_set
=== RUN   TestZPOPMIN/ZPOPMIN_with_floating-point_scores
--- PASS: TestZPOPMIN (0.01s)
    --- PASS: TestZPOPMIN/ZPOPMIN_on_non-existing_key_with/without_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_wrong_type_of_key_with/without_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_on_existing_key_(without_count_argument) (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_normal_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_count_argument_but_multiple_members_have_the_same_score (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_negative_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_invalid_count_argument (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_count_argument_greater_than_length_of_sorted_set (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_on_empty_sorted_set (0.00s)
    --- PASS: TestZPOPMIN/ZPOPMIN_with_floating-point_scores (0.00s)
=== RUN   TestZCOUNT
=== RUN   TestZCOUNT/ZCOUNT_on_non-existent_key
    zset_test.go:186: Pre-test cleanup executed: Deleted key 'myzset'
=== RUN   TestZCOUNT/ZCOUNT_on_empty_sorted_set
    zset_test.go:186: Pre-test cleanup executed: Deleted key 'myzset'
=== RUN   TestZCOUNT/ZCOUNT_with_invalid_range
    zset_test.go:186: Pre-test cleanup executed: Deleted key 'myzset'
=== RUN   TestZCOUNT/ZCOUNT_with_valid_key_and_range
    zset_test.go:186: Pre-test cleanup executed: Deleted key 'myzset'
=== RUN   TestZCOUNT/ZCOUNT_with_min_and_max_values_outside_existing_members
    zset_test.go:186: Pre-test cleanup executed: Deleted key 'myzset'
=== RUN   TestZCOUNT/ZCOUNT_with_multiple_members_having_the_same_score
    zset_test.go:186: Pre-test cleanup executed: Deleted key 'myzset'
=== RUN   TestZCOUNT/ZCOUNT_with_count_argument_exceeding_the_number_of_members
    zset_test.go:186: Pre-test cleanup executed: Deleted key 'myzset'
--- PASS: TestZCOUNT (0.01s)
    --- PASS: TestZCOUNT/ZCOUNT_on_non-existent_key (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_on_empty_sorted_set (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_invalid_range (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_valid_key_and_range (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_min_and_max_values_outside_existing_members (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_multiple_members_having_the_same_score (0.00s)
    --- PASS: TestZCOUNT/ZCOUNT_with_count_argument_exceeding_the_number_of_members (0.00s)
PASS
ok  	github.com/dicedb/dice/integration_tests/commands/http	91.132s
All tests completed. Check logs/error.log for failures and errors.
