// Code generated from internal/sql/parser/dsql.g4 by ANTLR 4.13.2. DO NOT EDIT.

package parser

import (
	"fmt"
	"github.com/antlr4-go/antlr/v4"
	"sync"
	"unicode"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = sync.Once{}
var _ = unicode.IsLetter

type dsqlLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var DsqlLexerLexerStaticData struct {
	once                   sync.Once
	serializedATN          []int32
	ChannelNames           []string
	ModeNames              []string
	LiteralNames           []string
	SymbolicNames          []string
	RuleNames              []string
	PredictionContextCache *antlr.PredictionContextCache
	atn                    *antlr.ATN
	decisionToDFA          []*antlr.DFA
}

func dsqllexerLexerInit() {
	staticData := &DsqlLexerLexerStaticData
	staticData.ChannelNames = []string{
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	}
	staticData.ModeNames = []string{
		"DEFAULT_MODE",
	}
	staticData.LiteralNames = []string{
		"", "'SELECT'", "'WHERE'", "'ORDER'", "'BY'", "'LIMIT'", "'ASC'", "'DESC'",
		"'AND'", "'OR'", "'LIKE'", "'IS'", "'NOT'", "'NULL'", "'_key'", "'_value'",
		"'='", "'=='", "'!='", "'>'", "'>='", "'<'", "'<='", "'('", "')'", "','",
		"'.'", "'''", "'*'",
	}
	staticData.SymbolicNames = []string{
		"", "SELECT", "WHERE", "ORDER", "BY", "LIMIT", "ASC", "DESC", "AND",
		"OR", "LIKE", "IS", "NOT", "NULL", "KEY", "VALUE", "ASSIGN", "EQ", "NEQ",
		"GT", "GTE", "LT", "LTE", "LPAREN", "RPAREN", "COMMA", "DOT", "QUOTE",
		"STAR", "NUMBER", "NUMERIC_LITERAL", "STRING_LITERAL", "BACKTICK_LITERAL",
		"IDENTIFIER", "SINGLE_LINE_COMMENT", "MULTILINE_COMMENT", "SPACES",
		"UNEXPECTED_CHAR",
	}
	staticData.RuleNames = []string{
		"SELECT", "WHERE", "ORDER", "BY", "LIMIT", "ASC", "DESC", "AND", "OR",
		"LIKE", "IS", "NOT", "NULL", "KEY", "VALUE", "ASSIGN", "EQ", "NEQ",
		"GT", "GTE", "LT", "LTE", "LPAREN", "RPAREN", "COMMA", "DOT", "QUOTE",
		"STAR", "NUMBER", "NUMERIC_LITERAL", "STRING_LITERAL", "BACKTICK_LITERAL",
		"IDENTIFIER", "SINGLE_LINE_COMMENT", "MULTILINE_COMMENT", "SPACES",
		"UNEXPECTED_CHAR", "HEX_DIGIT", "DIGIT",
	}
	staticData.PredictionContextCache = antlr.NewPredictionContextCache()
	staticData.serializedATN = []int32{
		4, 0, 37, 299, 6, -1, 2, 0, 7, 0, 2, 1, 7, 1, 2, 2, 7, 2, 2, 3, 7, 3, 2,
		4, 7, 4, 2, 5, 7, 5, 2, 6, 7, 6, 2, 7, 7, 7, 2, 8, 7, 8, 2, 9, 7, 9, 2,
		10, 7, 10, 2, 11, 7, 11, 2, 12, 7, 12, 2, 13, 7, 13, 2, 14, 7, 14, 2, 15,
		7, 15, 2, 16, 7, 16, 2, 17, 7, 17, 2, 18, 7, 18, 2, 19, 7, 19, 2, 20, 7,
		20, 2, 21, 7, 21, 2, 22, 7, 22, 2, 23, 7, 23, 2, 24, 7, 24, 2, 25, 7, 25,
		2, 26, 7, 26, 2, 27, 7, 27, 2, 28, 7, 28, 2, 29, 7, 29, 2, 30, 7, 30, 2,
		31, 7, 31, 2, 32, 7, 32, 2, 33, 7, 33, 2, 34, 7, 34, 2, 35, 7, 35, 2, 36,
		7, 36, 2, 37, 7, 37, 2, 38, 7, 38, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
		1, 2, 1, 3, 1, 3, 1, 3, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 4, 1, 5, 1, 5,
		1, 5, 1, 5, 1, 6, 1, 6, 1, 6, 1, 6, 1, 6, 1, 7, 1, 7, 1, 7, 1, 7, 1, 8,
		1, 8, 1, 8, 1, 9, 1, 9, 1, 9, 1, 9, 1, 9, 1, 10, 1, 10, 1, 10, 1, 11, 1,
		11, 1, 11, 1, 11, 1, 12, 1, 12, 1, 12, 1, 12, 1, 12, 1, 13, 1, 13, 1, 13,
		1, 13, 1, 13, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 14, 1, 15, 1,
		15, 1, 16, 1, 16, 1, 16, 1, 17, 1, 17, 1, 17, 1, 18, 1, 18, 1, 19, 1, 19,
		1, 19, 1, 20, 1, 20, 1, 21, 1, 21, 1, 21, 1, 22, 1, 22, 1, 23, 1, 23, 1,
		24, 1, 24, 1, 25, 1, 25, 1, 26, 1, 26, 1, 27, 1, 27, 1, 28, 4, 28, 184,
		8, 28, 11, 28, 12, 28, 185, 1, 29, 4, 29, 189, 8, 29, 11, 29, 12, 29, 190,
		1, 29, 1, 29, 5, 29, 195, 8, 29, 10, 29, 12, 29, 198, 9, 29, 3, 29, 200,
		8, 29, 1, 29, 1, 29, 4, 29, 204, 8, 29, 11, 29, 12, 29, 205, 3, 29, 208,
		8, 29, 1, 29, 1, 29, 3, 29, 212, 8, 29, 1, 29, 4, 29, 215, 8, 29, 11, 29,
		12, 29, 216, 3, 29, 219, 8, 29, 1, 29, 1, 29, 1, 29, 1, 29, 4, 29, 225,
		8, 29, 11, 29, 12, 29, 226, 3, 29, 229, 8, 29, 1, 30, 1, 30, 1, 30, 1,
		30, 5, 30, 235, 8, 30, 10, 30, 12, 30, 238, 9, 30, 1, 30, 1, 30, 1, 31,
		1, 31, 1, 31, 1, 31, 5, 31, 246, 8, 31, 10, 31, 12, 31, 249, 9, 31, 1,
		31, 1, 31, 1, 32, 4, 32, 254, 8, 32, 11, 32, 12, 32, 255, 1, 33, 1, 33,
		1, 33, 1, 33, 5, 33, 262, 8, 33, 10, 33, 12, 33, 265, 9, 33, 1, 33, 3,
		33, 268, 8, 33, 1, 33, 1, 33, 3, 33, 272, 8, 33, 1, 33, 1, 33, 1, 34, 1,
		34, 1, 34, 1, 34, 5, 34, 280, 8, 34, 10, 34, 12, 34, 283, 9, 34, 1, 34,
		1, 34, 1, 34, 1, 34, 1, 34, 1, 35, 1, 35, 1, 35, 1, 35, 1, 36, 1, 36, 1,
		37, 1, 37, 1, 38, 1, 38, 1, 281, 0, 39, 1, 1, 3, 2, 5, 3, 7, 4, 9, 5, 11,
		6, 13, 7, 15, 8, 17, 9, 19, 10, 21, 11, 23, 12, 25, 13, 27, 14, 29, 15,
		31, 16, 33, 17, 35, 18, 37, 19, 39, 20, 41, 21, 43, 22, 45, 23, 47, 24,
		49, 25, 51, 26, 53, 27, 55, 28, 57, 29, 59, 30, 61, 31, 63, 32, 65, 33,
		67, 34, 69, 35, 71, 36, 73, 37, 75, 0, 77, 0, 1, 0, 28, 2, 0, 83, 83, 115,
		115, 2, 0, 69, 69, 101, 101, 2, 0, 76, 76, 108, 108, 2, 0, 67, 67, 99,
		99, 2, 0, 84, 84, 116, 116, 2, 0, 87, 87, 119, 119, 2, 0, 72, 72, 104,
		104, 2, 0, 82, 82, 114, 114, 2, 0, 79, 79, 111, 111, 2, 0, 68, 68, 100,
		100, 2, 0, 66, 66, 98, 98, 2, 0, 89, 89, 121, 121, 2, 0, 73, 73, 105, 105,
		2, 0, 77, 77, 109, 109, 2, 0, 65, 65, 97, 97, 2, 0, 78, 78, 110, 110, 2,
		0, 75, 75, 107, 107, 2, 0, 85, 85, 117, 117, 2, 0, 86, 86, 118, 118, 2,
		0, 43, 43, 45, 45, 2, 0, 88, 88, 120, 120, 1, 0, 39, 39, 1, 0, 96, 96,
		4, 0, 48, 57, 65, 90, 95, 95, 97, 122, 2, 0, 10, 10, 13, 13, 3, 0, 9, 11,
		13, 13, 32, 32, 3, 0, 48, 57, 65, 70, 97, 102, 1, 0, 48, 57, 316, 0, 1,
		1, 0, 0, 0, 0, 3, 1, 0, 0, 0, 0, 5, 1, 0, 0, 0, 0, 7, 1, 0, 0, 0, 0, 9,
		1, 0, 0, 0, 0, 11, 1, 0, 0, 0, 0, 13, 1, 0, 0, 0, 0, 15, 1, 0, 0, 0, 0,
		17, 1, 0, 0, 0, 0, 19, 1, 0, 0, 0, 0, 21, 1, 0, 0, 0, 0, 23, 1, 0, 0, 0,
		0, 25, 1, 0, 0, 0, 0, 27, 1, 0, 0, 0, 0, 29, 1, 0, 0, 0, 0, 31, 1, 0, 0,
		0, 0, 33, 1, 0, 0, 0, 0, 35, 1, 0, 0, 0, 0, 37, 1, 0, 0, 0, 0, 39, 1, 0,
		0, 0, 0, 41, 1, 0, 0, 0, 0, 43, 1, 0, 0, 0, 0, 45, 1, 0, 0, 0, 0, 47, 1,
		0, 0, 0, 0, 49, 1, 0, 0, 0, 0, 51, 1, 0, 0, 0, 0, 53, 1, 0, 0, 0, 0, 55,
		1, 0, 0, 0, 0, 57, 1, 0, 0, 0, 0, 59, 1, 0, 0, 0, 0, 61, 1, 0, 0, 0, 0,
		63, 1, 0, 0, 0, 0, 65, 1, 0, 0, 0, 0, 67, 1, 0, 0, 0, 0, 69, 1, 0, 0, 0,
		0, 71, 1, 0, 0, 0, 0, 73, 1, 0, 0, 0, 1, 79, 1, 0, 0, 0, 3, 86, 1, 0, 0,
		0, 5, 92, 1, 0, 0, 0, 7, 98, 1, 0, 0, 0, 9, 101, 1, 0, 0, 0, 11, 107, 1,
		0, 0, 0, 13, 111, 1, 0, 0, 0, 15, 116, 1, 0, 0, 0, 17, 120, 1, 0, 0, 0,
		19, 123, 1, 0, 0, 0, 21, 128, 1, 0, 0, 0, 23, 131, 1, 0, 0, 0, 25, 135,
		1, 0, 0, 0, 27, 140, 1, 0, 0, 0, 29, 145, 1, 0, 0, 0, 31, 152, 1, 0, 0,
		0, 33, 154, 1, 0, 0, 0, 35, 157, 1, 0, 0, 0, 37, 160, 1, 0, 0, 0, 39, 162,
		1, 0, 0, 0, 41, 165, 1, 0, 0, 0, 43, 167, 1, 0, 0, 0, 45, 170, 1, 0, 0,
		0, 47, 172, 1, 0, 0, 0, 49, 174, 1, 0, 0, 0, 51, 176, 1, 0, 0, 0, 53, 178,
		1, 0, 0, 0, 55, 180, 1, 0, 0, 0, 57, 183, 1, 0, 0, 0, 59, 228, 1, 0, 0,
		0, 61, 230, 1, 0, 0, 0, 63, 241, 1, 0, 0, 0, 65, 253, 1, 0, 0, 0, 67, 257,
		1, 0, 0, 0, 69, 275, 1, 0, 0, 0, 71, 289, 1, 0, 0, 0, 73, 293, 1, 0, 0,
		0, 75, 295, 1, 0, 0, 0, 77, 297, 1, 0, 0, 0, 79, 80, 7, 0, 0, 0, 80, 81,
		7, 1, 0, 0, 81, 82, 7, 2, 0, 0, 82, 83, 7, 1, 0, 0, 83, 84, 7, 3, 0, 0,
		84, 85, 7, 4, 0, 0, 85, 2, 1, 0, 0, 0, 86, 87, 7, 5, 0, 0, 87, 88, 7, 6,
		0, 0, 88, 89, 7, 1, 0, 0, 89, 90, 7, 7, 0, 0, 90, 91, 7, 1, 0, 0, 91, 4,
		1, 0, 0, 0, 92, 93, 7, 8, 0, 0, 93, 94, 7, 7, 0, 0, 94, 95, 7, 9, 0, 0,
		95, 96, 7, 1, 0, 0, 96, 97, 7, 7, 0, 0, 97, 6, 1, 0, 0, 0, 98, 99, 7, 10,
		0, 0, 99, 100, 7, 11, 0, 0, 100, 8, 1, 0, 0, 0, 101, 102, 7, 2, 0, 0, 102,
		103, 7, 12, 0, 0, 103, 104, 7, 13, 0, 0, 104, 105, 7, 12, 0, 0, 105, 106,
		7, 4, 0, 0, 106, 10, 1, 0, 0, 0, 107, 108, 7, 14, 0, 0, 108, 109, 7, 0,
		0, 0, 109, 110, 7, 3, 0, 0, 110, 12, 1, 0, 0, 0, 111, 112, 7, 9, 0, 0,
		112, 113, 7, 1, 0, 0, 113, 114, 7, 0, 0, 0, 114, 115, 7, 3, 0, 0, 115,
		14, 1, 0, 0, 0, 116, 117, 7, 14, 0, 0, 117, 118, 7, 15, 0, 0, 118, 119,
		7, 9, 0, 0, 119, 16, 1, 0, 0, 0, 120, 121, 7, 8, 0, 0, 121, 122, 7, 7,
		0, 0, 122, 18, 1, 0, 0, 0, 123, 124, 7, 2, 0, 0, 124, 125, 7, 12, 0, 0,
		125, 126, 7, 16, 0, 0, 126, 127, 7, 1, 0, 0, 127, 20, 1, 0, 0, 0, 128,
		129, 7, 12, 0, 0, 129, 130, 7, 0, 0, 0, 130, 22, 1, 0, 0, 0, 131, 132,
		7, 15, 0, 0, 132, 133, 7, 8, 0, 0, 133, 134, 7, 4, 0, 0, 134, 24, 1, 0,
		0, 0, 135, 136, 7, 15, 0, 0, 136, 137, 7, 17, 0, 0, 137, 138, 7, 2, 0,
		0, 138, 139, 7, 2, 0, 0, 139, 26, 1, 0, 0, 0, 140, 141, 5, 95, 0, 0, 141,
		142, 7, 16, 0, 0, 142, 143, 7, 1, 0, 0, 143, 144, 7, 11, 0, 0, 144, 28,
		1, 0, 0, 0, 145, 146, 5, 95, 0, 0, 146, 147, 7, 18, 0, 0, 147, 148, 7,
		14, 0, 0, 148, 149, 7, 2, 0, 0, 149, 150, 7, 17, 0, 0, 150, 151, 7, 1,
		0, 0, 151, 30, 1, 0, 0, 0, 152, 153, 5, 61, 0, 0, 153, 32, 1, 0, 0, 0,
		154, 155, 5, 61, 0, 0, 155, 156, 5, 61, 0, 0, 156, 34, 1, 0, 0, 0, 157,
		158, 5, 33, 0, 0, 158, 159, 5, 61, 0, 0, 159, 36, 1, 0, 0, 0, 160, 161,
		5, 62, 0, 0, 161, 38, 1, 0, 0, 0, 162, 163, 5, 62, 0, 0, 163, 164, 5, 61,
		0, 0, 164, 40, 1, 0, 0, 0, 165, 166, 5, 60, 0, 0, 166, 42, 1, 0, 0, 0,
		167, 168, 5, 60, 0, 0, 168, 169, 5, 61, 0, 0, 169, 44, 1, 0, 0, 0, 170,
		171, 5, 40, 0, 0, 171, 46, 1, 0, 0, 0, 172, 173, 5, 41, 0, 0, 173, 48,
		1, 0, 0, 0, 174, 175, 5, 44, 0, 0, 175, 50, 1, 0, 0, 0, 176, 177, 5, 46,
		0, 0, 177, 52, 1, 0, 0, 0, 178, 179, 5, 39, 0, 0, 179, 54, 1, 0, 0, 0,
		180, 181, 5, 42, 0, 0, 181, 56, 1, 0, 0, 0, 182, 184, 3, 77, 38, 0, 183,
		182, 1, 0, 0, 0, 184, 185, 1, 0, 0, 0, 185, 183, 1, 0, 0, 0, 185, 186,
		1, 0, 0, 0, 186, 58, 1, 0, 0, 0, 187, 189, 3, 77, 38, 0, 188, 187, 1, 0,
		0, 0, 189, 190, 1, 0, 0, 0, 190, 188, 1, 0, 0, 0, 190, 191, 1, 0, 0, 0,
		191, 199, 1, 0, 0, 0, 192, 196, 5, 46, 0, 0, 193, 195, 3, 77, 38, 0, 194,
		193, 1, 0, 0, 0, 195, 198, 1, 0, 0, 0, 196, 194, 1, 0, 0, 0, 196, 197,
		1, 0, 0, 0, 197, 200, 1, 0, 0, 0, 198, 196, 1, 0, 0, 0, 199, 192, 1, 0,
		0, 0, 199, 200, 1, 0, 0, 0, 200, 208, 1, 0, 0, 0, 201, 203, 5, 46, 0, 0,
		202, 204, 3, 77, 38, 0, 203, 202, 1, 0, 0, 0, 204, 205, 1, 0, 0, 0, 205,
		203, 1, 0, 0, 0, 205, 206, 1, 0, 0, 0, 206, 208, 1, 0, 0, 0, 207, 188,
		1, 0, 0, 0, 207, 201, 1, 0, 0, 0, 208, 218, 1, 0, 0, 0, 209, 211, 7, 1,
		0, 0, 210, 212, 7, 19, 0, 0, 211, 210, 1, 0, 0, 0, 211, 212, 1, 0, 0, 0,
		212, 214, 1, 0, 0, 0, 213, 215, 3, 77, 38, 0, 214, 213, 1, 0, 0, 0, 215,
		216, 1, 0, 0, 0, 216, 214, 1, 0, 0, 0, 216, 217, 1, 0, 0, 0, 217, 219,
		1, 0, 0, 0, 218, 209, 1, 0, 0, 0, 218, 219, 1, 0, 0, 0, 219, 229, 1, 0,
		0, 0, 220, 221, 5, 48, 0, 0, 221, 222, 7, 20, 0, 0, 222, 224, 1, 0, 0,
		0, 223, 225, 3, 75, 37, 0, 224, 223, 1, 0, 0, 0, 225, 226, 1, 0, 0, 0,
		226, 224, 1, 0, 0, 0, 226, 227, 1, 0, 0, 0, 227, 229, 1, 0, 0, 0, 228,
		207, 1, 0, 0, 0, 228, 220, 1, 0, 0, 0, 229, 60, 1, 0, 0, 0, 230, 236, 5,
		39, 0, 0, 231, 235, 8, 21, 0, 0, 232, 233, 5, 39, 0, 0, 233, 235, 5, 39,
		0, 0, 234, 231, 1, 0, 0, 0, 234, 232, 1, 0, 0, 0, 235, 238, 1, 0, 0, 0,
		236, 234, 1, 0, 0, 0, 236, 237, 1, 0, 0, 0, 237, 239, 1, 0, 0, 0, 238,
		236, 1, 0, 0, 0, 239, 240, 5, 39, 0, 0, 240, 62, 1, 0, 0, 0, 241, 247,
		5, 96, 0, 0, 242, 246, 8, 22, 0, 0, 243, 244, 5, 96, 0, 0, 244, 246, 5,
		96, 0, 0, 245, 242, 1, 0, 0, 0, 245, 243, 1, 0, 0, 0, 246, 249, 1, 0, 0,
		0, 247, 245, 1, 0, 0, 0, 247, 248, 1, 0, 0, 0, 248, 250, 1, 0, 0, 0, 249,
		247, 1, 0, 0, 0, 250, 251, 5, 96, 0, 0, 251, 64, 1, 0, 0, 0, 252, 254,
		7, 23, 0, 0, 253, 252, 1, 0, 0, 0, 254, 255, 1, 0, 0, 0, 255, 253, 1, 0,
		0, 0, 255, 256, 1, 0, 0, 0, 256, 66, 1, 0, 0, 0, 257, 258, 5, 45, 0, 0,
		258, 259, 5, 45, 0, 0, 259, 263, 1, 0, 0, 0, 260, 262, 8, 24, 0, 0, 261,
		260, 1, 0, 0, 0, 262, 265, 1, 0, 0, 0, 263, 261, 1, 0, 0, 0, 263, 264,
		1, 0, 0, 0, 264, 271, 1, 0, 0, 0, 265, 263, 1, 0, 0, 0, 266, 268, 5, 13,
		0, 0, 267, 266, 1, 0, 0, 0, 267, 268, 1, 0, 0, 0, 268, 269, 1, 0, 0, 0,
		269, 272, 5, 10, 0, 0, 270, 272, 5, 0, 0, 1, 271, 267, 1, 0, 0, 0, 271,
		270, 1, 0, 0, 0, 272, 273, 1, 0, 0, 0, 273, 274, 6, 33, 0, 0, 274, 68,
		1, 0, 0, 0, 275, 276, 5, 47, 0, 0, 276, 277, 5, 42, 0, 0, 277, 281, 1,
		0, 0, 0, 278, 280, 9, 0, 0, 0, 279, 278, 1, 0, 0, 0, 280, 283, 1, 0, 0,
		0, 281, 282, 1, 0, 0, 0, 281, 279, 1, 0, 0, 0, 282, 284, 1, 0, 0, 0, 283,
		281, 1, 0, 0, 0, 284, 285, 5, 42, 0, 0, 285, 286, 5, 47, 0, 0, 286, 287,
		1, 0, 0, 0, 287, 288, 6, 34, 0, 0, 288, 70, 1, 0, 0, 0, 289, 290, 7, 25,
		0, 0, 290, 291, 1, 0, 0, 0, 291, 292, 6, 35, 0, 0, 292, 72, 1, 0, 0, 0,
		293, 294, 9, 0, 0, 0, 294, 74, 1, 0, 0, 0, 295, 296, 7, 26, 0, 0, 296,
		76, 1, 0, 0, 0, 297, 298, 7, 27, 0, 0, 298, 78, 1, 0, 0, 0, 21, 0, 185,
		190, 196, 199, 205, 207, 211, 216, 218, 226, 228, 234, 236, 245, 247, 255,
		263, 267, 271, 281, 1, 0, 1, 0,
	}
	deserializer := antlr.NewATNDeserializer(nil)
	staticData.atn = deserializer.Deserialize(staticData.serializedATN)
	atn := staticData.atn
	staticData.decisionToDFA = make([]*antlr.DFA, len(atn.DecisionToState))
	decisionToDFA := staticData.decisionToDFA
	for index, state := range atn.DecisionToState {
		decisionToDFA[index] = antlr.NewDFA(state, index)
	}
}

// dsqlLexerInit initializes any static state used to implement dsqlLexer. By default the
// static state used to implement the lexer is lazily initialized during the first call to
// NewdsqlLexer(). You can call this function if you wish to initialize the static state ahead
// of time.
func DsqlLexerInit() {
	staticData := &DsqlLexerLexerStaticData
	staticData.once.Do(dsqllexerLexerInit)
}

// NewdsqlLexer produces a new lexer instance for the optional input antlr.CharStream.
func NewdsqlLexer(input antlr.CharStream) *dsqlLexer {
	DsqlLexerInit()
	l := new(dsqlLexer)
	l.BaseLexer = antlr.NewBaseLexer(input)
	staticData := &DsqlLexerLexerStaticData
	l.Interpreter = antlr.NewLexerATNSimulator(l, staticData.atn, staticData.decisionToDFA, staticData.PredictionContextCache)
	l.channelNames = staticData.ChannelNames
	l.modeNames = staticData.ModeNames
	l.RuleNames = staticData.RuleNames
	l.LiteralNames = staticData.LiteralNames
	l.SymbolicNames = staticData.SymbolicNames
	l.GrammarFileName = "dsql.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// dsqlLexer tokens.
const (
	dsqlLexerSELECT              = 1
	dsqlLexerWHERE               = 2
	dsqlLexerORDER               = 3
	dsqlLexerBY                  = 4
	dsqlLexerLIMIT               = 5
	dsqlLexerASC                 = 6
	dsqlLexerDESC                = 7
	dsqlLexerAND                 = 8
	dsqlLexerOR                  = 9
	dsqlLexerLIKE                = 10
	dsqlLexerIS                  = 11
	dsqlLexerNOT                 = 12
	dsqlLexerNULL                = 13
	dsqlLexerKEY                 = 14
	dsqlLexerVALUE               = 15
	dsqlLexerASSIGN              = 16
	dsqlLexerEQ                  = 17
	dsqlLexerNEQ                 = 18
	dsqlLexerGT                  = 19
	dsqlLexerGTE                 = 20
	dsqlLexerLT                  = 21
	dsqlLexerLTE                 = 22
	dsqlLexerLPAREN              = 23
	dsqlLexerRPAREN              = 24
	dsqlLexerCOMMA               = 25
	dsqlLexerDOT                 = 26
	dsqlLexerQUOTE               = 27
	dsqlLexerSTAR                = 28
	dsqlLexerNUMBER              = 29
	dsqlLexerNUMERIC_LITERAL     = 30
	dsqlLexerSTRING_LITERAL      = 31
	dsqlLexerBACKTICK_LITERAL    = 32
	dsqlLexerIDENTIFIER          = 33
	dsqlLexerSINGLE_LINE_COMMENT = 34
	dsqlLexerMULTILINE_COMMENT   = 35
	dsqlLexerSPACES              = 36
	dsqlLexerUNEXPECTED_CHAR     = 37
)
