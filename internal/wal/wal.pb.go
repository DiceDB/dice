// Copyright (c) 2022-present, DiceDB contributors
// All rights reserved. Licensed under the BSD 3-Clause License. See LICENSE file in the project root for full license information.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.28.3
// source: internal/wal/wal.proto

package wal

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WALEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version           string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`                                                 // Version of the WAL entry (e.g., "v1.0")
	LogSequenceNumber uint64 `protobuf:"varint,2,opt,name=log_sequence_number,json=logSequenceNumber,proto3" json:"log_sequence_number,omitempty"` // Log Sequence Number (LSN)
	Data              []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`                                                       // The actual data being logged
	Crc32             uint32 `protobuf:"varint,4,opt,name=crc32,proto3" json:"crc32,omitempty"`                                                    // Cyclic Redundancy Check for integrity
	Timestamp         int64  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                            // Timestamp for the WAL entry (epoch time in nanoseconds)
}

func (x *WALEntry) Reset() {
	*x = WALEntry{}
	mi := &file_internal_wal_wal_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WALEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WALEntry) ProtoMessage() {}

func (x *WALEntry) ProtoReflect() protoreflect.Message {
	mi := &file_internal_wal_wal_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WALEntry.ProtoReflect.Descriptor instead.
func (*WALEntry) Descriptor() ([]byte, []int) {
	return file_internal_wal_wal_proto_rawDescGZIP(), []int{0}
}

func (x *WALEntry) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *WALEntry) GetLogSequenceNumber() uint64 {
	if x != nil {
		return x.LogSequenceNumber
	}
	return 0
}

func (x *WALEntry) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WALEntry) GetCrc32() uint32 {
	if x != nil {
		return x.Crc32
	}
	return 0
}

func (x *WALEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_internal_wal_wal_proto protoreflect.FileDescriptor

var file_internal_wal_wal_proto_rawDesc = []byte{
	0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x77, 0x61, 0x6c, 0x2f, 0x77,
	0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x77, 0x61, 0x6c, 0x22, 0x9c, 0x01,
	0x0a, 0x08, 0x57, 0x41, 0x4c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x5f, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x11, 0x6c, 0x6f, 0x67, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x72, 0x63, 0x33,
	0x32, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x63, 0x72, 0x63, 0x33, 0x32, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0e, 0x5a, 0x0c,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x77, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_wal_wal_proto_rawDescOnce sync.Once
	file_internal_wal_wal_proto_rawDescData = file_internal_wal_wal_proto_rawDesc
)

func file_internal_wal_wal_proto_rawDescGZIP() []byte {
	file_internal_wal_wal_proto_rawDescOnce.Do(func() {
		file_internal_wal_wal_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_wal_wal_proto_rawDescData)
	})
	return file_internal_wal_wal_proto_rawDescData
}

var file_internal_wal_wal_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_internal_wal_wal_proto_goTypes = []any{
	(*WALEntry)(nil), // 0: wal.WALEntry
}
var file_internal_wal_wal_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_internal_wal_wal_proto_init() }
func file_internal_wal_wal_proto_init() {
	if File_internal_wal_wal_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_wal_wal_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_internal_wal_wal_proto_goTypes,
		DependencyIndexes: file_internal_wal_wal_proto_depIdxs,
		MessageInfos:      file_internal_wal_wal_proto_msgTypes,
	}.Build()
	File_internal_wal_wal_proto = out.File
	file_internal_wal_wal_proto_rawDesc = nil
	file_internal_wal_wal_proto_goTypes = nil
	file_internal_wal_wal_proto_depIdxs = nil
}
